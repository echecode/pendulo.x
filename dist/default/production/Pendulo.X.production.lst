

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Sep 28 00:20:20 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataCOMRAM
    70  002EAE                     __pidataCOMRAM:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _dutyPWMlimitTimeout
    74  002EAE  0001               	dw	1
    75  002EB0  0000               	dw	0
    76                           
    77                           ;initializer for _setPoint
    78  002EB2  0200               	dw	512
    79  002EB4  0000               	dw	0
    80                           
    81                           	psect	idataBANK0
    82  002E62                     __pidataBANK0:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _Kp
    86  002E62  03E8               	dw	1000
    87  002E64  0000               	dw	0
    88                           
    89                           ;initializer for _Kp2
    90  002E66  0001               	dw	1
    91  002E68  0000               	dw	0
    92                           
    93                           ;initializer for _dutyPWMlimit
    94  002E6A  0300               	dw	768
    95  002E6C  0000               	dw	0
    96                           
    97                           ;initializer for _posicion
    98  002E6E  0200               	dw	512
    99  002E70  0000               	dw	0
   100                           
   101                           ;initializer for _controlAntesDelStep
   102  002E72  01                 	db	1
   103                           
   104                           ;initializer for _controlOn
   105  002E73  01                 	db	1
   106                           
   107                           	psect	idataBANK1
   108  002EB6                     __pidataBANK1:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _dutyPWMlimitCounter
   112  002EB6  0001               	dw	1
   113  002EB8  0000               	dw	0
   114  0000                     _ADCON0	set	4034
   115  0000                     _ADCON0bits	set	4034
   116  0000                     _ADCON1	set	4033
   117  0000                     _ADCON2	set	4032
   118  0000                     _ADRESH	set	4036
   119  0000                     _ADRESL	set	4035
   120  0000                     _BAUDCONbits	set	4024
   121  0000                     _CCP1CON	set	4029
   122  0000                     _CCPR1L	set	4030
   123  0000                     _INTCON2bits	set	4081
   124  0000                     _INTCONbits	set	4082
   125  0000                     _IPR1bits	set	3999
   126  0000                     _PIE1bits	set	3997
   127  0000                     _PIR1bits	set	3998
   128  0000                     _PORTDbits	set	3971
   129  0000                     _PR2	set	4043
   130  0000                     _RCONbits	set	4048
   131  0000                     _RCREG	set	4014
   132  0000                     _RCSTA	set	4011
   133  0000                     _RCSTAbits	set	4011
   134  0000                     _SPBRG	set	4015
   135  0000                     _SPBRGH	set	4016
   136  0000                     _T1CON	set	4045
   137  0000                     _T1CONbits	set	4045
   138  0000                     _T2CON	set	4042
   139  0000                     _T2CONbits	set	4042
   140  0000                     _TMR1H	set	4047
   141  0000                     _TMR1L	set	4046
   142  0000                     _TMR2	set	4044
   143  0000                     _TRISA	set	3986
   144  0000                     _TRISB	set	3987
   145  0000                     _TRISC	set	3988
   146  0000                     _TRISCbits	set	3988
   147  0000                     _TRISD	set	3989
   148  0000                     _TXREG	set	4013
   149  0000                     _TXSTA	set	4012
   150  0000                     _TXSTAbits	set	4012
   151  0000                     _TMR1IE	set	31976
   152                           
   153                           	psect	smallconst
   154  000800                     __psmallconst:
   155                           	opt stack 0
   156  000800                     __stringdata:
   157                           	opt stack 0
   158  000800                     STR_22:
   159  000800  22                 	db	34
   160  000801  6B                 	db	107	;'k'
   161  000802  64                 	db	100	;'d'
   162  000803  32                 	db	50	;'2'
   163  000804  22                 	db	34
   164  000805  3A                 	db	58	;':'
   165  000806  00                 	db	0
   166  000807                     STR_20:
   167  000807  22                 	db	34
   168  000808  6B                 	db	107	;'k'
   169  000809  69                 	db	105	;'i'
   170  00080A  32                 	db	50	;'2'
   171  00080B  22                 	db	34
   172  00080C  3A                 	db	58	;':'
   173  00080D  00                 	db	0
   174  00080E                     STR_18:
   175  00080E  22                 	db	34
   176  00080F  6B                 	db	107	;'k'
   177  000810  70                 	db	112	;'p'
   178  000811  32                 	db	50	;'2'
   179  000812  22                 	db	34
   180  000813  3A                 	db	58	;':'
   181  000814  00                 	db	0
   182  000815                     STR_24:
   183  000815  22                 	db	34
   184  000816  63                 	db	99	;'c'
   185  000817  4F                 	db	79	;'O'
   186  000818  6E                 	db	110	;'n'
   187  000819  22                 	db	34
   188  00081A  3A                 	db	58	;':'
   189  00081B  00                 	db	0
   190  00081C                     STR_16:
   191  00081C  22                 	db	34
   192  00081D  6B                 	db	107	;'k'
   193  00081E  64                 	db	100	;'d'
   194  00081F  22                 	db	34
   195  000820  3A                 	db	58	;':'
   196  000821  00                 	db	0
   197  000822                     STR_14:
   198  000822  22                 	db	34
   199  000823  6B                 	db	107	;'k'
   200  000824  69                 	db	105	;'i'
   201  000825  22                 	db	34
   202  000826  3A                 	db	58	;':'
   203  000827  00                 	db	0
   204  000828                     STR_32:
   205  000828  22                 	db	34
   206  000829  64                 	db	100	;'d'
   207  00082A  6C                 	db	108	;'l'
   208  00082B  22                 	db	34
   209  00082C  3A                 	db	58	;':'
   210  00082D  00                 	db	0
   211  00082E                     STR_30:
   212  00082E  22                 	db	34
   213  00082F  64                 	db	100	;'d'
   214  000830  6D                 	db	109	;'m'
   215  000831  22                 	db	34
   216  000832  3A                 	db	58	;':'
   217  000833  00                 	db	0
   218  000834                     STR_12:
   219  000834  22                 	db	34
   220  000835  6B                 	db	107	;'k'
   221  000836  70                 	db	112	;'p'
   222  000837  22                 	db	34
   223  000838  3A                 	db	58	;':'
   224  000839  00                 	db	0
   225  00083A                     STR_26:
   226  00083A  22                 	db	34
   227  00083B  64                 	db	100	;'d'
   228  00083C  73                 	db	115	;'s'
   229  00083D  22                 	db	34
   230  00083E  3A                 	db	58	;':'
   231  00083F  00                 	db	0
   232  000840                     STR_28:
   233  000840  22                 	db	34
   234  000841  70                 	db	112	;'p'
   235  000842  73                 	db	115	;'s'
   236  000843  22                 	db	34
   237  000844  3A                 	db	58	;':'
   238  000845  00                 	db	0
   239  000846                     STR_34:
   240  000846  22                 	db	34
   241  000847  64                 	db	100	;'d'
   242  000848  74                 	db	116	;'t'
   243  000849  22                 	db	34
   244  00084A  3A                 	db	58	;':'
   245  00084B  00                 	db	0
   246  00084C                     STR_4:
   247  00084C  22                 	db	34
   248  00084D  6C                 	db	108	;'l'
   249  00084E  74                 	db	116	;'t'
   250  00084F  22                 	db	34
   251  000850  3A                 	db	58	;':'
   252  000851  00                 	db	0
   253  000852                     STR_8:
   254  000852  22                 	db	34
   255  000853  63                 	db	99	;'c'
   256  000854  22                 	db	34
   257  000855  3A                 	db	58	;':'
   258  000856  00                 	db	0
   259  000857                     STR_6:
   260  000857  22                 	db	34
   261  000858  65                 	db	101	;'e'
   262  000859  22                 	db	34
   263  00085A  3A                 	db	58	;':'
   264  00085B  00                 	db	0
   265  00085C                     STR_10:
   266  00085C  22                 	db	34
   267  00085D  72                 	db	114	;'r'
   268  00085E  22                 	db	34
   269  00085F  3A                 	db	58	;':'
   270  000860  00                 	db	0
   271  000861                     STR_2:
   272  000861  22                 	db	34
   273  000862  74                 	db	116	;'t'
   274  000863  22                 	db	34
   275  000864  3A                 	db	58	;':'
   276  000865  00                 	db	0
   277  000866                     STR_36:
   278  000866  0A                 	db	10
   279  000867  0D                 	db	13
   280  000868  00                 	db	0
   281  000869                     STR_3:
   282  000869  2C                 	db	44
   283  00086A  00                 	db	0
   284  00086B                     STR_1:
   285  00086B  7B                 	db	123
   286  00086C  00                 	db	0
   287  00086D                     STR_35:
   288  00086D  7D                 	db	125
   289  00086E  00                 	db	0
   290  00086F                     __end_of__stringdata:
   291                           	opt stack 0
   292                           
   293                           ; #config settings
   294  00086F  00                 	db	0	; dummy byte at the end
   295  0000                     
   296                           	psect	cinit
   297  002780                     __pcinit:
   298                           	opt stack 0
   299  002780                     start_initialization:
   300                           	opt stack 0
   301  002780                     __initialization:
   302                           	opt stack 0
   303                           
   304                           ; Clear objects allocated to BANK1 (22 bytes)
   305  002780  EE01  F03D         	lfsr	0,__pbssBANK1
   306  002784  0E16               	movlw	22
   307  002786                     clear_0:
   308  002786  6AEE               	clrf	postinc0,c
   309  002788  06E8               	decf	wreg,f,c
   310  00278A  E1FD               	bnz	clear_0
   311                           
   312                           ; Clear objects allocated to BANK0 (49 bytes)
   313  00278C  EE00  F0B0         	lfsr	0,__pbssBANK0
   314  002790  0E31               	movlw	49
   315  002792                     clear_1:
   316  002792  6AEE               	clrf	postinc0,c
   317  002794  06E8               	decf	wreg,f,c
   318  002796  E1FD               	bnz	clear_1
   319                           
   320                           ; Clear objects allocated to COMRAM (24 bytes)
   321  002798  EE00  F021         	lfsr	0,__pbssCOMRAM
   322  00279C  0E18               	movlw	24
   323  00279E                     clear_2:
   324  00279E  6AEE               	clrf	postinc0,c
   325  0027A0  06E8               	decf	wreg,f,c
   326  0027A2  E1FD               	bnz	clear_2
   327                           
   328                           ; Initialize objects allocated to BANK1 (4 bytes)
   329                           ; load TBLPTR registers with __pidataBANK1
   330  0027A4  0EB6               	movlw	low __pidataBANK1
   331  0027A6  6EF6               	movwf	tblptrl,c
   332  0027A8  0E2E               	movlw	high __pidataBANK1
   333  0027AA  6EF7               	movwf	tblptrh,c
   334  0027AC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   335  0027AE  6EF8               	movwf	tblptru,c
   336  0027B0  EE01  F053         	lfsr	0,__pdataBANK1
   337  0027B4  EE10 F004          	lfsr	1,4
   338  0027B8                     copy_data0:
   339  0027B8  0009               	tblrd		*+
   340  0027BA  CFF5 FFEE          	movff	tablat,postinc0
   341  0027BE  50E5               	movf	postdec1,w,c
   342  0027C0  50E1               	movf	fsr1l,w,c
   343  0027C2  E1FA               	bnz	copy_data0
   344                           
   345                           ; Initialize objects allocated to BANK0 (18 bytes)
   346                           ; load TBLPTR registers with __pidataBANK0
   347  0027C4  0E62               	movlw	low __pidataBANK0
   348  0027C6  6EF6               	movwf	tblptrl,c
   349  0027C8  0E2E               	movlw	high __pidataBANK0
   350  0027CA  6EF7               	movwf	tblptrh,c
   351  0027CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   352  0027CE  6EF8               	movwf	tblptru,c
   353  0027D0  EE00  F0E1         	lfsr	0,__pdataBANK0
   354  0027D4  EE10 F012          	lfsr	1,18
   355  0027D8                     copy_data1:
   356  0027D8  0009               	tblrd		*+
   357  0027DA  CFF5 FFEE          	movff	tablat,postinc0
   358  0027DE  50E5               	movf	postdec1,w,c
   359  0027E0  50E1               	movf	fsr1l,w,c
   360  0027E2  E1FA               	bnz	copy_data1
   361                           
   362                           ; Initialize objects allocated to COMRAM (8 bytes)
   363                           ; load TBLPTR registers with __pidataCOMRAM
   364  0027E4  0EAE               	movlw	low __pidataCOMRAM
   365  0027E6  6EF6               	movwf	tblptrl,c
   366  0027E8  0E2E               	movlw	high __pidataCOMRAM
   367  0027EA  6EF7               	movwf	tblptrh,c
   368  0027EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   369  0027EE  6EF8               	movwf	tblptru,c
   370  0027F0  EE00  F039         	lfsr	0,__pdataCOMRAM
   371  0027F4  EE10 F008          	lfsr	1,8
   372  0027F8                     copy_data2:
   373  0027F8  0009               	tblrd		*+
   374  0027FA  CFF5 FFEE          	movff	tablat,postinc0
   375  0027FE  50E5               	movf	postdec1,w,c
   376  002800  50E1               	movf	fsr1l,w,c
   377  002802  E1FA               	bnz	copy_data2
   378  002804                     end_of_initialization:
   379                           	opt stack 0
   380  002804                     __end_of__initialization:
   381                           	opt stack 0
   382  002804  0E00               	movlw	low (__Lmediumconst shr (0+16))
   383  002806  6EF8               	movwf	tblptru,c
   384  002808  0100               	movlb	0
   385  00280A  EFFD  F00B         	goto	_main	;jump to C main() function
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssCOMRAM
   396  000021                     __pbssCOMRAM:
   397                           	opt stack 0
   398  000021                     _ctrl:
   399                           	opt stack 0
   400  000021                     	ds	4
   401  000025                     _contadorCiclosControlOff:
   402                           	opt stack 0
   403  000025                     	ds	2
   404  000027                     _USART_Status:
   405                           	opt stack 0
   406  000027                     	ds	1
   407  000028                     _dentroDeStep:
   408                           	opt stack 0
   409  000028                     	ds	1
   410  000029                     _iError1:
   411                           	opt stack 0
   412  000029                     	ds	4
   413  00002D                     _iError2:
   414                           	opt stack 0
   415  00002D                     	ds	4
   416  000031                     controlador@lastError1:
   417                           	opt stack 0
   418  000031                     	ds	4
   419  000035                     controlador@lastError2:
   420                           	opt stack 0
   421  000035                     	ds	4
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           postdec1	equ	0xFE5
   429                           fsr1l	equ	0xFE1
   430                           
   431                           	psect	dataCOMRAM
   432  000039                     __pdataCOMRAM:
   433                           	opt stack 0
   434  000039                     _dutyPWMlimitTimeout:
   435                           	opt stack 0
   436  000039                     	ds	4
   437  00003D                     _setPoint:
   438                           	opt stack 0
   439  00003D                     	ds	4
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	bssBANK0
   450  0000B0                     __pbssBANK0:
   451                           	opt stack 0
   452  0000B0                     _Kd:
   453                           	opt stack 0
   454  0000B0                     	ds	4
   455  0000B4                     _Kd2:
   456                           	opt stack 0
   457  0000B4                     	ds	4
   458  0000B8                     _Ki:
   459                           	opt stack 0
   460  0000B8                     	ds	4
   461  0000BC                     _Ki2:
   462                           	opt stack 0
   463  0000BC                     	ds	4
   464  0000C0                     _dirStep:
   465                           	opt stack 0
   466  0000C0                     	ds	4
   467  0000C4                     _dutyPWMmin:
   468                           	opt stack 0
   469  0000C4                     	ds	4
   470  0000C8                     _error:
   471                           	opt stack 0
   472  0000C8                     	ds	4
   473  0000CC                     _lastTIK:
   474                           	opt stack 0
   475  0000CC                     	ds	4
   476  0000D0                     _potenciaStep:
   477                           	opt stack 0
   478  0000D0                     	ds	4
   479  0000D4                     _tik:
   480                           	opt stack 0
   481  0000D4                     	ds	4
   482  0000D8                     _banderaParser:
   483                           	opt stack 0
   484  0000D8                     	ds	1
   485  0000D9                     _doPID:
   486                           	opt stack 0
   487  0000D9                     	ds	1
   488  0000DA                     _globalIndexRx:
   489                           	opt stack 0
   490  0000DA                     	ds	1
   491  0000DB                     _retornoParametros:
   492                           	opt stack 0
   493  0000DB                     	ds	1
   494  0000DC                     _verbose:
   495                           	opt stack 0
   496  0000DC                     	ds	1
   497  0000DD                     _dutyPWM:
   498                           	opt stack 0
   499  0000DD                     	ds	4
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1l	equ	0xFE1
   508                           
   509                           	psect	dataBANK0
   510  0000E1                     __pdataBANK0:
   511                           	opt stack 0
   512  0000E1                     _Kp:
   513                           	opt stack 0
   514  0000E1                     	ds	4
   515  0000E5                     _Kp2:
   516                           	opt stack 0
   517  0000E5                     	ds	4
   518  0000E9                     _dutyPWMlimit:
   519                           	opt stack 0
   520  0000E9                     	ds	4
   521  0000ED                     _posicion:
   522                           	opt stack 0
   523  0000ED                     	ds	4
   524  0000F1                     _controlAntesDelStep:
   525                           	opt stack 0
   526  0000F1                     	ds	1
   527  0000F2                     _controlOn:
   528                           	opt stack 0
   529  0000F2                     	ds	1
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           
   539                           	psect	bssBANK1
   540  00013D                     __pbssBANK1:
   541                           	opt stack 0
   542  00013D                     _MessageBuffer:
   543                           	opt stack 0
   544  00013D                     	ds	10
   545  000147                     _dt:
   546                           	opt stack 0
   547  000147                     	ds	4
   548  00014B                     _tik0:
   549                           	opt stack 0
   550  00014B                     	ds	4
   551  00014F                     _tik0i:
   552                           	opt stack 0
   553  00014F                     	ds	4
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1l	equ	0xFE1
   562                           
   563                           	psect	dataBANK1
   564  000153                     __pdataBANK1:
   565                           	opt stack 0
   566  000153                     _dutyPWMlimitCounter:
   567                           	opt stack 0
   568  000153                     	ds	4
   569                           tblptru	equ	0xFF8
   570                           tblptrh	equ	0xFF7
   571                           tblptrl	equ	0xFF6
   572                           tablat	equ	0xFF5
   573                           postinc0	equ	0xFEE
   574                           wreg	equ	0xFE8
   575                           postdec1	equ	0xFE5
   576                           fsr1l	equ	0xFE1
   577                           
   578                           	psect	cstackBANK1
   579  000100                     __pcstackBANK1:
   580                           	opt stack 0
   581  000100                     ?_enviarEstadoConsola:
   582                           	opt stack 0
   583  000100                     ?_controlador:
   584                           	opt stack 0
   585  000100                     controlador@error:
   586                           	opt stack 0
   587  000100                     enviarEstadoConsola@tik:
   588                           	opt stack 0
   589                           
   590                           ; 4 bytes @ 0x0
   591  000100                     	ds	4
   592  000104                     controlador@dt:
   593                           	opt stack 0
   594  000104                     enviarEstadoConsola@error:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0x4
   598  000104                     	ds	4
   599  000108                     controlador@Kp:
   600                           	opt stack 0
   601  000108                     
   602                           ; 4 bytes @ 0x8
   603  000108                     	ds	4
   604  00010C                     controlador@Ki:
   605                           	opt stack 0
   606  00010C                     enviarEstadoConsola@ctrl:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0xC
   610  00010C                     	ds	4
   611  000110                     controlador@Kd:
   612                           	opt stack 0
   613  000110                     enviarEstadoConsola@Kp:
   614                           	opt stack 0
   615                           
   616                           ; 4 bytes @ 0x10
   617  000110                     	ds	4
   618  000114                     controlador@dutyPWM:
   619                           	opt stack 0
   620  000114                     enviarEstadoConsola@Ki:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x14
   624  000114                     	ds	2
   625  000116                     controlador@dirGiro:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x16
   629  000116                     	ds	2
   630  000118                     enviarEstadoConsola@Kd:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x18
   634  000118                     	ds	4
   635  00011C                     enviarEstadoConsola@Kp2:
   636                           	opt stack 0
   637                           
   638                           ; 4 bytes @ 0x1C
   639  00011C                     	ds	4
   640  000120                     enviarEstadoConsola@Ki2:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x20
   644  000120                     	ds	4
   645  000124                     enviarEstadoConsola@Kd2:
   646                           	opt stack 0
   647                           
   648                           ; 4 bytes @ 0x24
   649  000124                     	ds	4
   650  000128                     enviarEstadoConsola@controlOn:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x28
   654  000128                     	ds	1
   655  000129                     enviarEstadoConsola@dirStep:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x29
   659  000129                     	ds	4
   660  00012D                     enviarEstadoConsola@potenciaStep:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x2D
   664  00012D                     	ds	4
   665  000131                     enviarEstadoConsola@dutyPWMmin:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x31
   669  000131                     	ds	4
   670  000135                     enviarEstadoConsola@dutyPWMlimit:
   671                           	opt stack 0
   672                           
   673                           ; 4 bytes @ 0x35
   674  000135                     	ds	4
   675  000139                     enviarEstadoConsola@dutyPWMlimitTimeout:
   676                           	opt stack 0
   677                           
   678                           ; 4 bytes @ 0x39
   679  000139                     	ds	4
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           postdec1	equ	0xFE5
   687                           fsr1l	equ	0xFE1
   688                           
   689                           	psect	cstackBANK0
   690  000060                     __pcstackBANK0:
   691                           	opt stack 0
   692  000060                     ?_OpenADC:
   693                           	opt stack 0
   694  000060                     ?_SetChanADC:
   695                           	opt stack 0
   696  000060                     ?_SetDCPWM1:
   697                           	opt stack 0
   698  000060                     ?_OpenTimer2:
   699                           	opt stack 0
   700  000060                     ?_OpenPWM1:
   701                           	opt stack 0
   702  000060                     ?_OpenUSART:
   703                           	opt stack 0
   704  000060                     ?_OpenTimer1:
   705                           	opt stack 0
   706  000060                     ?_isdigit:
   707                           	opt stack 0
   708  000060                     ?_sendStr:
   709                           	opt stack 0
   710  000060                     ??_borrarBufferRx:
   711  000060                     ?___lwdiv:
   712                           	opt stack 0
   713  000060                     ?___lwmod:
   714                           	opt stack 0
   715  000060                     ?___wmul:
   716                           	opt stack 0
   717  000060                     ?_labs:
   718                           	opt stack 0
   719  000060                     ?___lmul:
   720                           	opt stack 0
   721  000060                     ?___aldiv:
   722                           	opt stack 0
   723  000060                     ?___llmod:
   724                           	opt stack 0
   725  000060                     OpenADC@config:
   726                           	opt stack 0
   727  000060                     SetChanADC@channel:
   728                           	opt stack 0
   729  000060                     OpenPWM1@period:
   730                           	opt stack 0
   731  000060                     OpenTimer1@config:
   732                           	opt stack 0
   733  000060                     OpenTimer2@config:
   734                           	opt stack 0
   735  000060                     OpenUSART@config:
   736                           	opt stack 0
   737  000060                     isdigit@c:
   738                           	opt stack 0
   739  000060                     sendStr@dataPtr:
   740                           	opt stack 0
   741  000060                     SetDCPWM1@dutycycle:
   742                           	opt stack 0
   743  000060                     ___lwdiv@dividend:
   744                           	opt stack 0
   745  000060                     ___lwmod@dividend:
   746                           	opt stack 0
   747  000060                     ___wmul@multiplier:
   748                           	opt stack 0
   749  000060                     ___aldiv@dividend:
   750                           	opt stack 0
   751  000060                     labs@l:
   752                           	opt stack 0
   753  000060                     ___llmod@dividend:
   754                           	opt stack 0
   755  000060                     ___lmul@multiplier:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x0
   759  000060                     	ds	1
   760  000061                     ??_SetChanADC:
   761  000061                     ??_isdigit:
   762  000061                     OpenADC@config2:
   763                           	opt stack 0
   764  000061                     borrarBufferRx@i:
   765                           	opt stack 0
   766  000061                     OpenUSART@spbrg:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x1
   770  000061                     	ds	1
   771  000062                     ??_SetDCPWM1:
   772  000062                     ??_comenzarADC:
   773  000062                     OpenADC@portconfig:
   774                           	opt stack 0
   775  000062                     _isdigit$1965:
   776                           	opt stack 0
   777  000062                     ___lwdiv@divisor:
   778                           	opt stack 0
   779  000062                     ___lwmod@divisor:
   780                           	opt stack 0
   781  000062                     ___wmul@multiplicand:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x2
   785  000062                     	ds	1
   786  000063                     ??_OpenADC:
   787  000063                     ??_ConfigUSART:
   788                           
   789                           ; 0 bytes @ 0x3
   790  000063                     	ds	1
   791  000064                     ??_labs:
   792  000064                     ??___lwdiv:
   793  000064                     ??___lwmod:
   794  000064                     SetDCPWM1@DCycle:
   795                           	opt stack 0
   796  000064                     ___wmul@product:
   797                           	opt stack 0
   798  000064                     ___aldiv@divisor:
   799                           	opt stack 0
   800  000064                     ___llmod@divisor:
   801                           	opt stack 0
   802  000064                     ___lmul@multiplicand:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x4
   806  000064                     	ds	1
   807  000065                     ??_ConfigADC:
   808  000065                     ___lwdiv@counter:
   809                           	opt stack 0
   810  000065                     ___lwmod@counter:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x5
   814  000065                     	ds	1
   815  000066                     ??_ConfigPWM:
   816  000066                     ?_setDUTY:
   817                           	opt stack 0
   818  000066                     ?_atoi:
   819                           	opt stack 0
   820  000066                     setDUTY@duty:
   821                           	opt stack 0
   822  000066                     atoi@s:
   823                           	opt stack 0
   824  000066                     ___lwdiv@quotient:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x6
   828  000066                     	ds	2
   829  000068                     ??_atoi:
   830  000068                     ?_setActuador:
   831                           	opt stack 0
   832  000068                     ??___aldiv:
   833  000068                     ??___llmod:
   834  000068                     ?_utoa:
   835                           	opt stack 0
   836  000068                     utoa@buf:
   837                           	opt stack 0
   838  000068                     setActuador@dutyPWM:
   839                           	opt stack 0
   840  000068                     ___lmul@product:
   841                           	opt stack 0
   842                           
   843                           ; 4 bytes @ 0x8
   844  000068                     	ds	1
   845  000069                     ___aldiv@counter:
   846                           	opt stack 0
   847  000069                     ___llmod@counter:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x9
   851  000069                     	ds	1
   852  00006A                     ___aldiv@sign:
   853                           	opt stack 0
   854  00006A                     utoa@val:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0xA
   858  00006A                     	ds	1
   859  00006B                     atoi@sign:
   860                           	opt stack 0
   861  00006B                     ___aldiv@quotient:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0xB
   865  00006B                     	ds	1
   866  00006C                     ?_atol:
   867                           	opt stack 0
   868  00006C                     ?___lldiv:
   869                           	opt stack 0
   870  00006C                     setActuador@dirGiro:
   871                           	opt stack 0
   872  00006C                     atoi@a:
   873                           	opt stack 0
   874  00006C                     atol@s:
   875                           	opt stack 0
   876  00006C                     utoa@base:
   877                           	opt stack 0
   878  00006C                     ___lldiv@dividend:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0xC
   882  00006C                     	ds	1
   883  00006D                     ?_accionDeControl:
   884                           	opt stack 0
   885  00006D                     accionDeControl@dirGiro:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0xD
   889  00006D                     	ds	1
   890  00006E                     ??_accionDeControl:
   891  00006E                     utoa@v:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0xE
   895  00006E                     	ds	2
   896  000070                     ??_atol:
   897  000070                     utoa@c:
   898                           	opt stack 0
   899  000070                     ___lldiv@divisor:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x10
   903  000070                     	ds	1
   904  000071                     ?_itoa:
   905                           	opt stack 0
   906  000071                     itoa@buf:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x11
   910  000071                     	ds	2
   911  000073                     itoa@val:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x13
   915  000073                     	ds	1
   916  000074                     ??___lldiv:
   917  000074                     atol@sign:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x14
   921  000074                     	ds	1
   922  000075                     itoa@base:
   923                           	opt stack 0
   924  000075                     atol@a:
   925                           	opt stack 0
   926  000075                     ___lldiv@quotient:
   927                           	opt stack 0
   928                           
   929                           ; 4 bytes @ 0x15
   930  000075                     	ds	2
   931  000077                     itoa@cp:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x17
   935  000077                     	ds	2
   936  000079                     atol@c:
   937                           	opt stack 0
   938  000079                     ___lldiv@counter:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x19
   942  000079                     	ds	1
   943  00007A                     ??_parserRx:
   944  00007A                     ?_ultoa:
   945                           	opt stack 0
   946  00007A                     ?_calcPID:
   947                           	opt stack 0
   948  00007A                     ultoa@buf:
   949                           	opt stack 0
   950  00007A                     calcPID@error:
   951                           	opt stack 0
   952                           
   953                           ; 4 bytes @ 0x1A
   954  00007A                     	ds	2
   955  00007C                     parserRx@comando:
   956                           	opt stack 0
   957  00007C                     ultoa@val:
   958                           	opt stack 0
   959                           
   960                           ; 4 bytes @ 0x1C
   961  00007C                     	ds	1
   962  00007D                     parserRx@dirGiro:
   963                           	opt stack 0
   964                           
   965                           ; 4 bytes @ 0x1D
   966  00007D                     	ds	1
   967  00007E                     calcPID@dt:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x1E
   971  00007E                     	ds	2
   972  000080                     ultoa@base:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x20
   976  000080                     	ds	1
   977  000081                     parserRx@potencia:
   978                           	opt stack 0
   979                           
   980                           ; 4 bytes @ 0x21
   981  000081                     	ds	1
   982  000082                     calcPID@Kp:
   983                           	opt stack 0
   984  000082                     ultoa@v:
   985                           	opt stack 0
   986                           
   987                           ; 4 bytes @ 0x22
   988  000082                     	ds	3
   989  000085                     parserRx@argumento:
   990                           	opt stack 0
   991                           
   992                           ; 5 bytes @ 0x25
   993  000085                     	ds	1
   994  000086                     ultoa@c:
   995                           	opt stack 0
   996  000086                     calcPID@Ki:
   997                           	opt stack 0
   998                           
   999                           ; 4 bytes @ 0x26
  1000  000086                     	ds	1
  1001  000087                     ?_ltoa:
  1002                           	opt stack 0
  1003  000087                     ltoa@buf:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x27
  1007  000087                     	ds	2
  1008  000089                     ltoa@val:
  1009                           	opt stack 0
  1010                           
  1011                           ; 4 bytes @ 0x29
  1012  000089                     	ds	1
  1013  00008A                     parserRx@j:
  1014                           	opt stack 0
  1015  00008A                     calcPID@Kd:
  1016                           	opt stack 0
  1017                           
  1018                           ; 4 bytes @ 0x2A
  1019  00008A                     	ds	3
  1020  00008D                     ltoa@base:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x2D
  1024  00008D                     	ds	1
  1025  00008E                     calcPID@lastErrorPtr:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x2E
  1029  00008E                     	ds	1
  1030  00008F                     ltoa@cp:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x2F
  1034  00008F                     	ds	1
  1035  000090                     calcPID@iErrorPtr:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x30
  1039  000090                     	ds	1
  1040  000091                     ??_enviarEstadoConsola:
  1041                           
  1042                           ; 0 bytes @ 0x31
  1043  000091                     	ds	1
  1044  000092                     ??_calcPID:
  1045  000092                     enviarEstadoConsola@buffer:
  1046                           	opt stack 0
  1047                           
  1048                           ; 10 bytes @ 0x32
  1049  000092                     	ds	8
  1050  00009A                     calcPID@epsilon:
  1051                           	opt stack 0
  1052                           
  1053                           ; 4 bytes @ 0x3A
  1054  00009A                     	ds	4
  1055  00009E                     calcPID@output:
  1056                           	opt stack 0
  1057                           
  1058                           ; 4 bytes @ 0x3E
  1059  00009E                     	ds	4
  1060  0000A2                     calcPID@dError:
  1061                           	opt stack 0
  1062                           
  1063                           ; 4 bytes @ 0x42
  1064  0000A2                     	ds	4
  1065  0000A6                     calcPID@omega:
  1066                           	opt stack 0
  1067                           
  1068                           ; 4 bytes @ 0x46
  1069  0000A6                     	ds	4
  1070  0000AA                     controlador@accionControl:
  1071                           	opt stack 0
  1072                           
  1073                           ; 4 bytes @ 0x4A
  1074  0000AA                     	ds	4
  1075  0000AE                     ??_main:
  1076                           
  1077                           ; 0 bytes @ 0x4E
  1078  0000AE                     	ds	1
  1079  0000AF                     main@dirGiro:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x4F
  1083  0000AF                     	ds	1
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           
  1093                           	psect	cstackCOMRAM
  1094  000001                     __pcstackCOMRAM:
  1095                           	opt stack 0
  1096  000001                     ??i1_borrarBufferRx:
  1097  000001                     ?i1_SetChanADC:
  1098                           	opt stack 0
  1099  000001                     ?_ReadADC:
  1100                           	opt stack 0
  1101  000001                     ReadUSART@data:
  1102                           	opt stack 0
  1103  000001                     i1SetChanADC@channel:
  1104                           	opt stack 0
  1105                           
  1106                           ; 1 bytes @ 0x0
  1107  000001                     	ds	1
  1108  000002                     ??i1_SetChanADC:
  1109  000002                     i1borrarBufferRx@i:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0x1
  1113  000002                     	ds	1
  1114  000003                     ??i1_comenzarADC:
  1115  000003                     ?_getADC:
  1116                           	opt stack 0
  1117                           
  1118                           ; 4 bytes @ 0x2
  1119  000003                     	ds	4
  1120  000007                     ??_LowIsr:
  1121                           
  1122                           ; 0 bytes @ 0x6
  1123  000007                     	ds	25
  1124  000020                     LowIsr@caracterRx:
  1125                           	opt stack 0
  1126                           
  1127                           ; 1 bytes @ 0x1F
  1128  000020                     	ds	1
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           postinc0	equ	0xFEE
  1134                           wreg	equ	0xFE8
  1135                           postdec1	equ	0xFE5
  1136                           fsr1l	equ	0xFE1
  1137                           
  1138 ;;
  1139 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1140 ;;
  1141 ;; *************** function _main *****************
  1142 ;; Defined at:
  1143 ;;		line 232 in file "main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  dirGiro         1   79[BANK0 ] unsigned char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;		None               void
  1150 ;; Registers used:
  1151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0
  1158 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1159 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1160 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1161 ;;Total ram usage:        2 bytes
  1162 ;; Hardware stack levels required when called:    7
  1163 ;; This function calls:
  1164 ;;		_ConfigADC
  1165 ;;		_comenzarADC
  1166 ;;		_controlador
  1167 ;;		_ConfigPWM
  1168 ;;		_ConfigUSART
  1169 ;;		_enviarEstadoConsola
  1170 ;;		_parserRx
  1171 ;;		_borrarBufferRx
  1172 ;;		_OpenTimer1
  1173 ;;		_accionDeControl
  1174 ;; This function is called by:
  1175 ;;		Startup code after reset
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text0
  1180  0017FA                     __ptext0:
  1181                           	opt stack 0
  1182  0017FA                     _main:
  1183                           	opt stack 24
  1184                           
  1185                           ;main.c: 233: TRISA = 0xFF;
  1186                           
  1187                           ;incstack = 0
  1188                           ;incstack = 0
  1189  0017FA  6892               	setf	3986,c	;volatile
  1190                           
  1191                           ;main.c: 235: TRISB = 0xFF;
  1192  0017FC  6893               	setf	3987,c	;volatile
  1193                           
  1194                           ;main.c: 237: TRISC = 0xFF;
  1195  0017FE  6894               	setf	3988,c	;volatile
  1196                           
  1197                           ;main.c: 239: TRISD = 0xFF;
  1198  001800  6895               	setf	3989,c	;volatile
  1199                           
  1200                           ;main.c: 243: (TRISD&=~(1<<0));
  1201  001802  9095               	bcf	3989,0,c	;volatile
  1202                           
  1203                           ;main.c: 244: (TRISD&=~(1<<1));
  1204  001804  9295               	bcf	3989,1,c	;volatile
  1205                           
  1206                           ;main.c: 245: (TRISC&=~(1<<2));
  1207  001806  9494               	bcf	3988,2,c	;volatile
  1208                           
  1209                           ;main.c: 246: (TRISC&=~(1<<6));
  1210  001808  9C94               	bcf	3988,6,c	;volatile
  1211                           
  1212                           ;main.c: 249: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111);
  1213  00180A  0100               	movlb	0	; () banked
  1214  00180C  6FAE               	movwf	??_main& (0+255),b
  1215  00180E  0EFF               	movlw	255
  1216  001810  0100               	movlb	0	; () banked
  1217  001812  0100               	movlb	0	; () banked
  1218  001814  6F60               	movwf	?_OpenTimer1& (0+255),b
  1219  001816  0100               	movlb	0	; () banked
  1220  001818  51AE               	movf	??_main& (0+255),w,b
  1221  00181A  EC7F  F016         	call	_OpenTimer1	;wreg free
  1222                           
  1223                           ;main.c: 251: T1CONbits.TMR1ON = 1;
  1224  00181E  80CD               	bsf	4045,0,c	;volatile
  1225                           
  1226                           ;main.c: 252: T1CONbits.TMR1CS = 0;
  1227  001820  92CD               	bcf	4045,1,c	;volatile
  1228                           
  1229                           ;main.c: 253: T1CONbits.T1OSCEN = 0;
  1230  001822  96CD               	bcf	4045,3,c	;volatile
  1231                           
  1232                           ;main.c: 254: T1CONbits.T1CKPS1 = 0;
  1233  001824  9ACD               	bcf	4045,5,c	;volatile
  1234                           
  1235                           ;main.c: 255: T1CONbits.T1CKPS0 = 0;
  1236  001826  98CD               	bcf	4045,4,c	;volatile
  1237                           
  1238                           ;main.c: 256: PIE1bits.TMR1IE = 1;
  1239  001828  809D               	bsf	3997,0,c	;volatile
  1240                           
  1241                           ;main.c: 257: INTCONbits.PEIE = 1;
  1242  00182A  8CF2               	bsf	intcon,6,c	;volatile
  1243                           
  1244                           ;main.c: 258: INTCON2bits.T0IP = 0;
  1245  00182C  94F1               	bcf	intcon2,2,c	;volatile
  1246                           
  1247                           ;main.c: 259: RCONbits.IPEN = 0x01;
  1248  00182E  8ED0               	bsf	4048,7,c	;volatile
  1249                           
  1250                           ;main.c: 262: IPR1bits.TMR1IP = 0x00;
  1251  001830  909F               	bcf	3999,0,c	;volatile
  1252                           
  1253                           ;main.c: 263: PIR1bits.TMR1IF = 0;
  1254  001832  909E               	bcf	3998,0,c	;volatile
  1255                           
  1256                           ;main.c: 266: ConfigUSART();
  1257  001834  ECCB  F016         	call	_ConfigUSART	;wreg free
  1258                           
  1259                           ;main.c: 268: ConfigPWM();
  1260  001838  EC46  F016         	call	_ConfigPWM	;wreg free
  1261                           
  1262                           ;main.c: 270: ConfigADC();
  1263  00183C  EC64  F016         	call	_ConfigADC	;wreg free
  1264                           
  1265                           ;main.c: 272: comenzarADC();
  1266  001840  EC0E  F017         	call	_comenzarADC	;wreg free
  1267                           
  1268                           ;main.c: 275: PIE1bits.ADIE = 0;
  1269  001844  9C9D               	bcf	3997,6,c	;volatile
  1270                           
  1271                           ;main.c: 276: PIE1bits.RCIE = 1;
  1272  001846  8A9D               	bsf	3997,5,c	;volatile
  1273                           
  1274                           ;main.c: 277: RCONbits.IPEN = 1;
  1275  001848  8ED0               	bsf	4048,7,c	;volatile
  1276                           
  1277                           ;main.c: 278: INTCONbits.PEIE = 1;
  1278  00184A  8CF2               	bsf	intcon,6,c	;volatile
  1279                           
  1280                           ;main.c: 279: INTCONbits.GIE = 1;
  1281  00184C  8EF2               	bsf	intcon,7,c	;volatile
  1282                           
  1283                           ;main.c: 281: verbose = 1;
  1284  00184E  0100               	movlb	0	; () banked
  1285  001850  6FAE               	movwf	??_main& (0+255),b
  1286  001852  0E01               	movlw	1
  1287  001854  0100               	movlb	0	; () banked
  1288  001856  0100               	movlb	0	; () banked
  1289  001858  6FDC               	movwf	_verbose& (0+255),b
  1290  00185A  0100               	movlb	0	; () banked
  1291  00185C  51AE               	movf	??_main& (0+255),w,b
  1292  00185E                     l3790:
  1293                           
  1294                           ;main.c: 284: if (doPID != 0) {
  1295  00185E  0100               	movlb	0	; () banked
  1296  001860  0100               	movlb	0	; () banked
  1297  001862  51D9               	movf	_doPID& (0+255),w,b	;volatile
  1298  001864  B4D8               	btfsc	status,2,c
  1299  001866  D04C               	goto	l3798
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;main.c: 285: doPID = 0;
  1303  001868  0E00               	movlw	0
  1304  00186A  0100               	movlb	0	; () banked
  1305  00186C  0100               	movlb	0	; () banked
  1306  00186E  6FD9               	movwf	_doPID& (0+255),b	;volatile
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;main.c: 286: uint8_t dirGiro;
  1310                           ;main.c: 287: ctrl = controlador(error,dt,
  1311                           ;main.c: 288: Kp, Ki, Kd,
  1312                           ;main.c: 289: &dutyPWM, &dirGiro);
  1313  001870  C0C8  F100         	movff	_error,?_controlador
  1314  001874  C0C9  F101         	movff	_error+1,?_controlador+1
  1315  001878  C0CA  F102         	movff	_error+2,?_controlador+2
  1316  00187C  C0CB  F103         	movff	_error+3,?_controlador+3
  1317  001880  C147  F104         	movff	_dt,?_controlador+4
  1318  001884  C148  F105         	movff	_dt+1,?_controlador+5
  1319  001888  C149  F106         	movff	_dt+2,?_controlador+6
  1320  00188C  C14A  F107         	movff	_dt+3,?_controlador+7
  1321  001890  C0E1  F108         	movff	_Kp,?_controlador+8
  1322  001894  C0E2  F109         	movff	_Kp+1,?_controlador+9
  1323  001898  C0E3  F10A         	movff	_Kp+2,?_controlador+10
  1324  00189C  C0E4  F10B         	movff	_Kp+3,?_controlador+11
  1325  0018A0  C0B8  F10C         	movff	_Ki,?_controlador+12
  1326  0018A4  C0B9  F10D         	movff	_Ki+1,?_controlador+13
  1327  0018A8  C0BA  F10E         	movff	_Ki+2,?_controlador+14
  1328  0018AC  C0BB  F10F         	movff	_Ki+3,?_controlador+15
  1329  0018B0  C0B0  F110         	movff	_Kd,?_controlador+16
  1330  0018B4  C0B1  F111         	movff	_Kd+1,?_controlador+17
  1331  0018B8  C0B2  F112         	movff	_Kd+2,?_controlador+18
  1332  0018BC  C0B3  F113         	movff	_Kd+3,?_controlador+19
  1333  0018C0  0100               	movlb	0	; () banked
  1334  0018C2  0E00               	movlw	high _dutyPWM
  1335  0018C4  0101               	movlb	1	; () banked
  1336  0018C6  0101               	movlb	1	; () banked
  1337  0018C8  6F15               	movwf	(?_controlador+21)& (0+255),b
  1338  0018CA  0100               	movlb	0	; () banked
  1339  0018CC  0EDD               	movlw	low _dutyPWM
  1340  0018CE  0101               	movlb	1	; () banked
  1341  0018D0  6F14               	movwf	(?_controlador+20)& (0+255),b
  1342  0018D2  0100               	movlb	0	; () banked
  1343  0018D4  0E00               	movlw	high main@dirGiro
  1344  0018D6  0101               	movlb	1	; () banked
  1345  0018D8  0101               	movlb	1	; () banked
  1346  0018DA  6F17               	movwf	(?_controlador+23)& (0+255),b
  1347  0018DC  0100               	movlb	0	; () banked
  1348  0018DE  0EAF               	movlw	low main@dirGiro
  1349  0018E0  0101               	movlb	1	; () banked
  1350  0018E2  6F16               	movwf	(?_controlador+22)& (0+255),b
  1351  0018E4  EC13  F00D         	call	_controlador	;wreg free
  1352  0018E8  C103  F024         	movff	?_controlador+3,_ctrl+3
  1353  0018EC  C102  F023         	movff	?_controlador+2,_ctrl+2
  1354  0018F0  C101  F022         	movff	?_controlador+1,_ctrl+1
  1355  0018F4  C100  F021         	movff	?_controlador,_ctrl
  1356                           
  1357                           ;main.c: 290: accionDeControl(dirGiro);
  1358  0018F8  C0AF  F06D         	movff	main@dirGiro,?_accionDeControl
  1359  0018FC  EC50  F010         	call	_accionDeControl	;wreg free
  1360  001900                     l3798:
  1361                           
  1362                           ;main.c: 291: }
  1363                           ;main.c: 293: if (verbose == 1) {
  1364  001900  0100               	movlb	0	; () banked
  1365  001902  0100               	movlb	0	; () banked
  1366  001904  05DC               	decf	_verbose& (0+255),w,b
  1367  001906  A4D8               	btfss	status,2,c
  1368  001908  D07C               	goto	l3802
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;main.c: 294: enviarEstadoConsola(tik, error, dutyPWM, ctrl,
  1372                           ;main.c: 295: Kp, Ki, Kd, Kp2, Ki2, Kd2,
  1373                           ;main.c: 296: controlAntesDelStep, dirStep, potenciaStep,
  1374                           ;main.c: 297: dutyPWMmin, dutyPWMlimit, dutyPWMlimitTimeout);
  1375  00190A  C0D4  F100         	movff	_tik,?_enviarEstadoConsola
  1376  00190E  C0D5  F101         	movff	_tik+1,?_enviarEstadoConsola+1
  1377  001912  C0D6  F102         	movff	_tik+2,?_enviarEstadoConsola+2
  1378  001916  C0D7  F103         	movff	_tik+3,?_enviarEstadoConsola+3
  1379  00191A  C0C8  F104         	movff	_error,?_enviarEstadoConsola+4
  1380  00191E  C0C9  F105         	movff	_error+1,?_enviarEstadoConsola+5
  1381  001922  C0CA  F106         	movff	_error+2,?_enviarEstadoConsola+6
  1382  001926  C0CB  F107         	movff	_error+3,?_enviarEstadoConsola+7
  1383  00192A  C0DD  F108         	movff	_dutyPWM,?_enviarEstadoConsola+8
  1384  00192E  C0DE  F109         	movff	_dutyPWM+1,?_enviarEstadoConsola+9
  1385  001932  C0DF  F10A         	movff	_dutyPWM+2,?_enviarEstadoConsola+10
  1386  001936  C0E0  F10B         	movff	_dutyPWM+3,?_enviarEstadoConsola+11
  1387  00193A  C021  F10C         	movff	_ctrl,?_enviarEstadoConsola+12
  1388  00193E  C022  F10D         	movff	_ctrl+1,?_enviarEstadoConsola+13
  1389  001942  C023  F10E         	movff	_ctrl+2,?_enviarEstadoConsola+14
  1390  001946  C024  F10F         	movff	_ctrl+3,?_enviarEstadoConsola+15
  1391  00194A  C0E1  F110         	movff	_Kp,?_enviarEstadoConsola+16
  1392  00194E  C0E2  F111         	movff	_Kp+1,?_enviarEstadoConsola+17
  1393  001952  C0E3  F112         	movff	_Kp+2,?_enviarEstadoConsola+18
  1394  001956  C0E4  F113         	movff	_Kp+3,?_enviarEstadoConsola+19
  1395  00195A  C0B8  F114         	movff	_Ki,?_enviarEstadoConsola+20
  1396  00195E  C0B9  F115         	movff	_Ki+1,?_enviarEstadoConsola+21
  1397  001962  C0BA  F116         	movff	_Ki+2,?_enviarEstadoConsola+22
  1398  001966  C0BB  F117         	movff	_Ki+3,?_enviarEstadoConsola+23
  1399  00196A  C0B0  F118         	movff	_Kd,?_enviarEstadoConsola+24
  1400  00196E  C0B1  F119         	movff	_Kd+1,?_enviarEstadoConsola+25
  1401  001972  C0B2  F11A         	movff	_Kd+2,?_enviarEstadoConsola+26
  1402  001976  C0B3  F11B         	movff	_Kd+3,?_enviarEstadoConsola+27
  1403  00197A  C0E5  F11C         	movff	_Kp2,?_enviarEstadoConsola+28
  1404  00197E  C0E6  F11D         	movff	_Kp2+1,?_enviarEstadoConsola+29
  1405  001982  C0E7  F11E         	movff	_Kp2+2,?_enviarEstadoConsola+30
  1406  001986  C0E8  F11F         	movff	_Kp2+3,?_enviarEstadoConsola+31
  1407  00198A  C0BC  F120         	movff	_Ki2,?_enviarEstadoConsola+32
  1408  00198E  C0BD  F121         	movff	_Ki2+1,?_enviarEstadoConsola+33
  1409  001992  C0BE  F122         	movff	_Ki2+2,?_enviarEstadoConsola+34
  1410  001996  C0BF  F123         	movff	_Ki2+3,?_enviarEstadoConsola+35
  1411  00199A  C0B4  F124         	movff	_Kd2,?_enviarEstadoConsola+36
  1412  00199E  C0B5  F125         	movff	_Kd2+1,?_enviarEstadoConsola+37
  1413  0019A2  C0B6  F126         	movff	_Kd2+2,?_enviarEstadoConsola+38
  1414  0019A6  C0B7  F127         	movff	_Kd2+3,?_enviarEstadoConsola+39
  1415  0019AA  C0F1  F128         	movff	_controlAntesDelStep,?_enviarEstadoConsola+40
  1416  0019AE  C0C0  F129         	movff	_dirStep,?_enviarEstadoConsola+41
  1417  0019B2  C0C1  F12A         	movff	_dirStep+1,?_enviarEstadoConsola+42
  1418  0019B6  C0C2  F12B         	movff	_dirStep+2,?_enviarEstadoConsola+43
  1419  0019BA  C0C3  F12C         	movff	_dirStep+3,?_enviarEstadoConsola+44
  1420  0019BE  C0D0  F12D         	movff	_potenciaStep,?_enviarEstadoConsola+45
  1421  0019C2  C0D1  F12E         	movff	_potenciaStep+1,?_enviarEstadoConsola+46
  1422  0019C6  C0D2  F12F         	movff	_potenciaStep+2,?_enviarEstadoConsola+47
  1423  0019CA  C0D3  F130         	movff	_potenciaStep+3,?_enviarEstadoConsola+48
  1424  0019CE  C0C4  F131         	movff	_dutyPWMmin,?_enviarEstadoConsola+49
  1425  0019D2  C0C5  F132         	movff	_dutyPWMmin+1,?_enviarEstadoConsola+50
  1426  0019D6  C0C6  F133         	movff	_dutyPWMmin+2,?_enviarEstadoConsola+51
  1427  0019DA  C0C7  F134         	movff	_dutyPWMmin+3,?_enviarEstadoConsola+52
  1428  0019DE  C0E9  F135         	movff	_dutyPWMlimit,?_enviarEstadoConsola+53
  1429  0019E2  C0EA  F136         	movff	_dutyPWMlimit+1,?_enviarEstadoConsola+54
  1430  0019E6  C0EB  F137         	movff	_dutyPWMlimit+2,?_enviarEstadoConsola+55
  1431  0019EA  C0EC  F138         	movff	_dutyPWMlimit+3,?_enviarEstadoConsola+56
  1432  0019EE  C039  F139         	movff	_dutyPWMlimitTimeout,?_enviarEstadoConsola+57
  1433  0019F2  C03A  F13A         	movff	_dutyPWMlimitTimeout+1,?_enviarEstadoConsola+58
  1434  0019F6  C03B  F13B         	movff	_dutyPWMlimitTimeout+2,?_enviarEstadoConsola+59
  1435  0019FA  C03C  F13C         	movff	_dutyPWMlimitTimeout+3,?_enviarEstadoConsola+60
  1436  0019FE  EC38  F004         	call	_enviarEstadoConsola	;wreg free
  1437  001A02                     l3802:
  1438                           
  1439                           ;main.c: 298: }
  1440                           ;main.c: 299: if (banderaParser == 1) {
  1441  001A02  0100               	movlb	0	; () banked
  1442  001A04  0100               	movlb	0	; () banked
  1443  001A06  05D8               	decf	_banderaParser& (0+255),w,b
  1444  001A08  A4D8               	btfss	status,2,c
  1445  001A0A  D729               	goto	l3790
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 300: banderaParser = 0;
  1449  001A0C  0100               	movlb	0	; () banked
  1450  001A0E  6FAE               	movwf	??_main& (0+255),b
  1451  001A10  0E00               	movlw	0
  1452  001A12  0100               	movlb	0	; () banked
  1453  001A14  0100               	movlb	0	; () banked
  1454  001A16  6FD8               	movwf	_banderaParser& (0+255),b
  1455  001A18  0100               	movlb	0	; () banked
  1456  001A1A  51AE               	movf	??_main& (0+255),w,b
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;main.c: 301: parserRx();
  1460  001A1C  EC1B  F008         	call	_parserRx	;wreg free
  1461                           
  1462                           ;main.c: 302: borrarBufferRx();
  1463  001A20  EC62  F015         	call	_borrarBufferRx	;wreg free
  1464  001A24  D71C               	goto	l3790
  1465  001A26                     __end_of_main:
  1466                           	opt stack 0
  1467                           tblptru	equ	0xFF8
  1468                           tblptrh	equ	0xFF7
  1469                           tblptrl	equ	0xFF6
  1470                           tablat	equ	0xFF5
  1471                           intcon	equ	0xFF2
  1472                           intcon2	equ	0xFF1
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1l	equ	0xFE1
  1477                           status	equ	0xFD8
  1478                           
  1479 ;; *************** function _accionDeControl *****************
  1480 ;; Defined at:
  1481 ;;		line 335 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  dirGiro         1   13[BANK0 ] unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;		None               void
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1495 ;;      Params:         0       1       0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1498 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        2 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    6
  1502 ;; This function calls:
  1503 ;;		_setActuador
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text1
  1510  0020A0                     __ptext1:
  1511                           	opt stack 0
  1512  0020A0                     _accionDeControl:
  1513                           	opt stack 24
  1514                           
  1515                           ;main.c: 336: if (dutyPWM > dutyPWMlimit) {
  1516                           
  1517                           ;incstack = 0
  1518                           ;incstack = 0
  1519  0020A0  0100               	movlb	0	; () banked
  1520  0020A2  0100               	movlb	0	; () banked
  1521  0020A4  51DD               	movf	_dutyPWM& (0+255),w,b
  1522  0020A6  0100               	movlb	0	; () banked
  1523  0020A8  0100               	movlb	0	; () banked
  1524  0020AA  5DE9               	subwf	_dutyPWMlimit& (0+255),w,b
  1525  0020AC  0100               	movlb	0	; () banked
  1526  0020AE  0100               	movlb	0	; () banked
  1527  0020B0  51DE               	movf	(_dutyPWM+1)& (0+255),w,b
  1528  0020B2  0100               	movlb	0	; () banked
  1529  0020B4  0100               	movlb	0	; () banked
  1530  0020B6  59EA               	subwfb	(_dutyPWMlimit+1)& (0+255),w,b
  1531  0020B8  0100               	movlb	0	; () banked
  1532  0020BA  0100               	movlb	0	; () banked
  1533  0020BC  51DF               	movf	(_dutyPWM+2)& (0+255),w,b
  1534  0020BE  0100               	movlb	0	; () banked
  1535  0020C0  0100               	movlb	0	; () banked
  1536  0020C2  59EB               	subwfb	(_dutyPWMlimit+2)& (0+255),w,b
  1537  0020C4  0100               	movlb	0	; () banked
  1538  0020C6  0100               	movlb	0	; () banked
  1539  0020C8  51E0               	movf	(_dutyPWM+3)& (0+255),w,b
  1540  0020CA  0100               	movlb	0	; () banked
  1541  0020CC  0100               	movlb	0	; () banked
  1542  0020CE  59EC               	subwfb	(_dutyPWMlimit+3)& (0+255),w,b
  1543  0020D0  B0D8               	btfsc	status,0,c
  1544  0020D2  D032               	goto	l277
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 338: dutyPWMlimitCounter--;
  1548  0020D4  0101               	movlb	1	; () banked
  1549  0020D6  0101               	movlb	1	; () banked
  1550  0020D8  0753               	decf	_dutyPWMlimitCounter& (0+255),f,b
  1551  0020DA  0E00               	movlw	0
  1552  0020DC  0101               	movlb	1	; () banked
  1553  0020DE  5B54               	subwfb	(_dutyPWMlimitCounter+1)& (0+255),f,b
  1554  0020E0  0101               	movlb	1	; () banked
  1555  0020E2  5B55               	subwfb	(_dutyPWMlimitCounter+2)& (0+255),f,b
  1556  0020E4  0101               	movlb	1	; () banked
  1557  0020E6  5B56               	subwfb	(_dutyPWMlimitCounter+3)& (0+255),f,b
  1558                           
  1559                           ;main.c: 339: if (dutyPWMlimitCounter == 0) {
  1560  0020E8  0101               	movlb	1	; () banked
  1561  0020EA  0101               	movlb	1	; () banked
  1562  0020EC  5156               	movf	(_dutyPWMlimitCounter+3)& (0+255),w,b
  1563  0020EE  1153               	iorwf	_dutyPWMlimitCounter& (0+255),w,b
  1564  0020F0  1154               	iorwf	(_dutyPWMlimitCounter+1)& (0+255),w,b
  1565  0020F2  1155               	iorwf	(_dutyPWMlimitCounter+2)& (0+255),w,b
  1566  0020F4  A4D8               	btfss	status,2,c
  1567  0020F6  D028               	goto	l3832
  1568                           
  1569                           ; BSR set to: 1
  1570                           ;main.c: 340: setActuador(0, 0);
  1571  0020F8  0E00               	movlw	0
  1572  0020FA  0100               	movlb	0	; () banked
  1573  0020FC  0100               	movlb	0	; () banked
  1574  0020FE  6F68               	movwf	?_setActuador& (0+255),b
  1575  002100  0E00               	movlw	0
  1576  002102  0100               	movlb	0	; () banked
  1577  002104  6F69               	movwf	(?_setActuador+1)& (0+255),b
  1578  002106  0E00               	movlw	0
  1579  002108  0100               	movlb	0	; () banked
  1580  00210A  6F6A               	movwf	(?_setActuador+2)& (0+255),b
  1581  00210C  0E00               	movlw	0
  1582  00210E  0100               	movlb	0	; () banked
  1583  002110  6F6B               	movwf	(?_setActuador+3)& (0+255),b
  1584  002112  0100               	movlb	0	; () banked
  1585  002114  6F6E               	movwf	??_accionDeControl& (0+255),b
  1586  002116  0E00               	movlw	0
  1587  002118  0100               	movlb	0	; () banked
  1588  00211A  0100               	movlb	0	; () banked
  1589  00211C  6F6C               	movwf	(?_setActuador+4)& (0+255),b
  1590  00211E  0100               	movlb	0	; () banked
  1591  002120  516E               	movf	??_accionDeControl& (0+255),w,b
  1592  002122  EC23  F013         	call	_setActuador	;wreg free
  1593                           
  1594                           ;main.c: 341: controlOn = 0;
  1595  002126  0100               	movlb	0	; () banked
  1596  002128  6F6E               	movwf	??_accionDeControl& (0+255),b
  1597  00212A  0E00               	movlw	0
  1598  00212C  0100               	movlb	0	; () banked
  1599  00212E  0100               	movlb	0	; () banked
  1600  002130  6FF2               	movwf	_controlOn& (0+255),b
  1601  002132  0100               	movlb	0	; () banked
  1602  002134  516E               	movf	??_accionDeControl& (0+255),w,b
  1603  002136  D008               	goto	l3832
  1604  002138                     l277:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;main.c: 344: dutyPWMlimitCounter = dutyPWMlimitTimeout;
  1608  002138  C039  F153         	movff	_dutyPWMlimitTimeout,_dutyPWMlimitCounter
  1609  00213C  C03A  F154         	movff	_dutyPWMlimitTimeout+1,_dutyPWMlimitCounter+1
  1610  002140  C03B  F155         	movff	_dutyPWMlimitTimeout+2,_dutyPWMlimitCounter+2
  1611  002144  C03C  F156         	movff	_dutyPWMlimitTimeout+3,_dutyPWMlimitCounter+3
  1612  002148                     l3832:
  1613                           
  1614                           ;main.c: 345: }
  1615                           ;main.c: 347: if (dentroDeStep != 0) {
  1616  002148  5028               	movf	_dentroDeStep,w,c
  1617  00214A  B4D8               	btfsc	status,2,c
  1618  00214C  D02B               	goto	l3844
  1619                           
  1620                           ;main.c: 348: if (contadorCiclosControlOff <= 0) {
  1621  00214E  5026               	movf	_contadorCiclosControlOff+1,w,c
  1622  002150  0A80               	xorlw	128
  1623  002152  0F80               	addlw	-128
  1624  002154  0E01               	movlw	1
  1625  002156  B4D8               	btfsc	status,2,c
  1626  002158  5C25               	subwf	_contadorCiclosControlOff,w,c
  1627  00215A  B0D8               	btfsc	status,0,c
  1628  00215C  D020               	goto	l3842
  1629                           
  1630                           ;main.c: 349: setActuador(0, 0);
  1631  00215E  0E00               	movlw	0
  1632  002160  0100               	movlb	0	; () banked
  1633  002162  0100               	movlb	0	; () banked
  1634  002164  6F68               	movwf	?_setActuador& (0+255),b
  1635  002166  0E00               	movlw	0
  1636  002168  0100               	movlb	0	; () banked
  1637  00216A  6F69               	movwf	(?_setActuador+1)& (0+255),b
  1638  00216C  0E00               	movlw	0
  1639  00216E  0100               	movlb	0	; () banked
  1640  002170  6F6A               	movwf	(?_setActuador+2)& (0+255),b
  1641  002172  0E00               	movlw	0
  1642  002174  0100               	movlb	0	; () banked
  1643  002176  6F6B               	movwf	(?_setActuador+3)& (0+255),b
  1644  002178  0100               	movlb	0	; () banked
  1645  00217A  6F6E               	movwf	??_accionDeControl& (0+255),b
  1646  00217C  0E00               	movlw	0
  1647  00217E  0100               	movlb	0	; () banked
  1648  002180  0100               	movlb	0	; () banked
  1649  002182  6F6C               	movwf	(?_setActuador+4)& (0+255),b
  1650  002184  0100               	movlb	0	; () banked
  1651  002186  516E               	movf	??_accionDeControl& (0+255),w,b
  1652  002188  EC23  F013         	call	_setActuador	;wreg free
  1653                           
  1654                           ;main.c: 350: controlOn = controlAntesDelStep;
  1655  00218C  C0F1  F0F2         	movff	_controlAntesDelStep,_controlOn
  1656                           
  1657                           ;main.c: 351: dentroDeStep = 0;
  1658  002190  0100               	movlb	0	; () banked
  1659  002192  6F6E               	movwf	??_accionDeControl& (0+255),b
  1660  002194  0E00               	movlw	0
  1661  002196  6E28               	movwf	_dentroDeStep,c
  1662  002198  0100               	movlb	0	; () banked
  1663  00219A  516E               	movf	??_accionDeControl& (0+255),w,b
  1664                           
  1665                           ;main.c: 352: } else {
  1666  00219C  D003               	goto	l3844
  1667  00219E                     l3842:
  1668                           
  1669                           ;main.c: 353: contadorCiclosControlOff--;
  1670  00219E  0625               	decf	_contadorCiclosControlOff,f,c
  1671  0021A0  A0D8               	btfss	status,0,c
  1672  0021A2  0626               	decf	_contadorCiclosControlOff+1,f,c
  1673  0021A4                     l3844:
  1674                           
  1675                           ;main.c: 354: }
  1676                           ;main.c: 355: }
  1677                           ;main.c: 356: if (controlOn == 1) {
  1678  0021A4  0100               	movlb	0	; () banked
  1679  0021A6  0100               	movlb	0	; () banked
  1680  0021A8  05F2               	decf	_controlOn& (0+255),w,b
  1681  0021AA  A4D8               	btfss	status,2,c
  1682  0021AC  D00C               	goto	l284
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;main.c: 357: setActuador(dutyPWM, dirGiro);
  1686  0021AE  C0DD  F068         	movff	_dutyPWM,?_setActuador
  1687  0021B2  C0DE  F069         	movff	_dutyPWM+1,?_setActuador+1
  1688  0021B6  C0DF  F06A         	movff	_dutyPWM+2,?_setActuador+2
  1689  0021BA  C0E0  F06B         	movff	_dutyPWM+3,?_setActuador+3
  1690  0021BE  C06D  F06C         	movff	accionDeControl@dirGiro,?_setActuador+4
  1691  0021C2  EC23  F013         	call	_setActuador	;wreg free
  1692  0021C6                     l284:
  1693  0021C6  0012               	return	
  1694  0021C8                     __end_of_accionDeControl:
  1695                           	opt stack 0
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           intcon	equ	0xFF2
  1701                           intcon2	equ	0xFF1
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           postdec1	equ	0xFE5
  1705                           fsr1l	equ	0xFE1
  1706                           status	equ	0xFD8
  1707                           
  1708 ;; *************** function _OpenTimer1 *****************
  1709 ;; Defined at:
  1710 ;;		line 17 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/Timers/t1open.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  config          1    0[BANK0 ] unsigned char 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;		None               void
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1724 ;;      Params:         0       1       0       0       0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1727 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1728 ;;Total ram usage:        1 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    3
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text2
  1739  002CFE                     __ptext2:
  1740                           	opt stack 0
  1741  002CFE                     _OpenTimer1:
  1742                           	opt stack 27
  1743                           
  1744                           ;incstack = 0
  1745                           ;incstack = 0
  1746  002CFE  0100               	movlb	0	; () banked
  1747  002D00  0100               	movlb	0	; () banked
  1748  002D02  5160               	movf	OpenTimer1@config& (0+255),w,b
  1749  002D04  0B7E               	andlw	126
  1750  002D06  6ECD               	movwf	4045,c	;volatile
  1751                           
  1752                           ; BSR set to: 0
  1753  002D08  0100               	movlb	0	; () banked
  1754  002D0A  0100               	movlb	0	; () banked
  1755  002D0C  AD60               	btfss	OpenTimer1@config& (0+255),6,b
  1756  002D0E  D002               	goto	l371
  1757                           
  1758                           ; BSR set to: 0
  1759  002D10  8ECD               	bsf	4045,7,c	;volatile
  1760  002D12  D001               	goto	l3816
  1761  002D14                     l371:
  1762                           
  1763                           ; BSR set to: 0
  1764  002D14  9ECD               	bcf	4045,7,c	;volatile
  1765  002D16                     l3816:
  1766                           
  1767                           ; BSR set to: 0
  1768  002D16  0E00               	movlw	0
  1769  002D18  6ECF               	movwf	4047,c	;volatile
  1770  002D1A  0E00               	movlw	0
  1771  002D1C  6ECE               	movwf	4046,c	;volatile
  1772                           
  1773                           ; BSR set to: 0
  1774  002D1E  909E               	bcf	3998,0,c	;volatile
  1775                           
  1776                           ; BSR set to: 0
  1777  002D20  0100               	movlb	0	; () banked
  1778  002D22  0100               	movlb	0	; () banked
  1779  002D24  AF60               	btfss	OpenTimer1@config& (0+255),7,b
  1780  002D26  D002               	goto	l373
  1781                           
  1782                           ; BSR set to: 0
  1783  002D28  809D               	bsf	3997,0,c	;volatile
  1784  002D2A  D001               	goto	l374
  1785  002D2C                     l373:
  1786                           
  1787                           ; BSR set to: 0
  1788  002D2C  909D               	bcf	3997,0,c	;volatile
  1789  002D2E                     l374:
  1790                           
  1791                           ; BSR set to: 0
  1792  002D2E  80CD               	bsf	4045,0,c	;volatile
  1793                           
  1794                           ; BSR set to: 0
  1795  002D30  0012               	return	
  1796  002D32                     __end_of_OpenTimer1:
  1797                           	opt stack 0
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           intcon	equ	0xFF2
  1803                           intcon2	equ	0xFF1
  1804                           postinc0	equ	0xFEE
  1805                           wreg	equ	0xFE8
  1806                           postdec1	equ	0xFE5
  1807                           fsr1l	equ	0xFE1
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function _borrarBufferRx *****************
  1811 ;; Defined at:
  1812 ;;		line 225 in file "main.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  i               2    1[BANK0 ] int 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;		None               void
  1819 ;; Registers used:
  1820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1826 ;;      Params:         0       0       0       0       0       0       0       0       0
  1827 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1828 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1829 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1830 ;;Total ram usage:        3 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    3
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text3
  1841  002AC4                     __ptext3:
  1842                           	opt stack 0
  1843  002AC4                     _borrarBufferRx:
  1844                           	opt stack 27
  1845                           
  1846                           ;main.c: 227: for (int i = 0; i < 10; i++)
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;incstack = 0
  1850                           ;incstack = 0
  1851  002AC4  0E00               	movlw	0
  1852  002AC6  0100               	movlb	0	; () banked
  1853  002AC8  0100               	movlb	0	; () banked
  1854  002ACA  6F62               	movwf	(borrarBufferRx@i+1)& (0+255),b
  1855  002ACC  0E00               	movlw	0
  1856  002ACE  0100               	movlb	0	; () banked
  1857  002AD0  6F61               	movwf	borrarBufferRx@i& (0+255),b
  1858  002AD2                     
  1859                           ; BSR set to: 0
  1860  002AD2  0100               	movlb	0	; () banked
  1861  002AD4  0100               	movlb	0	; () banked
  1862  002AD6  5162               	movf	(borrarBufferRx@i+1)& (0+255),w,b
  1863  002AD8  0A80               	xorlw	128
  1864  002ADA  0F80               	addlw	-128
  1865  002ADC  0E0A               	movlw	10
  1866  002ADE  B4D8               	btfsc	status,2,c
  1867  002AE0  5D61               	subwf	borrarBufferRx@i& (0+255),w,b
  1868  002AE2  B0D8               	btfsc	status,0,c
  1869  002AE4  D013               	goto	l3740
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 228: MessageBuffer[i] = 0x00;
  1873                           
  1874                           ; BSR set to: 0
  1875                           
  1876                           ; BSR set to: 0
  1877  002AE6  0101               	movlb	1	; () banked
  1878  002AE8  0E3D               	movlw	low _MessageBuffer
  1879  002AEA  0100               	movlb	0	; () banked
  1880  002AEC  0100               	movlb	0	; () banked
  1881  002AEE  2561               	addwf	borrarBufferRx@i& (0+255),w,b
  1882  002AF0  6ED9               	movwf	fsr2l,c
  1883  002AF2  0101               	movlb	1	; () banked
  1884  002AF4  0E01               	movlw	high _MessageBuffer
  1885  002AF6  0100               	movlb	0	; () banked
  1886  002AF8  0100               	movlb	0	; () banked
  1887  002AFA  2162               	addwfc	(borrarBufferRx@i+1)& (0+255),w,b
  1888  002AFC  6EDA               	movwf	fsr2h,c
  1889  002AFE  0E00               	movlw	0
  1890  002B00  6EDF               	movwf	indf2,c
  1891                           
  1892                           ; BSR set to: 0
  1893  002B02  0100               	movlb	0	; () banked
  1894  002B04  0100               	movlb	0	; () banked
  1895  002B06  4B61               	infsnz	borrarBufferRx@i& (0+255),f,b
  1896  002B08  2B62               	incf	(borrarBufferRx@i+1)& (0+255),f,b
  1897  002B0A  D7E3               	goto	L1
  1898  002B0C                     l3740:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;main.c: 229: globalIndexRx = 0;
  1902  002B0C  0100               	movlb	0	; () banked
  1903  002B0E  6F60               	movwf	??_borrarBufferRx& (0+255),b
  1904  002B10  0E00               	movlw	0
  1905  002B12  0100               	movlb	0	; () banked
  1906  002B14  0100               	movlb	0	; () banked
  1907  002B16  6FDA               	movwf	_globalIndexRx& (0+255),b
  1908  002B18  0100               	movlb	0	; () banked
  1909  002B1A  5160               	movf	??_borrarBufferRx& (0+255),w,b
  1910                           
  1911                           ; BSR set to: 0
  1912  002B1C  0012               	return	
  1913  002B1E                     __end_of_borrarBufferRx:
  1914                           	opt stack 0
  1915                           tblptru	equ	0xFF8
  1916                           tblptrh	equ	0xFF7
  1917                           tblptrl	equ	0xFF6
  1918                           tablat	equ	0xFF5
  1919                           intcon	equ	0xFF2
  1920                           intcon2	equ	0xFF1
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           postdec1	equ	0xFE5
  1924                           fsr1l	equ	0xFE1
  1925                           indf2	equ	0xFDF
  1926                           fsr2h	equ	0xFDA
  1927                           fsr2l	equ	0xFD9
  1928                           status	equ	0xFD8
  1929                           
  1930 ;; *************** function _parserRx *****************
  1931 ;; Defined at:
  1932 ;;		line 131 in file "main.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  potencia        4   33[BANK0 ] long 
  1937 ;;  dirGiro         4   29[BANK0 ] unsigned long 
  1938 ;;  argumento       5   37[BANK0 ] unsigned char [5]
  1939 ;;  j               1   42[BANK0 ] unsigned char 
  1940 ;;  comando         1   28[BANK0 ] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;		None               void
  1943 ;; Registers used:
  1944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1950 ;;      Params:         0       0       0       0       0       0       0       0       0
  1951 ;;      Locals:         0      15       0       0       0       0       0       0       0
  1952 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1953 ;;      Totals:         0      17       0       0       0       0       0       0       0
  1954 ;;Total ram usage:       17 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    6
  1957 ;; This function calls:
  1958 ;;		_labs
  1959 ;;		_reset_integral
  1960 ;;		_atol
  1961 ;;		_atoi
  1962 ;;		_setActuador
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text4
  1969  001036                     __ptext4:
  1970                           	opt stack 0
  1971  001036                     _parserRx:
  1972                           	opt stack 24
  1973                           
  1974                           ;main.c: 132: uint8_t comando;
  1975                           ;main.c: 133: uint8_t j = 1;
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;incstack = 0
  1979                           ;incstack = 0
  1980  001036  0100               	movlb	0	; () banked
  1981  001038  6F7A               	movwf	??_parserRx& (0+255),b
  1982  00103A  0E01               	movlw	1
  1983  00103C  0100               	movlb	0	; () banked
  1984  00103E  0100               	movlb	0	; () banked
  1985  001040  6F8A               	movwf	parserRx@j& (0+255),b
  1986  001042  0100               	movlb	0	; () banked
  1987  001044  517A               	movf	??_parserRx& (0+255),w,b
  1988                           
  1989                           ;main.c: 135: uint8_t argumento[5];
  1990                           ;main.c: 136: banderaParser = 0;
  1991  001046  0100               	movlb	0	; () banked
  1992  001048  6F7A               	movwf	??_parserRx& (0+255),b
  1993  00104A  0E00               	movlw	0
  1994  00104C  0100               	movlb	0	; () banked
  1995  00104E  0100               	movlb	0	; () banked
  1996  001050  6FD8               	movwf	_banderaParser& (0+255),b
  1997  001052  0100               	movlb	0	; () banked
  1998  001054  517A               	movf	??_parserRx& (0+255),w,b
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;main.c: 137: comando = MessageBuffer[0];
  2002  001056  C13D  F07C         	movff	_MessageBuffer,parserRx@comando
  2003  00105A                     l3562:
  2004                           
  2005                           ;main.c: 139: argumento[j - 1] = MessageBuffer[j];
  2006  00105A  0100               	movlb	0	; () banked
  2007  00105C  0100               	movlb	0	; () banked
  2008  00105E  518A               	movf	parserRx@j& (0+255),w,b
  2009  001060  0D01               	mullw	1
  2010  001062  0101               	movlb	1	; () banked
  2011  001064  0E3D               	movlw	low _MessageBuffer
  2012  001066  24F3               	addwf	prodl,w,c
  2013  001068  6ED9               	movwf	fsr2l,c
  2014  00106A  0101               	movlb	1	; () banked
  2015  00106C  0E01               	movlw	high _MessageBuffer
  2016  00106E  20F4               	addwfc	prodh,w,c
  2017  001070  6EDA               	movwf	fsr2h,c
  2018  001072  0EFF               	movlw	255
  2019  001074  0100               	movlb	0	; () banked
  2020  001076  0100               	movlb	0	; () banked
  2021  001078  258A               	addwf	parserRx@j& (0+255),w,b
  2022  00107A  0100               	movlb	0	; () banked
  2023  00107C  6F7A               	movwf	??_parserRx& (0+255),b
  2024  00107E  0100               	movlb	0	; () banked
  2025  001080  0100               	movlb	0	; () banked
  2026  001082  6B7B               	clrf	(??_parserRx+1)& (0+255),b
  2027  001084  0EFF               	movlw	255
  2028  001086  237B               	addwfc	(??_parserRx+1)& (0+255),f,b
  2029  001088  0100               	movlb	0	; () banked
  2030  00108A  0E85               	movlw	low parserRx@argumento
  2031  00108C  0100               	movlb	0	; () banked
  2032  00108E  257A               	addwf	??_parserRx& (0+255),w,b
  2033  001090  6EE1               	movwf	fsr1l,c
  2034  001092  0100               	movlb	0	; () banked
  2035  001094  0E00               	movlw	high parserRx@argumento
  2036  001096  0100               	movlb	0	; () banked
  2037  001098  217B               	addwfc	(??_parserRx+1)& (0+255),w,b
  2038  00109A  6EE2               	movwf	fsr1h,c
  2039  00109C  CFDF FFE7          	movff	indf2,indf1
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main.c: 140: j++;
  2043  0010A0  0100               	movlb	0	; () banked
  2044  0010A2  0100               	movlb	0	; () banked
  2045  0010A4  2B8A               	incf	parserRx@j& (0+255),f,b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;main.c: 141: if (j > 5) break;
  2049  0010A6  0E05               	movlw	5
  2050  0010A8  0100               	movlb	0	; () banked
  2051  0010AA  0100               	movlb	0	; () banked
  2052  0010AC  658A               	cpfsgt	parserRx@j& (0+255),b
  2053  0010AE  D001               	goto	l3570
  2054  0010B0  D00F               	goto	l3572
  2055  0010B2                     l3570:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;main.c: 142: } while (MessageBuffer[j] != '\0');
  2059  0010B2  0100               	movlb	0	; () banked
  2060  0010B4  0100               	movlb	0	; () banked
  2061  0010B6  518A               	movf	parserRx@j& (0+255),w,b
  2062  0010B8  0D01               	mullw	1
  2063  0010BA  0101               	movlb	1	; () banked
  2064  0010BC  0E3D               	movlw	low _MessageBuffer
  2065  0010BE  24F3               	addwf	prodl,w,c
  2066  0010C0  6ED9               	movwf	fsr2l,c
  2067  0010C2  0101               	movlb	1	; () banked
  2068  0010C4  0E01               	movlw	high _MessageBuffer
  2069  0010C6  20F4               	addwfc	prodh,w,c
  2070  0010C8  6EDA               	movwf	fsr2h,c
  2071  0010CA  50DF               	movf	indf2,w,c
  2072  0010CC  A4D8               	btfss	status,2,c
  2073  0010CE  D7C5               	goto	l3562
  2074  0010D0                     l3572:
  2075                           
  2076                           ;main.c: 143: argumento[j-1] = '\0';
  2077  0010D0  0EFF               	movlw	255
  2078  0010D2  0100               	movlb	0	; () banked
  2079  0010D4  0100               	movlb	0	; () banked
  2080  0010D6  258A               	addwf	parserRx@j& (0+255),w,b
  2081  0010D8  0100               	movlb	0	; () banked
  2082  0010DA  6F7A               	movwf	??_parserRx& (0+255),b
  2083  0010DC  0100               	movlb	0	; () banked
  2084  0010DE  0100               	movlb	0	; () banked
  2085  0010E0  6B7B               	clrf	(??_parserRx+1)& (0+255),b
  2086  0010E2  0EFF               	movlw	255
  2087  0010E4  237B               	addwfc	(??_parserRx+1)& (0+255),f,b
  2088  0010E6  0100               	movlb	0	; () banked
  2089  0010E8  0E85               	movlw	low parserRx@argumento
  2090  0010EA  0100               	movlb	0	; () banked
  2091  0010EC  257A               	addwf	??_parserRx& (0+255),w,b
  2092  0010EE  6ED9               	movwf	fsr2l,c
  2093  0010F0  0100               	movlb	0	; () banked
  2094  0010F2  0E00               	movlw	high parserRx@argumento
  2095  0010F4  0100               	movlb	0	; () banked
  2096  0010F6  217B               	addwfc	(??_parserRx+1)& (0+255),w,b
  2097  0010F8  6EDA               	movwf	fsr2h,c
  2098  0010FA  0E00               	movlw	0
  2099  0010FC  6EDF               	movwf	indf2,c
  2100                           
  2101                           ;main.c: 144: for (; globalIndexRx > 0; globalIndexRx--)
  2102  0010FE  D011               	goto	l3578
  2103  001100                     l3574:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;main.c: 145: MessageBuffer[globalIndexRx] = 0x00;
  2107  001100  0100               	movlb	0	; () banked
  2108  001102  0100               	movlb	0	; () banked
  2109  001104  51DA               	movf	_globalIndexRx& (0+255),w,b
  2110  001106  0D01               	mullw	1
  2111  001108  0101               	movlb	1	; () banked
  2112  00110A  0E3D               	movlw	low _MessageBuffer
  2113  00110C  24F3               	addwf	prodl,w,c
  2114  00110E  6ED9               	movwf	fsr2l,c
  2115  001110  0101               	movlb	1	; () banked
  2116  001112  0E01               	movlw	high _MessageBuffer
  2117  001114  20F4               	addwfc	prodh,w,c
  2118  001116  6EDA               	movwf	fsr2h,c
  2119  001118  0E00               	movlw	0
  2120  00111A  6EDF               	movwf	indf2,c
  2121                           
  2122                           ; BSR set to: 1
  2123  00111C  0100               	movlb	0	; () banked
  2124  00111E  0100               	movlb	0	; () banked
  2125  001120  07DA               	decf	_globalIndexRx& (0+255),f,b
  2126  001122                     l3578:
  2127                           
  2128                           ; BSR set to: 0
  2129  001122  0100               	movlb	0	; () banked
  2130  001124  0100               	movlb	0	; () banked
  2131  001126  67DA               	tstfsz	_globalIndexRx& (0+255),b
  2132  001128  D7EB               	goto	l3574
  2133  00112A  D1B8               	goto	l3646
  2134  00112C                     l3580:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;main.c: 149: Kp = (uint32_t) atol(argumento);
  2138  00112C  0100               	movlb	0	; () banked
  2139  00112E  0E00               	movlw	high parserRx@argumento
  2140  001130  0100               	movlb	0	; () banked
  2141  001132  0100               	movlb	0	; () banked
  2142  001134  6F6D               	movwf	(?_atol+1)& (0+255),b
  2143  001136  0100               	movlb	0	; () banked
  2144  001138  0E85               	movlw	low parserRx@argumento
  2145  00113A  0100               	movlb	0	; () banked
  2146  00113C  6F6C               	movwf	?_atol& (0+255),b
  2147  00113E  ECF5  F00E         	call	_atol	;wreg free
  2148  001142  C06F  F0E4         	movff	?_atol+3,_Kp+3
  2149  001146  C06E  F0E3         	movff	?_atol+2,_Kp+2
  2150  00114A  C06D  F0E2         	movff	?_atol+1,_Kp+1
  2151  00114E  C06C  F0E1         	movff	?_atol,_Kp
  2152                           
  2153                           ;main.c: 150: break;
  2154  001152  D1DA               	goto	l249
  2155  001154                     l3582:
  2156                           
  2157                           ;main.c: 152: Ki = (uint32_t) atol(argumento);
  2158  001154  0100               	movlb	0	; () banked
  2159  001156  0E00               	movlw	high parserRx@argumento
  2160  001158  0100               	movlb	0	; () banked
  2161  00115A  0100               	movlb	0	; () banked
  2162  00115C  6F6D               	movwf	(?_atol+1)& (0+255),b
  2163  00115E  0100               	movlb	0	; () banked
  2164  001160  0E85               	movlw	low parserRx@argumento
  2165  001162  0100               	movlb	0	; () banked
  2166  001164  6F6C               	movwf	?_atol& (0+255),b
  2167  001166  ECF5  F00E         	call	_atol	;wreg free
  2168  00116A  C06F  F0BB         	movff	?_atol+3,_Ki+3
  2169  00116E  C06E  F0BA         	movff	?_atol+2,_Ki+2
  2170  001172  C06D  F0B9         	movff	?_atol+1,_Ki+1
  2171  001176  C06C  F0B8         	movff	?_atol,_Ki
  2172                           
  2173                           ;main.c: 153: break;
  2174  00117A  D1C6               	goto	l249
  2175  00117C                     l3584:
  2176                           
  2177                           ;main.c: 155: Kd = (uint32_t) atol(argumento);
  2178  00117C  0100               	movlb	0	; () banked
  2179  00117E  0E00               	movlw	high parserRx@argumento
  2180  001180  0100               	movlb	0	; () banked
  2181  001182  0100               	movlb	0	; () banked
  2182  001184  6F6D               	movwf	(?_atol+1)& (0+255),b
  2183  001186  0100               	movlb	0	; () banked
  2184  001188  0E85               	movlw	low parserRx@argumento
  2185  00118A  0100               	movlb	0	; () banked
  2186  00118C  6F6C               	movwf	?_atol& (0+255),b
  2187  00118E  ECF5  F00E         	call	_atol	;wreg free
  2188  001192  C06F  F0B3         	movff	?_atol+3,_Kd+3
  2189  001196  C06E  F0B2         	movff	?_atol+2,_Kd+2
  2190  00119A  C06D  F0B1         	movff	?_atol+1,_Kd+1
  2191  00119E  C06C  F0B0         	movff	?_atol,_Kd
  2192                           
  2193                           ;main.c: 156: break;
  2194  0011A2  D1B2               	goto	l249
  2195  0011A4                     l3586:
  2196                           
  2197                           ;main.c: 158: Kp2 = (uint32_t) atol(argumento);
  2198  0011A4  0100               	movlb	0	; () banked
  2199  0011A6  0E00               	movlw	high parserRx@argumento
  2200  0011A8  0100               	movlb	0	; () banked
  2201  0011AA  0100               	movlb	0	; () banked
  2202  0011AC  6F6D               	movwf	(?_atol+1)& (0+255),b
  2203  0011AE  0100               	movlb	0	; () banked
  2204  0011B0  0E85               	movlw	low parserRx@argumento
  2205  0011B2  0100               	movlb	0	; () banked
  2206  0011B4  6F6C               	movwf	?_atol& (0+255),b
  2207  0011B6  ECF5  F00E         	call	_atol	;wreg free
  2208  0011BA  C06F  F0E8         	movff	?_atol+3,_Kp2+3
  2209  0011BE  C06E  F0E7         	movff	?_atol+2,_Kp2+2
  2210  0011C2  C06D  F0E6         	movff	?_atol+1,_Kp2+1
  2211  0011C6  C06C  F0E5         	movff	?_atol,_Kp2
  2212                           
  2213                           ;main.c: 159: break;
  2214  0011CA  D19E               	goto	l249
  2215  0011CC                     l3588:
  2216                           
  2217                           ;main.c: 161: Ki2 = (uint32_t) atol(argumento);
  2218  0011CC  0100               	movlb	0	; () banked
  2219  0011CE  0E00               	movlw	high parserRx@argumento
  2220  0011D0  0100               	movlb	0	; () banked
  2221  0011D2  0100               	movlb	0	; () banked
  2222  0011D4  6F6D               	movwf	(?_atol+1)& (0+255),b
  2223  0011D6  0100               	movlb	0	; () banked
  2224  0011D8  0E85               	movlw	low parserRx@argumento
  2225  0011DA  0100               	movlb	0	; () banked
  2226  0011DC  6F6C               	movwf	?_atol& (0+255),b
  2227  0011DE  ECF5  F00E         	call	_atol	;wreg free
  2228  0011E2  C06F  F0BF         	movff	?_atol+3,_Ki2+3
  2229  0011E6  C06E  F0BE         	movff	?_atol+2,_Ki2+2
  2230  0011EA  C06D  F0BD         	movff	?_atol+1,_Ki2+1
  2231  0011EE  C06C  F0BC         	movff	?_atol,_Ki2
  2232                           
  2233                           ;main.c: 162: break;
  2234  0011F2  D18A               	goto	l249
  2235  0011F4                     l3590:
  2236                           
  2237                           ;main.c: 164: Kd2 = (uint32_t) atol(argumento);
  2238  0011F4  0100               	movlb	0	; () banked
  2239  0011F6  0E00               	movlw	high parserRx@argumento
  2240  0011F8  0100               	movlb	0	; () banked
  2241  0011FA  0100               	movlb	0	; () banked
  2242  0011FC  6F6D               	movwf	(?_atol+1)& (0+255),b
  2243  0011FE  0100               	movlb	0	; () banked
  2244  001200  0E85               	movlw	low parserRx@argumento
  2245  001202  0100               	movlb	0	; () banked
  2246  001204  6F6C               	movwf	?_atol& (0+255),b
  2247  001206  ECF5  F00E         	call	_atol	;wreg free
  2248  00120A  C06F  F0B7         	movff	?_atol+3,_Kd2+3
  2249  00120E  C06E  F0B6         	movff	?_atol+2,_Kd2+2
  2250  001212  C06D  F0B5         	movff	?_atol+1,_Kd2+1
  2251  001216  C06C  F0B4         	movff	?_atol,_Kd2
  2252                           
  2253                           ;main.c: 165: break;
  2254  00121A  D176               	goto	l249
  2255  00121C                     l236:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;main.c: 167: setPoint = posicion;
  2259  00121C  C0ED  F03D         	movff	_posicion,_setPoint
  2260  001220  C0EE  F03E         	movff	_posicion+1,_setPoint+1
  2261  001224  C0EF  F03F         	movff	_posicion+2,_setPoint+2
  2262  001228  C0F0  F040         	movff	_posicion+3,_setPoint+3
  2263                           
  2264                           ;main.c: 168: break;
  2265  00122C  D16D               	goto	l249
  2266  00122E                     l237:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;main.c: 170: TMR1IE = 0;
  2270  00122E  909D               	bcf	3997,0,c	;volatile
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;main.c: 171: controlOn = (uint8_t) atoi(argumento);
  2274  001230  0100               	movlb	0	; () banked
  2275  001232  0E00               	movlw	high parserRx@argumento
  2276  001234  0100               	movlb	0	; () banked
  2277  001236  0100               	movlb	0	; () banked
  2278  001238  6F67               	movwf	(?_atoi+1)& (0+255),b
  2279  00123A  0100               	movlb	0	; () banked
  2280  00123C  0E85               	movlw	low parserRx@argumento
  2281  00123E  0100               	movlb	0	; () banked
  2282  001240  6F66               	movwf	?_atoi& (0+255),b
  2283  001242  ECE4  F010         	call	_atoi	;wreg free
  2284  001246  0100               	movlb	0	; () banked
  2285  001248  0100               	movlb	0	; () banked
  2286  00124A  5166               	movf	?_atoi& (0+255),w,b
  2287  00124C  0100               	movlb	0	; () banked
  2288  00124E  0100               	movlb	0	; () banked
  2289  001250  6FF2               	movwf	_controlOn& (0+255),b
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;main.c: 172: controlAntesDelStep=controlOn;
  2293  001252  C0F2  F0F1         	movff	_controlOn,_controlAntesDelStep
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 173: setActuador(0, 0);
  2297  001256  0E00               	movlw	0
  2298  001258  0100               	movlb	0	; () banked
  2299  00125A  0100               	movlb	0	; () banked
  2300  00125C  6F68               	movwf	?_setActuador& (0+255),b
  2301  00125E  0E00               	movlw	0
  2302  001260  0100               	movlb	0	; () banked
  2303  001262  6F69               	movwf	(?_setActuador+1)& (0+255),b
  2304  001264  0E00               	movlw	0
  2305  001266  0100               	movlb	0	; () banked
  2306  001268  6F6A               	movwf	(?_setActuador+2)& (0+255),b
  2307  00126A  0E00               	movlw	0
  2308  00126C  0100               	movlb	0	; () banked
  2309  00126E  6F6B               	movwf	(?_setActuador+3)& (0+255),b
  2310  001270  0100               	movlb	0	; () banked
  2311  001272  6F7A               	movwf	??_parserRx& (0+255),b
  2312  001274  0E00               	movlw	0
  2313  001276  0100               	movlb	0	; () banked
  2314  001278  0100               	movlb	0	; () banked
  2315  00127A  6F6C               	movwf	(?_setActuador+4)& (0+255),b
  2316  00127C  0100               	movlb	0	; () banked
  2317  00127E  517A               	movf	??_parserRx& (0+255),w,b
  2318  001280  EC23  F013         	call	_setActuador	;wreg free
  2319  001284  D109               	goto	L3
  2320  001286                     l3600:
  2321                           
  2322                           ;main.c: 177: verbose = (uint8_t) atoi(argumento);
  2323  001286  0100               	movlb	0	; () banked
  2324  001288  0E00               	movlw	high parserRx@argumento
  2325  00128A  0100               	movlb	0	; () banked
  2326  00128C  0100               	movlb	0	; () banked
  2327  00128E  6F67               	movwf	(?_atoi+1)& (0+255),b
  2328  001290  0100               	movlb	0	; () banked
  2329  001292  0E85               	movlw	low parserRx@argumento
  2330  001294  0100               	movlb	0	; () banked
  2331  001296  6F66               	movwf	?_atoi& (0+255),b
  2332  001298  ECE4  F010         	call	_atoi	;wreg free
  2333  00129C  0100               	movlb	0	; () banked
  2334  00129E  0100               	movlb	0	; () banked
  2335  0012A0  5166               	movf	?_atoi& (0+255),w,b
  2336  0012A2  0100               	movlb	0	; () banked
  2337  0012A4  0100               	movlb	0	; () banked
  2338  0012A6  6FDC               	movwf	_verbose& (0+255),b
  2339                           
  2340                           ;main.c: 178: break;
  2341  0012A8  D12F               	goto	l249
  2342  0012AA                     l3602:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;main.c: 180: potenciaStep = (uint32_t) atol(argumento);
  2346  0012AA  0100               	movlb	0	; () banked
  2347  0012AC  0E00               	movlw	high parserRx@argumento
  2348  0012AE  0100               	movlb	0	; () banked
  2349  0012B0  0100               	movlb	0	; () banked
  2350  0012B2  6F6D               	movwf	(?_atol+1)& (0+255),b
  2351  0012B4  0100               	movlb	0	; () banked
  2352  0012B6  0E85               	movlw	low parserRx@argumento
  2353  0012B8  0100               	movlb	0	; () banked
  2354  0012BA  6F6C               	movwf	?_atol& (0+255),b
  2355  0012BC  ECF5  F00E         	call	_atol	;wreg free
  2356  0012C0  C06F  F0D3         	movff	?_atol+3,_potenciaStep+3
  2357  0012C4  C06E  F0D2         	movff	?_atol+2,_potenciaStep+2
  2358  0012C8  C06D  F0D1         	movff	?_atol+1,_potenciaStep+1
  2359  0012CC  C06C  F0D0         	movff	?_atol,_potenciaStep
  2360                           
  2361                           ;main.c: 181: break;
  2362  0012D0  D11B               	goto	l249
  2363  0012D2                     l3604:
  2364                           
  2365                           ;main.c: 183: dirStep = (uint32_t) atol(argumento);
  2366  0012D2  0100               	movlb	0	; () banked
  2367  0012D4  0E00               	movlw	high parserRx@argumento
  2368  0012D6  0100               	movlb	0	; () banked
  2369  0012D8  0100               	movlb	0	; () banked
  2370  0012DA  6F6D               	movwf	(?_atol+1)& (0+255),b
  2371  0012DC  0100               	movlb	0	; () banked
  2372  0012DE  0E85               	movlw	low parserRx@argumento
  2373  0012E0  0100               	movlb	0	; () banked
  2374  0012E2  6F6C               	movwf	?_atol& (0+255),b
  2375  0012E4  ECF5  F00E         	call	_atol	;wreg free
  2376  0012E8  C06F  F0C3         	movff	?_atol+3,_dirStep+3
  2377  0012EC  C06E  F0C2         	movff	?_atol+2,_dirStep+2
  2378  0012F0  C06D  F0C1         	movff	?_atol+1,_dirStep+1
  2379  0012F4  C06C  F0C0         	movff	?_atol,_dirStep
  2380                           
  2381                           ;main.c: 184: break;
  2382  0012F8  D107               	goto	l249
  2383  0012FA                     l241:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;main.c: 186: TMR1IE = 0;
  2387  0012FA  909D               	bcf	3997,0,c	;volatile
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;main.c: 187: contadorCiclosControlOff = (uint32_t) atol(argumento);
  2391  0012FC  0100               	movlb	0	; () banked
  2392  0012FE  0E00               	movlw	high parserRx@argumento
  2393  001300  0100               	movlb	0	; () banked
  2394  001302  0100               	movlb	0	; () banked
  2395  001304  6F6D               	movwf	(?_atol+1)& (0+255),b
  2396  001306  0100               	movlb	0	; () banked
  2397  001308  0E85               	movlw	low parserRx@argumento
  2398  00130A  0100               	movlb	0	; () banked
  2399  00130C  6F6C               	movwf	?_atol& (0+255),b
  2400  00130E  ECF5  F00E         	call	_atol	;wreg free
  2401  001312  C06C  F025         	movff	?_atol,_contadorCiclosControlOff
  2402  001316  C06D  F026         	movff	?_atol+1,_contadorCiclosControlOff+1
  2403                           
  2404                           ;main.c: 188: controlAntesDelStep = controlOn;
  2405  00131A  C0F2  F0F1         	movff	_controlOn,_controlAntesDelStep
  2406                           
  2407                           ;main.c: 189: controlOn = 0;
  2408  00131E  0100               	movlb	0	; () banked
  2409  001320  6F7A               	movwf	??_parserRx& (0+255),b
  2410  001322  0E00               	movlw	0
  2411  001324  0100               	movlb	0	; () banked
  2412  001326  0100               	movlb	0	; () banked
  2413  001328  6FF2               	movwf	_controlOn& (0+255),b
  2414  00132A  0100               	movlb	0	; () banked
  2415  00132C  517A               	movf	??_parserRx& (0+255),w,b
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;main.c: 190: dentroDeStep = 1;
  2419  00132E  0100               	movlb	0	; () banked
  2420  001330  6F7A               	movwf	??_parserRx& (0+255),b
  2421  001332  0E01               	movlw	1
  2422  001334  6E28               	movwf	_dentroDeStep,c
  2423  001336  0100               	movlb	0	; () banked
  2424  001338  517A               	movf	??_parserRx& (0+255),w,b
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;main.c: 191: reset_integral();
  2428  00133A  EC99  F016         	call	_reset_integral	;wreg free
  2429                           
  2430                           ;main.c: 192: setActuador(potenciaStep, dirStep);
  2431  00133E  C0D0  F068         	movff	_potenciaStep,?_setActuador
  2432  001342  C0D1  F069         	movff	_potenciaStep+1,?_setActuador+1
  2433  001346  C0D2  F06A         	movff	_potenciaStep+2,?_setActuador+2
  2434  00134A  C0D3  F06B         	movff	_potenciaStep+3,?_setActuador+3
  2435  00134E  C0C0  F06C         	movff	_dirStep,?_setActuador+4
  2436  001352  EC23  F013         	call	_setActuador	;wreg free
  2437  001356  D0A0               	goto	L3
  2438  001358                     l3620:
  2439                           
  2440                           ;main.c: 196: dutyPWMlimit = (uint32_t) atol(argumento);
  2441  001358  0100               	movlb	0	; () banked
  2442  00135A  0E00               	movlw	high parserRx@argumento
  2443  00135C  0100               	movlb	0	; () banked
  2444  00135E  0100               	movlb	0	; () banked
  2445  001360  6F6D               	movwf	(?_atol+1)& (0+255),b
  2446  001362  0100               	movlb	0	; () banked
  2447  001364  0E85               	movlw	low parserRx@argumento
  2448  001366  0100               	movlb	0	; () banked
  2449  001368  6F6C               	movwf	?_atol& (0+255),b
  2450  00136A  ECF5  F00E         	call	_atol	;wreg free
  2451  00136E  C06F  F0EC         	movff	?_atol+3,_dutyPWMlimit+3
  2452  001372  C06E  F0EB         	movff	?_atol+2,_dutyPWMlimit+2
  2453  001376  C06D  F0EA         	movff	?_atol+1,_dutyPWMlimit+1
  2454  00137A  C06C  F0E9         	movff	?_atol,_dutyPWMlimit
  2455                           
  2456                           ;main.c: 197: break;
  2457  00137E  D0C4               	goto	l249
  2458  001380                     l3622:
  2459                           
  2460                           ;main.c: 199: dutyPWMlimitTimeout = (uint32_t) atol(argumento);
  2461  001380  0100               	movlb	0	; () banked
  2462  001382  0E00               	movlw	high parserRx@argumento
  2463  001384  0100               	movlb	0	; () banked
  2464  001386  0100               	movlb	0	; () banked
  2465  001388  6F6D               	movwf	(?_atol+1)& (0+255),b
  2466  00138A  0100               	movlb	0	; () banked
  2467  00138C  0E85               	movlw	low parserRx@argumento
  2468  00138E  0100               	movlb	0	; () banked
  2469  001390  6F6C               	movwf	?_atol& (0+255),b
  2470  001392  ECF5  F00E         	call	_atol	;wreg free
  2471  001396  C06F  F03C         	movff	?_atol+3,_dutyPWMlimitTimeout+3
  2472  00139A  C06E  F03B         	movff	?_atol+2,_dutyPWMlimitTimeout+2
  2473  00139E  C06D  F03A         	movff	?_atol+1,_dutyPWMlimitTimeout+1
  2474  0013A2  C06C  F039         	movff	?_atol,_dutyPWMlimitTimeout
  2475                           
  2476                           ;main.c: 200: break;
  2477  0013A6  D0B0               	goto	l249
  2478  0013A8                     l3624:
  2479                           
  2480                           ;main.c: 202: dutyPWMmin = (uint32_t) atol(argumento);
  2481  0013A8  0100               	movlb	0	; () banked
  2482  0013AA  0E00               	movlw	high parserRx@argumento
  2483  0013AC  0100               	movlb	0	; () banked
  2484  0013AE  0100               	movlb	0	; () banked
  2485  0013B0  6F6D               	movwf	(?_atol+1)& (0+255),b
  2486  0013B2  0100               	movlb	0	; () banked
  2487  0013B4  0E85               	movlw	low parserRx@argumento
  2488  0013B6  0100               	movlb	0	; () banked
  2489  0013B8  6F6C               	movwf	?_atol& (0+255),b
  2490  0013BA  ECF5  F00E         	call	_atol	;wreg free
  2491  0013BE  C06F  F0C7         	movff	?_atol+3,_dutyPWMmin+3
  2492  0013C2  C06E  F0C6         	movff	?_atol+2,_dutyPWMmin+2
  2493  0013C6  C06D  F0C5         	movff	?_atol+1,_dutyPWMmin+1
  2494  0013CA  C06C  F0C4         	movff	?_atol,_dutyPWMmin
  2495                           
  2496                           ;main.c: 203: break;
  2497  0013CE  D09C               	goto	l249
  2498  0013D0                     l3626:
  2499                           
  2500                           ;main.c: 205: retornoParametros = (uint8_t) atoi(argumento);
  2501  0013D0  0100               	movlb	0	; () banked
  2502  0013D2  0E00               	movlw	high parserRx@argumento
  2503  0013D4  0100               	movlb	0	; () banked
  2504  0013D6  0100               	movlb	0	; () banked
  2505  0013D8  6F67               	movwf	(?_atoi+1)& (0+255),b
  2506  0013DA  0100               	movlb	0	; () banked
  2507  0013DC  0E85               	movlw	low parserRx@argumento
  2508  0013DE  0100               	movlb	0	; () banked
  2509  0013E0  6F66               	movwf	?_atoi& (0+255),b
  2510  0013E2  ECE4  F010         	call	_atoi	;wreg free
  2511  0013E6  0100               	movlb	0	; () banked
  2512  0013E8  0100               	movlb	0	; () banked
  2513  0013EA  5166               	movf	?_atoi& (0+255),w,b
  2514  0013EC  0100               	movlb	0	; () banked
  2515  0013EE  0100               	movlb	0	; () banked
  2516  0013F0  6FDB               	movwf	_retornoParametros& (0+255),b	;volatile
  2517                           
  2518                           ;main.c: 206: break;
  2519  0013F2  D08A               	goto	l249
  2520  0013F4                     l246:
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;main.c: 208: TMR1IE = 0;
  2524  0013F4  909D               	bcf	3997,0,c	;volatile
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;main.c: 209: controlOn = 0;
  2528  0013F6  0100               	movlb	0	; () banked
  2529  0013F8  6F7A               	movwf	??_parserRx& (0+255),b
  2530  0013FA  0E00               	movlw	0
  2531  0013FC  0100               	movlb	0	; () banked
  2532  0013FE  0100               	movlb	0	; () banked
  2533  001400  6FF2               	movwf	_controlOn& (0+255),b
  2534  001402  0100               	movlb	0	; () banked
  2535  001404  517A               	movf	??_parserRx& (0+255),w,b
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;main.c: 210: int32_t potencia = (int32_t) atol(argumento);
  2539  001406  0100               	movlb	0	; () banked
  2540  001408  0E00               	movlw	high parserRx@argumento
  2541  00140A  0100               	movlb	0	; () banked
  2542  00140C  0100               	movlb	0	; () banked
  2543  00140E  6F6D               	movwf	(?_atol+1)& (0+255),b
  2544  001410  0100               	movlb	0	; () banked
  2545  001412  0E85               	movlw	low parserRx@argumento
  2546  001414  0100               	movlb	0	; () banked
  2547  001416  6F6C               	movwf	?_atol& (0+255),b
  2548  001418  ECF5  F00E         	call	_atol	;wreg free
  2549  00141C  C06F  F084         	movff	?_atol+3,parserRx@potencia+3
  2550  001420  C06E  F083         	movff	?_atol+2,parserRx@potencia+2
  2551  001424  C06D  F082         	movff	?_atol+1,parserRx@potencia+1
  2552  001428  C06C  F081         	movff	?_atol,parserRx@potencia
  2553                           
  2554                           ;main.c: 211: uint32_t dirGiro = 0;
  2555  00142C  0E00               	movlw	0
  2556  00142E  0100               	movlb	0	; () banked
  2557  001430  0100               	movlb	0	; () banked
  2558  001432  6F7D               	movwf	parserRx@dirGiro& (0+255),b
  2559  001434  0E00               	movlw	0
  2560  001436  0100               	movlb	0	; () banked
  2561  001438  6F7E               	movwf	(parserRx@dirGiro+1)& (0+255),b
  2562  00143A  0E00               	movlw	0
  2563  00143C  0100               	movlb	0	; () banked
  2564  00143E  6F7F               	movwf	(parserRx@dirGiro+2)& (0+255),b
  2565  001440  0E00               	movlw	0
  2566  001442  0100               	movlb	0	; () banked
  2567  001444  6F80               	movwf	(parserRx@dirGiro+3)& (0+255),b
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;main.c: 212: if (potencia < 0){
  2571  001446  0100               	movlb	0	; () banked
  2572  001448  0100               	movlb	0	; () banked
  2573  00144A  AF84               	btfss	(parserRx@potencia+3)& (0+255),7,b
  2574  00144C  D002               	goto	l3638
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;main.c: 213: dirGiro = 1;
  2578  00144E  0E01               	movlw	1
  2579  001450  D001               	goto	L4
  2580  001452                     l3638:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;main.c: 215: dirGiro = 2;
  2584  001452  0E02               	movlw	2
  2585  001454                     L4:
  2586  001454  0100               	movlb	0	; () banked
  2587  001456  0100               	movlb	0	; () banked
  2588  001458  6F7D               	movwf	parserRx@dirGiro& (0+255),b
  2589  00145A  0E00               	movlw	0
  2590  00145C  0100               	movlb	0	; () banked
  2591  00145E  6F7E               	movwf	(parserRx@dirGiro+1)& (0+255),b
  2592  001460  0E00               	movlw	0
  2593  001462  0100               	movlb	0	; () banked
  2594  001464  6F7F               	movwf	(parserRx@dirGiro+2)& (0+255),b
  2595  001466  0E00               	movlw	0
  2596  001468  0100               	movlb	0	; () banked
  2597  00146A  6F80               	movwf	(parserRx@dirGiro+3)& (0+255),b
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;main.c: 216: }
  2601                           ;main.c: 217: setActuador((uint32_t) labs(potencia), dirGiro);
  2602                           
  2603                           ; BSR set to: 0
  2604  00146C  C081  F060         	movff	parserRx@potencia,?_labs
  2605  001470  C082  F061         	movff	parserRx@potencia+1,?_labs+1
  2606  001474  C083  F062         	movff	parserRx@potencia+2,?_labs+2
  2607  001478  C084  F063         	movff	parserRx@potencia+3,?_labs+3
  2608  00147C  EC8F  F015         	call	_labs	;wreg free
  2609  001480  C063  F06B         	movff	?_labs+3,?_setActuador+3
  2610  001484  C062  F06A         	movff	?_labs+2,?_setActuador+2
  2611  001488  C061  F069         	movff	?_labs+1,?_setActuador+1
  2612  00148C  C060  F068         	movff	?_labs,?_setActuador
  2613  001490  C07D  F06C         	movff	parserRx@dirGiro,?_setActuador+4
  2614  001494  EC23  F013         	call	_setActuador	;wreg free
  2615  001498                     L3:
  2616                           
  2617                           ;main.c: 218: TMR1IE = 1;
  2618  001498  809D               	bsf	3997,0,c	;volatile
  2619                           
  2620                           ;main.c: 219: break;
  2621  00149A  D036               	goto	l249
  2622  00149C                     l3646:
  2623  00149C  0100               	movlb	0	; () banked
  2624  00149E  0100               	movlb	0	; () banked
  2625  0014A0  517C               	movf	parserRx@comando& (0+255),w,b
  2626                           
  2627                           ; Switch size 1, requested type "space"
  2628                           ; Number of cases is 17, Range of values is 49 to 122
  2629                           ; switch strategies available:
  2630                           ; Name         Instructions Cycles
  2631                           ; simple_byte           52    27 (average)
  2632                           ;	Chosen strategy is simple_byte
  2633  0014A2  0A31               	xorlw	49	; case 49
  2634  0014A4  B4D8               	btfsc	status,2,c
  2635  0014A6  D758               	goto	l3620
  2636  0014A8  0A03               	xorlw	3	; case 50
  2637  0014AA  B4D8               	btfsc	status,2,c
  2638  0014AC  D769               	goto	l3622
  2639  0014AE  0A01               	xorlw	1	; case 51
  2640  0014B0  B4D8               	btfsc	status,2,c
  2641  0014B2  D77A               	goto	l3624
  2642  0014B4  0A52               	xorlw	82	; case 97
  2643  0014B6  B4D8               	btfsc	status,2,c
  2644  0014B8  D79D               	goto	l246
  2645  0014BA  0A02               	xorlw	2	; case 99
  2646  0014BC  B4D8               	btfsc	status,2,c
  2647  0014BE  D6B7               	goto	l237
  2648  0014C0  0A07               	xorlw	7	; case 100
  2649  0014C2  B4D8               	btfsc	status,2,c
  2650  0014C4  D65B               	goto	l3584
  2651  0014C6  0A01               	xorlw	1	; case 101
  2652  0014C8  B4D8               	btfsc	status,2,c
  2653  0014CA  D694               	goto	l3590
  2654  0014CC  0A0C               	xorlw	12	; case 105
  2655  0014CE  B4D8               	btfsc	status,2,c
  2656  0014D0  D641               	goto	l3582
  2657  0014D2  0A04               	xorlw	4	; case 109
  2658  0014D4  B4D8               	btfsc	status,2,c
  2659  0014D6  D6FD               	goto	l3604
  2660  0014D8  0A03               	xorlw	3	; case 110
  2661  0014DA  B4D8               	btfsc	status,2,c
  2662  0014DC  D6E6               	goto	l3602
  2663  0014DE  0A1E               	xorlw	30	; case 112
  2664  0014E0  B4D8               	btfsc	status,2,c
  2665  0014E2  D624               	goto	l3580
  2666  0014E4  0A01               	xorlw	1	; case 113
  2667  0014E6  B4D8               	btfsc	status,2,c
  2668  0014E8  D65D               	goto	l3586
  2669  0014EA  0A03               	xorlw	3	; case 114
  2670  0014EC  B4D8               	btfsc	status,2,c
  2671  0014EE  D770               	goto	l3626
  2672  0014F0  0A01               	xorlw	1	; case 115
  2673  0014F2  B4D8               	btfsc	status,2,c
  2674  0014F4  D702               	goto	l241
  2675  0014F6  0A05               	xorlw	5	; case 118
  2676  0014F8  B4D8               	btfsc	status,2,c
  2677  0014FA  D6C5               	goto	l3600
  2678  0014FC  0A01               	xorlw	1	; case 119
  2679  0014FE  B4D8               	btfsc	status,2,c
  2680  001500  D665               	goto	l3588
  2681  001502  0A0D               	xorlw	13	; case 122
  2682  001504  B4D8               	btfsc	status,2,c
  2683  001506  D68A               	goto	l236
  2684  001508                     l249:
  2685  001508  0012               	return	
  2686  00150A                     __end_of_parserRx:
  2687                           	opt stack 0
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           prodh	equ	0xFF4
  2693                           prodl	equ	0xFF3
  2694                           intcon	equ	0xFF2
  2695                           intcon2	equ	0xFF1
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           indf1	equ	0xFE7
  2699                           postdec1	equ	0xFE5
  2700                           fsr1h	equ	0xFE2
  2701                           fsr1l	equ	0xFE1
  2702                           indf2	equ	0xFDF
  2703                           fsr2h	equ	0xFDA
  2704                           fsr2l	equ	0xFD9
  2705                           status	equ	0xFD8
  2706                           
  2707 ;; *************** function _setActuador *****************
  2708 ;; Defined at:
  2709 ;;		line 307 in file "main.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  dutyPWM         4    8[BANK0 ] unsigned long 
  2712 ;;  dirGiro         1   12[BANK0 ] unsigned char 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;		None               void
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2724 ;;      Params:         0       5       0       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2727 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2728 ;;Total ram usage:        5 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    5
  2731 ;; This function calls:
  2732 ;;		_setDUTY
  2733 ;; This function is called by:
  2734 ;;		_parserRx
  2735 ;;		_accionDeControl
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text5
  2740  002646                     __ptext5:
  2741                           	opt stack 0
  2742  002646                     _setActuador:
  2743                           	opt stack 24
  2744                           
  2745                           ;main.c: 308: dutyPWM += dutyPWMmin;
  2746                           
  2747                           ;incstack = 0
  2748                           ;incstack = 0
  2749  002646  0100               	movlb	0	; () banked
  2750  002648  0100               	movlb	0	; () banked
  2751  00264A  51C4               	movf	_dutyPWMmin& (0+255),w,b
  2752  00264C  0100               	movlb	0	; () banked
  2753  00264E  0100               	movlb	0	; () banked
  2754  002650  2768               	addwf	setActuador@dutyPWM& (0+255),f,b
  2755  002652  0100               	movlb	0	; () banked
  2756  002654  0100               	movlb	0	; () banked
  2757  002656  51C5               	movf	(_dutyPWMmin+1)& (0+255),w,b
  2758  002658  0100               	movlb	0	; () banked
  2759  00265A  0100               	movlb	0	; () banked
  2760  00265C  2369               	addwfc	(setActuador@dutyPWM+1)& (0+255),f,b
  2761  00265E  0100               	movlb	0	; () banked
  2762  002660  0100               	movlb	0	; () banked
  2763  002662  51C6               	movf	(_dutyPWMmin+2)& (0+255),w,b
  2764  002664  0100               	movlb	0	; () banked
  2765  002666  0100               	movlb	0	; () banked
  2766  002668  236A               	addwfc	(setActuador@dutyPWM+2)& (0+255),f,b
  2767  00266A  0100               	movlb	0	; () banked
  2768  00266C  0100               	movlb	0	; () banked
  2769  00266E  51C7               	movf	(_dutyPWMmin+3)& (0+255),w,b
  2770  002670  0100               	movlb	0	; () banked
  2771  002672  0100               	movlb	0	; () banked
  2772  002674  236B               	addwfc	(setActuador@dutyPWM+3)& (0+255),f,b
  2773                           
  2774                           ;main.c: 309: if (dutyPWM < 1024) {
  2775  002676  0E00               	movlw	0
  2776  002678  0100               	movlb	0	; () banked
  2777  00267A  0100               	movlb	0	; () banked
  2778  00267C  5D68               	subwf	setActuador@dutyPWM& (0+255),w,b
  2779  00267E  0E04               	movlw	4
  2780  002680  0100               	movlb	0	; () banked
  2781  002682  5969               	subwfb	(setActuador@dutyPWM+1)& (0+255),w,b
  2782  002684  0E00               	movlw	0
  2783  002686  0100               	movlb	0	; () banked
  2784  002688  596A               	subwfb	(setActuador@dutyPWM+2)& (0+255),w,b
  2785  00268A  0E00               	movlw	0
  2786  00268C  0100               	movlb	0	; () banked
  2787  00268E  0100               	movlb	0	; () banked
  2788  002690  596B               	subwfb	(setActuador@dutyPWM+3)& (0+255),w,b
  2789  002692  B0D8               	btfsc	status,0,c
  2790  002694  D007               	goto	l3722
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;main.c: 310: setDUTY((unsigned int) dutyPWM);
  2794  002696  C068  F066         	movff	setActuador@dutyPWM,?_setDUTY
  2795  00269A  C069  F067         	movff	setActuador@dutyPWM+1,?_setDUTY+1
  2796  00269E  EC4B  F017         	call	_setDUTY	;wreg free
  2797                           
  2798                           ;main.c: 311: } else {
  2799  0026A2  D012               	goto	l3726
  2800  0026A4                     l3722:
  2801                           
  2802                           ;main.c: 312: setDUTY(1023);
  2803  0026A4  0E03               	movlw	3
  2804  0026A6  0100               	movlb	0	; () banked
  2805  0026A8  0100               	movlb	0	; () banked
  2806  0026AA  6F67               	movwf	(?_setDUTY+1)& (0+255),b
  2807  0026AC  0EFF               	movlw	255
  2808  0026AE  0100               	movlb	0	; () banked
  2809  0026B0  6F66               	movwf	?_setDUTY& (0+255),b
  2810  0026B2  EC4B  F017         	call	_setDUTY	;wreg free
  2811  0026B6  D008               	goto	l3726
  2812  0026B8                     l271:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;main.c: 321: PORTDbits.RD0 = 1;
  2816  0026B8  8083               	bsf	3971,0,c	;volatile
  2817  0026BA  D004               	goto	L6
  2818  0026BC                     l272:
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;main.c: 325: PORTDbits.RD0 = 0;
  2822  0026BC  9083               	bcf	3971,0,c	;volatile
  2823                           
  2824                           ;main.c: 326: PORTDbits.RD1 = 1;
  2825  0026BE  8283               	bsf	3971,1,c	;volatile
  2826                           
  2827                           ;main.c: 327: break;
  2828  0026C0  D010               	goto	l274
  2829  0026C2                     l273:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;main.c: 329: PORTDbits.RD0 = 0;
  2833  0026C2  9083               	bcf	3971,0,c	;volatile
  2834  0026C4                     L6:
  2835                           
  2836                           ;main.c: 330: PORTDbits.RD1 = 0;
  2837  0026C4  9283               	bcf	3971,1,c	;volatile
  2838                           
  2839                           ;main.c: 331: break;
  2840  0026C6  D00D               	goto	l274
  2841  0026C8                     l3726:
  2842  0026C8  0100               	movlb	0	; () banked
  2843  0026CA  0100               	movlb	0	; () banked
  2844  0026CC  516C               	movf	setActuador@dirGiro& (0+255),w,b
  2845                           
  2846                           ; Switch size 1, requested type "space"
  2847                           ; Number of cases is 3, Range of values is 0 to 2
  2848                           ; switch strategies available:
  2849                           ; Name         Instructions Cycles
  2850                           ; simple_byte           10     6 (average)
  2851                           ;	Chosen strategy is simple_byte
  2852  0026CE  0A00               	xorlw	0	; case 0
  2853  0026D0  B4D8               	btfsc	status,2,c
  2854  0026D2  D7F7               	goto	l273
  2855  0026D4  0A01               	xorlw	1	; case 1
  2856  0026D6  B4D8               	btfsc	status,2,c
  2857  0026D8  D7EF               	goto	l271
  2858  0026DA  0A03               	xorlw	3	; case 2
  2859  0026DC  B4D8               	btfsc	status,2,c
  2860  0026DE  D7EE               	goto	l272
  2861  0026E0  D7F0               	goto	l273
  2862  0026E2                     l274:
  2863                           
  2864                           ; BSR set to: 0
  2865  0026E2  0012               	return	
  2866  0026E4                     __end_of_setActuador:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           prodh	equ	0xFF4
  2873                           prodl	equ	0xFF3
  2874                           intcon	equ	0xFF2
  2875                           intcon2	equ	0xFF1
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           indf1	equ	0xFE7
  2879                           postdec1	equ	0xFE5
  2880                           fsr1h	equ	0xFE2
  2881                           fsr1l	equ	0xFE1
  2882                           indf2	equ	0xFDF
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function _setDUTY *****************
  2888 ;; Defined at:
  2889 ;;		line 15 in file "MyPWM.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  duty            2    6[BANK0 ] unsigned int 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;		None               void
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2903 ;;      Params:         0       2       0       0       0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2906 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        2 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    4
  2910 ;; This function calls:
  2911 ;;		_SetDCPWM1
  2912 ;; This function is called by:
  2913 ;;		_setActuador
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text6
  2918  002E96                     __ptext6:
  2919                           	opt stack 0
  2920  002E96                     _setDUTY:
  2921                           	opt stack 24
  2922                           
  2923                           ;MyPWM.c: 16: SetDCPWM1 (duty);
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;incstack = 0
  2927                           ;incstack = 0
  2928  002E96  C066  F060         	movff	setDUTY@duty,?_SetDCPWM1
  2929  002E9A  C067  F061         	movff	setDUTY@duty+1,?_SetDCPWM1+1
  2930  002E9E  ECE3  F015         	call	_SetDCPWM1	;wreg free
  2931  002EA2  0012               	return	
  2932  002EA4                     __end_of_setDUTY:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           intcon	equ	0xFF2
  2941                           intcon2	equ	0xFF1
  2942                           postinc0	equ	0xFEE
  2943                           wreg	equ	0xFE8
  2944                           indf1	equ	0xFE7
  2945                           postdec1	equ	0xFE5
  2946                           fsr1h	equ	0xFE2
  2947                           fsr1l	equ	0xFE1
  2948                           indf2	equ	0xFDF
  2949                           fsr2h	equ	0xFDA
  2950                           fsr2l	equ	0xFD9
  2951                           status	equ	0xFD8
  2952                           
  2953 ;; *************** function _atoi *****************
  2954 ;; Defined at:
  2955 ;;		line 6 in file "/opt/microchip/xc8/v1.21/sources/common/atoi.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  2958 ;;		 -> parserRx@argumento(5), 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  a               2   12[BANK0 ] int 
  2961 ;;  sign            1   11[BANK0 ] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  2    6[BANK0 ] int 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2971 ;;      Params:         0       2       0       0       0       0       0       0       0
  2972 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2973 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2974 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2975 ;;Total ram usage:        8 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    4
  2978 ;; This function calls:
  2979 ;;		_isdigit
  2980 ;;		___wmul
  2981 ;; This function is called by:
  2982 ;;		_parserRx
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text7
  2987  0021C8                     __ptext7:
  2988                           	opt stack 0
  2989  0021C8                     _atoi:
  2990                           	opt stack 25
  2991                           
  2992                           ;incstack = 0
  2993                           ;incstack = 0
  2994  0021C8  D004               	goto	l3692
  2995  0021CA                     l3690:
  2996  0021CA  0100               	movlb	0	; () banked
  2997  0021CC  0100               	movlb	0	; () banked
  2998  0021CE  4B66               	infsnz	atoi@s& (0+255),f,b
  2999  0021D0  2B67               	incf	(atoi@s+1)& (0+255),f,b
  3000  0021D2                     l3692:
  3001  0021D2  C066  FFD9         	movff	atoi@s,fsr2l
  3002  0021D6  C067  FFDA         	movff	atoi@s+1,fsr2h
  3003  0021DA  50DF               	movf	indf2,w,c
  3004  0021DC  0A20               	xorlw	32
  3005  0021DE  B4D8               	btfsc	status,2,c
  3006  0021E0  D7F4               	goto	l3690
  3007  0021E2  C066  FFD9         	movff	atoi@s,fsr2l
  3008  0021E6  C067  FFDA         	movff	atoi@s+1,fsr2h
  3009  0021EA  50DF               	movf	indf2,w,c
  3010  0021EC  0A09               	xorlw	9
  3011  0021EE  B4D8               	btfsc	status,2,c
  3012  0021F0  D7EC               	goto	l3690
  3013  0021F2  0E00               	movlw	0
  3014  0021F4  0100               	movlb	0	; () banked
  3015  0021F6  0100               	movlb	0	; () banked
  3016  0021F8  6F6D               	movwf	(atoi@a+1)& (0+255),b
  3017  0021FA  0E00               	movlw	0
  3018  0021FC  0100               	movlb	0	; () banked
  3019  0021FE  6F6C               	movwf	atoi@a& (0+255),b
  3020                           
  3021                           ; BSR set to: 0
  3022  002200  0100               	movlb	0	; () banked
  3023  002202  6F68               	movwf	??_atoi& (0+255),b
  3024  002204  0E00               	movlw	0
  3025  002206  0100               	movlb	0	; () banked
  3026  002208  0100               	movlb	0	; () banked
  3027  00220A  6F6B               	movwf	atoi@sign& (0+255),b
  3028  00220C  0100               	movlb	0	; () banked
  3029  00220E  5168               	movf	??_atoi& (0+255),w,b
  3030                           
  3031                           ; BSR set to: 0
  3032  002210  0E2D               	movlw	45
  3033  002212  C066  FFD9         	movff	atoi@s,fsr2l
  3034  002216  C067  FFDA         	movff	atoi@s+1,fsr2h
  3035  00221A  62DF               	cpfseq	indf2,c
  3036  00221C  D004               	goto	l3704
  3037                           
  3038                           ; BSR set to: 0
  3039  00221E  0100               	movlb	0	; () banked
  3040  002220  0100               	movlb	0	; () banked
  3041  002222  2B6B               	incf	atoi@sign& (0+255),f,b
  3042  002224  D034               	goto	L7
  3043  002226                     l3704:
  3044                           
  3045                           ; BSR set to: 0
  3046  002226  0E2B               	movlw	43
  3047  002228  C066  FFD9         	movff	atoi@s,fsr2l
  3048  00222C  C067  FFDA         	movff	atoi@s+1,fsr2h
  3049  002230  62DF               	cpfseq	indf2,c
  3050  002232  D031               	goto	l3712
  3051  002234  D02C               	goto	L7
  3052  002236                     l3708:
  3053  002236  C06C  F060         	movff	atoi@a,?___wmul
  3054  00223A  C06D  F061         	movff	atoi@a+1,?___wmul+1
  3055  00223E  0E00               	movlw	0
  3056  002240  0100               	movlb	0	; () banked
  3057  002242  0100               	movlb	0	; () banked
  3058  002244  6F63               	movwf	(?___wmul+3)& (0+255),b
  3059  002246  0E0A               	movlw	10
  3060  002248  0100               	movlb	0	; () banked
  3061  00224A  6F62               	movwf	(?___wmul+2)& (0+255),b
  3062  00224C  EC01  F015         	call	___wmul	;wreg free
  3063  002250  C066  FFD9         	movff	atoi@s,fsr2l
  3064  002254  C067  FFDA         	movff	atoi@s+1,fsr2h
  3065  002258  50DF               	movf	indf2,w,c
  3066  00225A  0100               	movlb	0	; () banked
  3067  00225C  6F68               	movwf	??_atoi& (0+255),b
  3068  00225E  0100               	movlb	0	; () banked
  3069  002260  5168               	movf	??_atoi& (0+255),w,b
  3070  002262  0100               	movlb	0	; () banked
  3071  002264  0100               	movlb	0	; () banked
  3072  002266  2560               	addwf	?___wmul& (0+255),w,b
  3073  002268  0100               	movlb	0	; () banked
  3074  00226A  6F69               	movwf	(??_atoi+1)& (0+255),b
  3075  00226C  0100               	movlb	0	; () banked
  3076  00226E  0100               	movlb	0	; () banked
  3077  002270  0100               	movlb	0	; () banked
  3078  002272  0E00               	movlw	0
  3079  002274  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3080  002276  6F6A               	movwf	(??_atoi+2)& (0+255),b
  3081  002278  0ED0               	movlw	208
  3082  00227A  0100               	movlb	0	; () banked
  3083  00227C  2569               	addwf	(??_atoi+1)& (0+255),w,b
  3084  00227E  0100               	movlb	0	; () banked
  3085  002280  0100               	movlb	0	; () banked
  3086  002282  6F6C               	movwf	atoi@a& (0+255),b
  3087  002284  0EFF               	movlw	255
  3088  002286  0100               	movlb	0	; () banked
  3089  002288  216A               	addwfc	(??_atoi+2)& (0+255),w,b
  3090  00228A  0100               	movlb	0	; () banked
  3091  00228C  6F6D               	movwf	(atoi@a+1)& (0+255),b
  3092  00228E                     L7:
  3093                           
  3094                           ; BSR set to: 0
  3095  00228E  0100               	movlb	0	; () banked
  3096  002290  0100               	movlb	0	; () banked
  3097  002292  4B66               	infsnz	atoi@s& (0+255),f,b
  3098  002294  2B67               	incf	(atoi@s+1)& (0+255),f,b
  3099  002296                     l3712:
  3100                           
  3101                           ; BSR set to: 0
  3102  002296  C066  FFD9         	movff	atoi@s,fsr2l
  3103  00229A  C067  FFDA         	movff	atoi@s+1,fsr2h
  3104  00229E  50DF               	movf	indf2,w,c
  3105  0022A0  0100               	movlb	0	; () banked
  3106  0022A2  0100               	movlb	0	; () banked
  3107  0022A4  6F60               	movwf	?_isdigit& (0+255),b
  3108  0022A6  EC27  F016         	call	_isdigit	;wreg free
  3109  0022AA  B0D8               	btfsc	status,0,c
  3110  0022AC  D7C4               	goto	l3708
  3111  0022AE  0100               	movlb	0	; () banked
  3112  0022B0  0100               	movlb	0	; () banked
  3113  0022B2  516B               	movf	atoi@sign& (0+255),w,b
  3114  0022B4  B4D8               	btfsc	status,2,c
  3115  0022B6  D010               	goto	l600
  3116                           
  3117                           ; BSR set to: 0
  3118  0022B8  0100               	movlb	0	; () banked
  3119  0022BA  C06C  F068         	movff	atoi@a,??_atoi
  3120  0022BE  0100               	movlb	0	; () banked
  3121  0022C0  C06D  F069         	movff	atoi@a+1,??_atoi+1
  3122  0022C4  0100               	movlb	0	; () banked
  3123  0022C6  1F68               	comf	??_atoi& (0+255),f,b
  3124  0022C8  1F69               	comf	(??_atoi+1)& (0+255),f,b
  3125  0022CA  4B68               	infsnz	??_atoi& (0+255),f,b
  3126  0022CC  2B69               	incf	(??_atoi+1)& (0+255),f,b
  3127  0022CE  C068  F066         	movff	??_atoi,?_atoi
  3128  0022D2  C069  F067         	movff	??_atoi+1,?_atoi+1
  3129  0022D6  D004               	goto	l601
  3130  0022D8                     l600:
  3131                           
  3132                           ; BSR set to: 0
  3133  0022D8  C06C  F066         	movff	atoi@a,?_atoi
  3134  0022DC  C06D  F067         	movff	atoi@a+1,?_atoi+1
  3135  0022E0                     l601:
  3136                           
  3137                           ; BSR set to: 0
  3138  0022E0  0012               	return	
  3139  0022E2                     __end_of_atoi:
  3140                           	opt stack 0
  3141                           tblptru	equ	0xFF8
  3142                           tblptrh	equ	0xFF7
  3143                           tblptrl	equ	0xFF6
  3144                           tablat	equ	0xFF5
  3145                           prodh	equ	0xFF4
  3146                           prodl	equ	0xFF3
  3147                           intcon	equ	0xFF2
  3148                           intcon2	equ	0xFF1
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           indf1	equ	0xFE7
  3152                           postdec1	equ	0xFE5
  3153                           fsr1h	equ	0xFE2
  3154                           fsr1l	equ	0xFE1
  3155                           indf2	equ	0xFDF
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function ___wmul *****************
  3161 ;; Defined at:
  3162 ;;		line 5 in file "/opt/microchip/xc8/v1.21/sources/common/wmul.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3165 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  product         2    4[BANK0 ] unsigned int 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  2    0[BANK0 ] unsigned int 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0, prodl, prodh
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3177 ;;      Params:         0       4       0       0       0       0       0       0       0
  3178 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3180 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3181 ;;Total ram usage:        6 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    3
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_atoi
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text8
  3192  002A02                     __ptext8:
  3193                           	opt stack 0
  3194  002A02                     ___wmul:
  3195                           	opt stack 25
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;incstack = 0
  3199                           ;incstack = 0
  3200  002A02  0100               	movlb	0	; () banked
  3201  002A04  0100               	movlb	0	; () banked
  3202  002A06  5160               	movf	___wmul@multiplier& (0+255),w,b
  3203  002A08  0100               	movlb	0	; () banked
  3204  002A0A  0100               	movlb	0	; () banked
  3205  002A0C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3206  002A0E  CFF3 F064          	movff	prodl,___wmul@product
  3207  002A12  CFF4 F065          	movff	prodh,___wmul@product+1
  3208  002A16  0100               	movlb	0	; () banked
  3209  002A18  0100               	movlb	0	; () banked
  3210  002A1A  5160               	movf	___wmul@multiplier& (0+255),w,b
  3211  002A1C  0100               	movlb	0	; () banked
  3212  002A1E  0100               	movlb	0	; () banked
  3213  002A20  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3214  002A22  CFF3 FFF4          	movff	prodl,prodh
  3215  002A26  6AF3               	clrf	prodl,c
  3216  002A28  50F3               	movf	prodl,w,c
  3217  002A2A  0100               	movlb	0	; () banked
  3218  002A2C  0100               	movlb	0	; () banked
  3219  002A2E  2764               	addwf	___wmul@product& (0+255),f,b
  3220  002A30  50F4               	movf	prodh,w,c
  3221  002A32  0100               	movlb	0	; () banked
  3222  002A34  0100               	movlb	0	; () banked
  3223  002A36  2365               	addwfc	(___wmul@product+1)& (0+255),f,b
  3224  002A38  0100               	movlb	0	; () banked
  3225  002A3A  0100               	movlb	0	; () banked
  3226  002A3C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3227  002A3E  0100               	movlb	0	; () banked
  3228  002A40  0100               	movlb	0	; () banked
  3229  002A42  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3230  002A44  CFF3 FFF4          	movff	prodl,prodh
  3231  002A48  6AF3               	clrf	prodl,c
  3232  002A4A  50F3               	movf	prodl,w,c
  3233  002A4C  0100               	movlb	0	; () banked
  3234  002A4E  0100               	movlb	0	; () banked
  3235  002A50  2764               	addwf	___wmul@product& (0+255),f,b
  3236  002A52  50F4               	movf	prodh,w,c
  3237  002A54  0100               	movlb	0	; () banked
  3238  002A56  0100               	movlb	0	; () banked
  3239  002A58  2365               	addwfc	(___wmul@product+1)& (0+255),f,b
  3240                           
  3241                           ; BSR set to: 0
  3242  002A5A  C064  F060         	movff	___wmul@product,?___wmul
  3243  002A5E  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3244                           
  3245                           ; BSR set to: 0
  3246                           
  3247                           ; BSR set to: 0
  3248  002A62  0012               	return	
  3249  002A64                     __end_of___wmul:
  3250                           	opt stack 0
  3251                           tblptru	equ	0xFF8
  3252                           tblptrh	equ	0xFF7
  3253                           tblptrl	equ	0xFF6
  3254                           tablat	equ	0xFF5
  3255                           prodh	equ	0xFF4
  3256                           prodl	equ	0xFF3
  3257                           intcon	equ	0xFF2
  3258                           intcon2	equ	0xFF1
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           indf1	equ	0xFE7
  3262                           postdec1	equ	0xFE5
  3263                           fsr1h	equ	0xFE2
  3264                           fsr1l	equ	0xFE1
  3265                           indf2	equ	0xFDF
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _atol *****************
  3271 ;; Defined at:
  3272 ;;		line 6 in file "/opt/microchip/xc8/v1.21/sources/common/atol.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  s               2   12[BANK0 ] PTR const unsigned char 
  3275 ;;		 -> parserRx@argumento(5), 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  a               4   21[BANK0 ] long 
  3278 ;;  c               1   25[BANK0 ] unsigned char 
  3279 ;;  sign            1   20[BANK0 ] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  4   12[BANK0 ] long 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3289 ;;      Params:         0       4       0       0       0       0       0       0       0
  3290 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3291 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3292 ;;      Totals:         0      14       0       0       0       0       0       0       0
  3293 ;;Total ram usage:       14 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    4
  3296 ;; This function calls:
  3297 ;;		___lmul
  3298 ;;		_isdigit
  3299 ;; This function is called by:
  3300 ;;		_parserRx
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text9
  3305  001DEA                     __ptext9:
  3306                           	opt stack 0
  3307  001DEA                     _atol:
  3308                           	opt stack 25
  3309  001DEA                     l606:
  3310  001DEA  C06C  FFD9         	movff	atol@s,fsr2l
  3311  001DEE  C06D  FFDA         	movff	atol@s+1,fsr2h
  3312  001DF2  50DF               	movf	indf2,w,c
  3313  001DF4  0100               	movlb	0	; () banked
  3314  001DF6  0100               	movlb	0	; () banked
  3315  001DF8  6F79               	movwf	atol@c& (0+255),b
  3316                           
  3317                           ; BSR set to: 0
  3318  001DFA  0100               	movlb	0	; () banked
  3319  001DFC  0100               	movlb	0	; () banked
  3320  001DFE  4B6C               	infsnz	atol@s& (0+255),f,b
  3321  001E00  2B6D               	incf	(atol@s+1)& (0+255),f,b
  3322                           
  3323                           ; BSR set to: 0
  3324  001E02  0100               	movlb	0	; () banked
  3325  001E04  0100               	movlb	0	; () banked
  3326  001E06  5179               	movf	atol@c& (0+255),w,b
  3327  001E08  0A20               	xorlw	32
  3328  001E0A  B4D8               	btfsc	status,2,c
  3329  001E0C  D7EE               	goto	l606
  3330                           
  3331                           ; BSR set to: 0
  3332  001E0E  0100               	movlb	0	; () banked
  3333  001E10  0100               	movlb	0	; () banked
  3334  001E12  5179               	movf	atol@c& (0+255),w,b
  3335  001E14  0A09               	xorlw	9
  3336  001E16  B4D8               	btfsc	status,2,c
  3337  001E18  D7E8               	goto	l606
  3338                           
  3339                           ; BSR set to: 0
  3340                           
  3341                           ; BSR set to: 0
  3342  001E1A  0E00               	movlw	0
  3343  001E1C  0100               	movlb	0	; () banked
  3344  001E1E  0100               	movlb	0	; () banked
  3345  001E20  6F75               	movwf	atol@a& (0+255),b
  3346  001E22  0E00               	movlw	0
  3347  001E24  0100               	movlb	0	; () banked
  3348  001E26  6F76               	movwf	(atol@a+1)& (0+255),b
  3349  001E28  0E00               	movlw	0
  3350  001E2A  0100               	movlb	0	; () banked
  3351  001E2C  6F77               	movwf	(atol@a+2)& (0+255),b
  3352  001E2E  0E00               	movlw	0
  3353  001E30  0100               	movlb	0	; () banked
  3354  001E32  6F78               	movwf	(atol@a+3)& (0+255),b
  3355                           
  3356                           ; BSR set to: 0
  3357  001E34  0100               	movlb	0	; () banked
  3358  001E36  6F70               	movwf	??_atol& (0+255),b
  3359  001E38  0E00               	movlw	0
  3360  001E3A  0100               	movlb	0	; () banked
  3361  001E3C  0100               	movlb	0	; () banked
  3362  001E3E  6F74               	movwf	atol@sign& (0+255),b
  3363  001E40  0100               	movlb	0	; () banked
  3364  001E42  5170               	movf	??_atol& (0+255),w,b
  3365                           
  3366                           ; BSR set to: 0
  3367  001E44  0100               	movlb	0	; () banked
  3368  001E46  0100               	movlb	0	; () banked
  3369  001E48  5179               	movf	atol@c& (0+255),w,b
  3370  001E4A  0A2D               	xorlw	45
  3371  001E4C  A4D8               	btfss	status,2,c
  3372  001E4E  D004               	goto	l3668
  3373                           
  3374                           ; BSR set to: 0
  3375  001E50  0100               	movlb	0	; () banked
  3376  001E52  0100               	movlb	0	; () banked
  3377  001E54  2B74               	incf	atol@sign& (0+255),f,b
  3378  001E56  D03D               	goto	L8
  3379  001E58                     l3668:
  3380                           
  3381                           ; BSR set to: 0
  3382  001E58  0100               	movlb	0	; () banked
  3383  001E5A  0100               	movlb	0	; () banked
  3384  001E5C  5179               	movf	atol@c& (0+255),w,b
  3385  001E5E  0A2B               	xorlw	43
  3386  001E60  A4D8               	btfss	status,2,c
  3387  001E62  D043               	goto	l3680
  3388  001E64  D036               	goto	L8
  3389  001E66                     l3674:
  3390  001E66  C075  F060         	movff	atol@a,?___lmul
  3391  001E6A  C076  F061         	movff	atol@a+1,?___lmul+1
  3392  001E6E  C077  F062         	movff	atol@a+2,?___lmul+2
  3393  001E72  C078  F063         	movff	atol@a+3,?___lmul+3
  3394  001E76  0E0A               	movlw	10
  3395  001E78  0100               	movlb	0	; () banked
  3396  001E7A  0100               	movlb	0	; () banked
  3397  001E7C  6F64               	movwf	(?___lmul+4)& (0+255),b
  3398  001E7E  0E00               	movlw	0
  3399  001E80  0100               	movlb	0	; () banked
  3400  001E82  6F65               	movwf	(?___lmul+5)& (0+255),b
  3401  001E84  0E00               	movlw	0
  3402  001E86  0100               	movlb	0	; () banked
  3403  001E88  6F66               	movwf	(?___lmul+6)& (0+255),b
  3404  001E8A  0E00               	movlw	0
  3405  001E8C  0100               	movlb	0	; () banked
  3406  001E8E  6F67               	movwf	(?___lmul+7)& (0+255),b
  3407  001E90  EC72  F013         	call	___lmul	;wreg free
  3408  001E94  C079  F070         	movff	atol@c,??_atol
  3409  001E98  0ED0               	movlw	208
  3410  001E9A  0100               	movlb	0	; () banked
  3411  001E9C  2770               	addwf	??_atol& (0+255),f,b
  3412  001E9E  0100               	movlb	0	; () banked
  3413  001EA0  5170               	movf	??_atol& (0+255),w,b
  3414  001EA2  0100               	movlb	0	; () banked
  3415  001EA4  0100               	movlb	0	; () banked
  3416  001EA6  2560               	addwf	?___lmul& (0+255),w,b
  3417  001EA8  0100               	movlb	0	; () banked
  3418  001EAA  0100               	movlb	0	; () banked
  3419  001EAC  6F75               	movwf	atol@a& (0+255),b
  3420  001EAE  0E00               	movlw	0
  3421  001EB0  0100               	movlb	0	; () banked
  3422  001EB2  0100               	movlb	0	; () banked
  3423  001EB4  2161               	addwfc	(?___lmul+1)& (0+255),w,b
  3424  001EB6  0100               	movlb	0	; () banked
  3425  001EB8  6F76               	movwf	(atol@a+1)& (0+255),b
  3426  001EBA  0E00               	movlw	0
  3427  001EBC  0100               	movlb	0	; () banked
  3428  001EBE  0100               	movlb	0	; () banked
  3429  001EC0  2162               	addwfc	(?___lmul+2)& (0+255),w,b
  3430  001EC2  0100               	movlb	0	; () banked
  3431  001EC4  6F77               	movwf	(atol@a+2)& (0+255),b
  3432  001EC6  0E00               	movlw	0
  3433  001EC8  0100               	movlb	0	; () banked
  3434  001ECA  0100               	movlb	0	; () banked
  3435  001ECC  2163               	addwfc	(?___lmul+3)& (0+255),w,b
  3436  001ECE  0100               	movlb	0	; () banked
  3437  001ED0  6F78               	movwf	(atol@a+3)& (0+255),b
  3438  001ED2                     L8:
  3439                           
  3440                           ; BSR set to: 0
  3441  001ED2  C06C  FFD9         	movff	atol@s,fsr2l
  3442  001ED6  C06D  FFDA         	movff	atol@s+1,fsr2h
  3443  001EDA  50DF               	movf	indf2,w,c
  3444  001EDC  0100               	movlb	0	; () banked
  3445  001EDE  0100               	movlb	0	; () banked
  3446  001EE0  6F79               	movwf	atol@c& (0+255),b
  3447                           
  3448                           ; BSR set to: 0
  3449  001EE2  0100               	movlb	0	; () banked
  3450  001EE4  0100               	movlb	0	; () banked
  3451  001EE6  4B6C               	infsnz	atol@s& (0+255),f,b
  3452  001EE8  2B6D               	incf	(atol@s+1)& (0+255),f,b
  3453  001EEA                     l3680:
  3454                           
  3455                           ; BSR set to: 0
  3456  001EEA  C079  F060         	movff	atol@c,?_isdigit
  3457  001EEE  EC27  F016         	call	_isdigit	;wreg free
  3458  001EF2  B0D8               	btfsc	status,0,c
  3459  001EF4  D7B8               	goto	l3674
  3460  001EF6  0100               	movlb	0	; () banked
  3461  001EF8  0100               	movlb	0	; () banked
  3462  001EFA  5174               	movf	atol@sign& (0+255),w,b
  3463  001EFC  B4D8               	btfsc	status,2,c
  3464  001EFE  D01F               	goto	l614
  3465                           
  3466                           ; BSR set to: 0
  3467  001F00  0100               	movlb	0	; () banked
  3468  001F02  C075  F070         	movff	atol@a,??_atol
  3469  001F06  0100               	movlb	0	; () banked
  3470  001F08  C076  F071         	movff	atol@a+1,??_atol+1
  3471  001F0C  0100               	movlb	0	; () banked
  3472  001F0E  C077  F072         	movff	atol@a+2,??_atol+2
  3473  001F12  0100               	movlb	0	; () banked
  3474  001F14  C078  F073         	movff	atol@a+3,??_atol+3
  3475  001F18  0100               	movlb	0	; () banked
  3476  001F1A  1F70               	comf	??_atol& (0+255),f,b
  3477  001F1C  1F71               	comf	(??_atol+1)& (0+255),f,b
  3478  001F1E  1F72               	comf	(??_atol+2)& (0+255),f,b
  3479  001F20  1F73               	comf	(??_atol+3)& (0+255),f,b
  3480  001F22  2B70               	incf	??_atol& (0+255),f,b
  3481  001F24  0E00               	movlw	0
  3482  001F26  2371               	addwfc	(??_atol+1)& (0+255),f,b
  3483  001F28  2372               	addwfc	(??_atol+2)& (0+255),f,b
  3484  001F2A  2373               	addwfc	(??_atol+3)& (0+255),f,b
  3485  001F2C  C073  F06F         	movff	??_atol+3,?_atol+3
  3486  001F30  C072  F06E         	movff	??_atol+2,?_atol+2
  3487  001F34  C071  F06D         	movff	??_atol+1,?_atol+1
  3488  001F38  C070  F06C         	movff	??_atol,?_atol
  3489  001F3C  D008               	goto	l615
  3490  001F3E                     l614:
  3491                           
  3492                           ; BSR set to: 0
  3493  001F3E  C075  F06C         	movff	atol@a,?_atol
  3494  001F42  C076  F06D         	movff	atol@a+1,?_atol+1
  3495  001F46  C077  F06E         	movff	atol@a+2,?_atol+2
  3496  001F4A  C078  F06F         	movff	atol@a+3,?_atol+3
  3497  001F4E                     l615:
  3498                           
  3499                           ; BSR set to: 0
  3500  001F4E  0012               	return	
  3501  001F50                     __end_of_atol:
  3502                           	opt stack 0
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           prodh	equ	0xFF4
  3508                           prodl	equ	0xFF3
  3509                           intcon	equ	0xFF2
  3510                           intcon2	equ	0xFF1
  3511                           postinc0	equ	0xFEE
  3512                           wreg	equ	0xFE8
  3513                           indf1	equ	0xFE7
  3514                           postdec1	equ	0xFE5
  3515                           fsr1h	equ	0xFE2
  3516                           fsr1l	equ	0xFE1
  3517                           indf2	equ	0xFDF
  3518                           fsr2h	equ	0xFDA
  3519                           fsr2l	equ	0xFD9
  3520                           status	equ	0xFD8
  3521                           
  3522 ;; *************** function _isdigit *****************
  3523 ;; Defined at:
  3524 ;;		line 13 in file "/opt/microchip/xc8/v1.21/sources/common/isdigit.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  c               1    0[BANK0 ] unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;		None               void
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3538 ;;      Params:         0       1       0       0       0       0       0       0       0
  3539 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3540 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3541 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3542 ;;Total ram usage:        3 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    3
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_atoi
  3549 ;;		_atol
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text10
  3554  002C4E                     __ptext10:
  3555                           	opt stack 0
  3556  002C4E                     _isdigit:
  3557                           	opt stack 25
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;incstack = 0
  3561                           ;incstack = 0
  3562  002C4E  0100               	movlb	0	; () banked
  3563  002C50  6F61               	movwf	??_isdigit& (0+255),b
  3564  002C52  0E00               	movlw	0
  3565  002C54  0100               	movlb	0	; () banked
  3566  002C56  0100               	movlb	0	; () banked
  3567  002C58  6F62               	movwf	_isdigit$1965& (0+255),b
  3568  002C5A  0100               	movlb	0	; () banked
  3569  002C5C  5161               	movf	??_isdigit& (0+255),w,b
  3570                           
  3571                           ; BSR set to: 0
  3572  002C5E  0E3A               	movlw	58
  3573  002C60  0100               	movlb	0	; () banked
  3574  002C62  0100               	movlb	0	; () banked
  3575  002C64  6160               	cpfslt	isdigit@c& (0+255),b
  3576  002C66  D00D               	goto	l3910
  3577                           
  3578                           ; BSR set to: 0
  3579  002C68  0E2F               	movlw	47
  3580  002C6A  0100               	movlb	0	; () banked
  3581  002C6C  0100               	movlb	0	; () banked
  3582  002C6E  6560               	cpfsgt	isdigit@c& (0+255),b
  3583  002C70  D008               	goto	l3910
  3584                           
  3585                           ; BSR set to: 0
  3586  002C72  0100               	movlb	0	; () banked
  3587  002C74  6F61               	movwf	??_isdigit& (0+255),b
  3588  002C76  0E01               	movlw	1
  3589  002C78  0100               	movlb	0	; () banked
  3590  002C7A  0100               	movlb	0	; () banked
  3591  002C7C  6F62               	movwf	_isdigit$1965& (0+255),b
  3592  002C7E  0100               	movlb	0	; () banked
  3593  002C80  5161               	movf	??_isdigit& (0+255),w,b
  3594  002C82                     l3910:
  3595                           
  3596                           ; BSR set to: 0
  3597  002C82  C062  F061         	movff	_isdigit$1965,??_isdigit
  3598  002C86  0100               	movlb	0	; () banked
  3599  002C88  3161               	rrcf	??_isdigit& (0+255),w,b
  3600                           
  3601                           ; BSR set to: 0
  3602                           
  3603                           ; BSR set to: 0
  3604  002C8A  0012               	return	
  3605  002C8C                     __end_of_isdigit:
  3606                           	opt stack 0
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodh	equ	0xFF4
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           intcon2	equ	0xFF1
  3615                           postinc0	equ	0xFEE
  3616                           wreg	equ	0xFE8
  3617                           indf1	equ	0xFE7
  3618                           postdec1	equ	0xFE5
  3619                           fsr1h	equ	0xFE2
  3620                           fsr1l	equ	0xFE1
  3621                           indf2	equ	0xFDF
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _reset_integral *****************
  3627 ;; Defined at:
  3628 ;;		line 123 in file "main.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;		None               void
  3635 ;; Registers used:
  3636 ;;		wreg, status,2
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3642 ;;      Params:         0       0       0       0       0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    3
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_parserRx
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text11
  3657  002D32                     __ptext11:
  3658                           	opt stack 0
  3659  002D32                     _reset_integral:
  3660                           	opt stack 26
  3661                           
  3662                           ;main.c: 125: iError1 = 0;
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;incstack = 0
  3666                           ;incstack = 0
  3667  002D32  0E00               	movlw	0
  3668  002D34  6E29               	movwf	_iError1,c
  3669  002D36  0E00               	movlw	0
  3670  002D38  6E2A               	movwf	_iError1+1,c
  3671  002D3A  0E00               	movlw	0
  3672  002D3C  6E2B               	movwf	_iError1+2,c
  3673  002D3E  0E00               	movlw	0
  3674  002D40  6E2C               	movwf	_iError1+3,c
  3675                           
  3676                           ;main.c: 126: iError2 = 0;
  3677  002D42  0E00               	movlw	0
  3678  002D44  6E2D               	movwf	_iError2,c
  3679  002D46  0E00               	movlw	0
  3680  002D48  6E2E               	movwf	_iError2+1,c
  3681  002D4A  0E00               	movlw	0
  3682  002D4C  6E2F               	movwf	_iError2+2,c
  3683  002D4E  0E00               	movlw	0
  3684  002D50  6E30               	movwf	_iError2+3,c
  3685                           
  3686                           ;main.c: 127: tik0i= tik;
  3687  002D52  C0D4  F14F         	movff	_tik,_tik0i
  3688  002D56  C0D5  F150         	movff	_tik+1,_tik0i+1
  3689  002D5A  C0D6  F151         	movff	_tik+2,_tik0i+2
  3690  002D5E  C0D7  F152         	movff	_tik+3,_tik0i+3
  3691  002D62  0012               	return	
  3692  002D64                     __end_of_reset_integral:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           prodh	equ	0xFF4
  3699                           prodl	equ	0xFF3
  3700                           intcon	equ	0xFF2
  3701                           intcon2	equ	0xFF1
  3702                           postinc0	equ	0xFEE
  3703                           wreg	equ	0xFE8
  3704                           indf1	equ	0xFE7
  3705                           postdec1	equ	0xFE5
  3706                           fsr1h	equ	0xFE2
  3707                           fsr1l	equ	0xFE1
  3708                           indf2	equ	0xFDF
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           
  3713 ;; *************** function _enviarEstadoConsola *****************
  3714 ;; Defined at:
  3715 ;;		line 50 in file "MyUSART.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  tik             4    0[BANK1 ] unsigned long 
  3718 ;;  error           4    4[BANK1 ] unsigned long 
  3719 ;;  dutyPWM         4    8[BANK1 ] unsigned long 
  3720 ;;  ctrl            4   12[BANK1 ] unsigned long 
  3721 ;;  Kp              4   16[BANK1 ] unsigned long 
  3722 ;;  Ki              4   20[BANK1 ] unsigned long 
  3723 ;;  Kd              4   24[BANK1 ] unsigned long 
  3724 ;;  Kp2             4   28[BANK1 ] unsigned long 
  3725 ;;  Ki2             4   32[BANK1 ] unsigned long 
  3726 ;;  Kd2             4   36[BANK1 ] unsigned long 
  3727 ;;  controlOn       1   40[BANK1 ] unsigned char 
  3728 ;;  dirStep         4   41[BANK1 ] unsigned long 
  3729 ;;  potenciaStep    4   45[BANK1 ] unsigned long 
  3730 ;;  dutyPWMmin      4   49[BANK1 ] unsigned long 
  3731 ;;  dutyPWMlimit    4   53[BANK1 ] unsigned long 
  3732 ;;  dutyPWMlimit    4   57[BANK1 ] unsigned long 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  buffer         10   50[BANK0 ] unsigned char [10]
  3735 ;; Return value:  Size  Location     Type
  3736 ;;		None               void
  3737 ;; Registers used:
  3738 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3744 ;;      Params:         0       0      61       0       0       0       0       0       0
  3745 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3746 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3747 ;;      Totals:         0      11      61       0       0       0       0       0       0
  3748 ;;Total ram usage:       72 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    6
  3751 ;; This function calls:
  3752 ;;		_sendStr
  3753 ;;		_utoa
  3754 ;;		_ltoa
  3755 ;;		_itoa
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text12
  3762  000870                     __ptext12:
  3763                           	opt stack 0
  3764  000870                     _enviarEstadoConsola:
  3765                           	opt stack 24
  3766                           
  3767                           ;MyUSART.c: 51: uint8_t buffer[10];
  3768                           ;MyUSART.c: 52: if (tik == lastTIK){return;}
  3769                           
  3770                           ;incstack = 0
  3771                           ;incstack = 0
  3772  000870  0100               	movlb	0	; () banked
  3773  000872  0100               	movlb	0	; () banked
  3774  000874  51CF               	movf	(_lastTIK+3)& (0+255),w,b	;volatile
  3775  000876  0101               	movlb	1	; () banked
  3776  000878  0101               	movlb	1	; () banked
  3777  00087A  1903               	xorwf	(enviarEstadoConsola@tik+3)& (0+255),w,b
  3778  00087C  E114               	bnz	u2245
  3779  00087E  0100               	movlb	0	; () banked
  3780  000880  0100               	movlb	0	; () banked
  3781  000882  51CE               	movf	(_lastTIK+2)& (0+255),w,b	;volatile
  3782  000884  0101               	movlb	1	; () banked
  3783  000886  0101               	movlb	1	; () banked
  3784  000888  1902               	xorwf	(enviarEstadoConsola@tik+2)& (0+255),w,b
  3785  00088A  E10D               	bnz	u2245
  3786  00088C  0100               	movlb	0	; () banked
  3787  00088E  0100               	movlb	0	; () banked
  3788  000890  51CD               	movf	(_lastTIK+1)& (0+255),w,b	;volatile
  3789  000892  0101               	movlb	1	; () banked
  3790  000894  0101               	movlb	1	; () banked
  3791  000896  1901               	xorwf	(enviarEstadoConsola@tik+1)& (0+255),w,b
  3792  000898  E106               	bnz	u2245
  3793  00089A  0100               	movlb	0	; () banked
  3794  00089C  0100               	movlb	0	; () banked
  3795  00089E  51CC               	movf	_lastTIK& (0+255),w,b	;volatile
  3796  0008A0  0101               	movlb	1	; () banked
  3797  0008A2  0101               	movlb	1	; () banked
  3798  0008A4  1900               	xorwf	enviarEstadoConsola@tik& (0+255),w,b
  3799  0008A6                     u2245:
  3800  0008A6  B4D8               	btfsc	status,2,c
  3801  0008A8  D3C5               	goto	l93
  3802                           
  3803                           ; BSR set to: 1
  3804                           ;MyUSART.c: 53: lastTIK = tik;
  3805                           
  3806                           ; BSR set to: 1
  3807  0008AA  C100  F0CC         	movff	enviarEstadoConsola@tik,_lastTIK	;volatile
  3808  0008AE  C101  F0CD         	movff	enviarEstadoConsola@tik+1,_lastTIK+1	;volatile
  3809  0008B2  C102  F0CE         	movff	enviarEstadoConsola@tik+2,_lastTIK+2	;volatile
  3810  0008B6  C103  F0CF         	movff	enviarEstadoConsola@tik+3,_lastTIK+3	;volatile
  3811                           
  3812                           ; BSR set to: 1
  3813                           ;MyUSART.c: 54: sendStr("{");
  3814  0008BA  0E08               	movlw	high STR_1
  3815  0008BC  0100               	movlb	0	; () banked
  3816  0008BE  0100               	movlb	0	; () banked
  3817  0008C0  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3818  0008C2  0E6B               	movlw	low STR_1
  3819  0008C4  0100               	movlb	0	; () banked
  3820  0008C6  6F60               	movwf	?_sendStr& (0+255),b
  3821  0008C8  EC32  F015         	call	_sendStr	;wreg free
  3822                           
  3823                           ;MyUSART.c: 56: sendStr("\"t\":");
  3824  0008CC  0E08               	movlw	high STR_2
  3825  0008CE  0100               	movlb	0	; () banked
  3826  0008D0  0100               	movlb	0	; () banked
  3827  0008D2  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3828  0008D4  0E61               	movlw	low STR_2
  3829  0008D6  0100               	movlb	0	; () banked
  3830  0008D8  6F60               	movwf	?_sendStr& (0+255),b
  3831  0008DA  EC32  F015         	call	_sendStr	;wreg free
  3832                           
  3833                           ;MyUSART.c: 57: utoa(buffer, tik,10);
  3834  0008DE  0100               	movlb	0	; () banked
  3835  0008E0  0E00               	movlw	high enviarEstadoConsola@buffer
  3836  0008E2  0100               	movlb	0	; () banked
  3837  0008E4  0100               	movlb	0	; () banked
  3838  0008E6  6F69               	movwf	(?_utoa+1)& (0+255),b
  3839  0008E8  0100               	movlb	0	; () banked
  3840  0008EA  0E92               	movlw	low enviarEstadoConsola@buffer
  3841  0008EC  0100               	movlb	0	; () banked
  3842  0008EE  6F68               	movwf	?_utoa& (0+255),b
  3843  0008F0  C100  F06A         	movff	enviarEstadoConsola@tik,?_utoa+2
  3844  0008F4  C101  F06B         	movff	enviarEstadoConsola@tik+1,?_utoa+3
  3845  0008F8  0E00               	movlw	0
  3846  0008FA  0100               	movlb	0	; () banked
  3847  0008FC  0100               	movlb	0	; () banked
  3848  0008FE  6F6D               	movwf	(?_utoa+5)& (0+255),b
  3849  000900  0E0A               	movlw	10
  3850  000902  0100               	movlb	0	; () banked
  3851  000904  6F6C               	movwf	(?_utoa+4)& (0+255),b
  3852  000906  ECF6  F011         	call	_utoa	;wreg free
  3853                           
  3854                           ;MyUSART.c: 58: sendStr(buffer);
  3855  00090A  0100               	movlb	0	; () banked
  3856  00090C  0E00               	movlw	high enviarEstadoConsola@buffer
  3857  00090E  0100               	movlb	0	; () banked
  3858  000910  0100               	movlb	0	; () banked
  3859  000912  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3860  000914  0100               	movlb	0	; () banked
  3861  000916  0E92               	movlw	low enviarEstadoConsola@buffer
  3862  000918  0100               	movlb	0	; () banked
  3863  00091A  6F60               	movwf	?_sendStr& (0+255),b
  3864  00091C  EC32  F015         	call	_sendStr	;wreg free
  3865                           
  3866                           ;MyUSART.c: 60: sendStr(",");
  3867  000920  0E08               	movlw	high STR_3
  3868  000922  0100               	movlb	0	; () banked
  3869  000924  0100               	movlb	0	; () banked
  3870  000926  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3871  000928  0E69               	movlw	low STR_3
  3872  00092A  0100               	movlb	0	; () banked
  3873  00092C  6F60               	movwf	?_sendStr& (0+255),b
  3874  00092E  EC32  F015         	call	_sendStr	;wreg free
  3875                           
  3876                           ;MyUSART.c: 61: sendStr("\"lt\":");
  3877  000932  0E08               	movlw	high STR_4
  3878  000934  0100               	movlb	0	; () banked
  3879  000936  0100               	movlb	0	; () banked
  3880  000938  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3881  00093A  0E4C               	movlw	low STR_4
  3882  00093C  0100               	movlb	0	; () banked
  3883  00093E  6F60               	movwf	?_sendStr& (0+255),b
  3884  000940  EC32  F015         	call	_sendStr	;wreg free
  3885                           
  3886                           ;MyUSART.c: 62: utoa(buffer, lastTIK,10);
  3887  000944  0100               	movlb	0	; () banked
  3888  000946  0E00               	movlw	high enviarEstadoConsola@buffer
  3889  000948  0100               	movlb	0	; () banked
  3890  00094A  0100               	movlb	0	; () banked
  3891  00094C  6F69               	movwf	(?_utoa+1)& (0+255),b
  3892  00094E  0100               	movlb	0	; () banked
  3893  000950  0E92               	movlw	low enviarEstadoConsola@buffer
  3894  000952  0100               	movlb	0	; () banked
  3895  000954  6F68               	movwf	?_utoa& (0+255),b
  3896  000956  C0CC  F06A         	movff	_lastTIK,?_utoa+2	;volatile
  3897  00095A  C0CD  F06B         	movff	_lastTIK+1,?_utoa+3	;volatile
  3898  00095E  0E00               	movlw	0
  3899  000960  0100               	movlb	0	; () banked
  3900  000962  0100               	movlb	0	; () banked
  3901  000964  6F6D               	movwf	(?_utoa+5)& (0+255),b
  3902  000966  0E0A               	movlw	10
  3903  000968  0100               	movlb	0	; () banked
  3904  00096A  6F6C               	movwf	(?_utoa+4)& (0+255),b
  3905  00096C  ECF6  F011         	call	_utoa	;wreg free
  3906                           
  3907                           ;MyUSART.c: 63: sendStr(buffer);
  3908  000970  0100               	movlb	0	; () banked
  3909  000972  0E00               	movlw	high enviarEstadoConsola@buffer
  3910  000974  0100               	movlb	0	; () banked
  3911  000976  0100               	movlb	0	; () banked
  3912  000978  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3913  00097A  0100               	movlb	0	; () banked
  3914  00097C  0E92               	movlw	low enviarEstadoConsola@buffer
  3915  00097E  0100               	movlb	0	; () banked
  3916  000980  6F60               	movwf	?_sendStr& (0+255),b
  3917  000982  EC32  F015         	call	_sendStr	;wreg free
  3918                           
  3919                           ;MyUSART.c: 65: sendStr(",");
  3920  000986  0E08               	movlw	high STR_3
  3921  000988  0100               	movlb	0	; () banked
  3922  00098A  0100               	movlb	0	; () banked
  3923  00098C  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3924  00098E  0E69               	movlw	low STR_3
  3925  000990  0100               	movlb	0	; () banked
  3926  000992  6F60               	movwf	?_sendStr& (0+255),b
  3927  000994  EC32  F015         	call	_sendStr	;wreg free
  3928                           
  3929                           ;MyUSART.c: 67: sendStr("\"e\":");
  3930  000998  0E08               	movlw	high STR_6
  3931  00099A  0100               	movlb	0	; () banked
  3932  00099C  0100               	movlb	0	; () banked
  3933  00099E  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3934  0009A0  0E57               	movlw	low STR_6
  3935  0009A2  0100               	movlb	0	; () banked
  3936  0009A4  6F60               	movwf	?_sendStr& (0+255),b
  3937  0009A6  EC32  F015         	call	_sendStr	;wreg free
  3938                           
  3939                           ;MyUSART.c: 68: ltoa(buffer, error, 10);
  3940  0009AA  0100               	movlb	0	; () banked
  3941  0009AC  0E00               	movlw	high enviarEstadoConsola@buffer
  3942  0009AE  0100               	movlb	0	; () banked
  3943  0009B0  0100               	movlb	0	; () banked
  3944  0009B2  6F88               	movwf	(?_ltoa+1)& (0+255),b
  3945  0009B4  0100               	movlb	0	; () banked
  3946  0009B6  0E92               	movlw	low enviarEstadoConsola@buffer
  3947  0009B8  0100               	movlb	0	; () banked
  3948  0009BA  6F87               	movwf	?_ltoa& (0+255),b
  3949  0009BC  C104  F089         	movff	enviarEstadoConsola@error,?_ltoa+2
  3950  0009C0  C105  F08A         	movff	enviarEstadoConsola@error+1,?_ltoa+3
  3951  0009C4  C106  F08B         	movff	enviarEstadoConsola@error+2,?_ltoa+4
  3952  0009C8  C107  F08C         	movff	enviarEstadoConsola@error+3,?_ltoa+5
  3953  0009CC  0E00               	movlw	0
  3954  0009CE  0100               	movlb	0	; () banked
  3955  0009D0  0100               	movlb	0	; () banked
  3956  0009D2  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  3957  0009D4  0E0A               	movlw	10
  3958  0009D6  0100               	movlb	0	; () banked
  3959  0009D8  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  3960  0009DA  ECCC  F014         	call	_ltoa	;wreg free
  3961                           
  3962                           ;MyUSART.c: 69: sendStr(buffer);
  3963  0009DE  0100               	movlb	0	; () banked
  3964  0009E0  0E00               	movlw	high enviarEstadoConsola@buffer
  3965  0009E2  0100               	movlb	0	; () banked
  3966  0009E4  0100               	movlb	0	; () banked
  3967  0009E6  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3968  0009E8  0100               	movlb	0	; () banked
  3969  0009EA  0E92               	movlw	low enviarEstadoConsola@buffer
  3970  0009EC  0100               	movlb	0	; () banked
  3971  0009EE  6F60               	movwf	?_sendStr& (0+255),b
  3972  0009F0  EC32  F015         	call	_sendStr	;wreg free
  3973                           
  3974                           ;MyUSART.c: 71: sendStr(",");
  3975  0009F4  0E08               	movlw	high STR_3
  3976  0009F6  0100               	movlb	0	; () banked
  3977  0009F8  0100               	movlb	0	; () banked
  3978  0009FA  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3979  0009FC  0E69               	movlw	low STR_3
  3980  0009FE  0100               	movlb	0	; () banked
  3981  000A00  6F60               	movwf	?_sendStr& (0+255),b
  3982  000A02  EC32  F015         	call	_sendStr	;wreg free
  3983                           
  3984                           ;MyUSART.c: 73: sendStr("\"c\":");
  3985  000A06  0E08               	movlw	high STR_8
  3986  000A08  0100               	movlb	0	; () banked
  3987  000A0A  0100               	movlb	0	; () banked
  3988  000A0C  6F61               	movwf	(?_sendStr+1)& (0+255),b
  3989  000A0E  0E52               	movlw	low STR_8
  3990  000A10  0100               	movlb	0	; () banked
  3991  000A12  6F60               	movwf	?_sendStr& (0+255),b
  3992  000A14  EC32  F015         	call	_sendStr	;wreg free
  3993                           
  3994                           ;MyUSART.c: 74: ltoa(buffer, ctrl, 10);
  3995  000A18  0100               	movlb	0	; () banked
  3996  000A1A  0E00               	movlw	high enviarEstadoConsola@buffer
  3997  000A1C  0100               	movlb	0	; () banked
  3998  000A1E  0100               	movlb	0	; () banked
  3999  000A20  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4000  000A22  0100               	movlb	0	; () banked
  4001  000A24  0E92               	movlw	low enviarEstadoConsola@buffer
  4002  000A26  0100               	movlb	0	; () banked
  4003  000A28  6F87               	movwf	?_ltoa& (0+255),b
  4004  000A2A  C10C  F089         	movff	enviarEstadoConsola@ctrl,?_ltoa+2
  4005  000A2E  C10D  F08A         	movff	enviarEstadoConsola@ctrl+1,?_ltoa+3
  4006  000A32  C10E  F08B         	movff	enviarEstadoConsola@ctrl+2,?_ltoa+4
  4007  000A36  C10F  F08C         	movff	enviarEstadoConsola@ctrl+3,?_ltoa+5
  4008  000A3A  0E00               	movlw	0
  4009  000A3C  0100               	movlb	0	; () banked
  4010  000A3E  0100               	movlb	0	; () banked
  4011  000A40  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4012  000A42  0E0A               	movlw	10
  4013  000A44  0100               	movlb	0	; () banked
  4014  000A46  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4015  000A48  ECCC  F014         	call	_ltoa	;wreg free
  4016                           
  4017                           ;MyUSART.c: 75: sendStr(buffer);
  4018  000A4C  0100               	movlb	0	; () banked
  4019  000A4E  0E00               	movlw	high enviarEstadoConsola@buffer
  4020  000A50  0100               	movlb	0	; () banked
  4021  000A52  0100               	movlb	0	; () banked
  4022  000A54  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4023  000A56  0100               	movlb	0	; () banked
  4024  000A58  0E92               	movlw	low enviarEstadoConsola@buffer
  4025  000A5A  0100               	movlb	0	; () banked
  4026  000A5C  6F60               	movwf	?_sendStr& (0+255),b
  4027  000A5E  EC32  F015         	call	_sendStr	;wreg free
  4028                           
  4029                           ;MyUSART.c: 83: if (retornoParametros == 56){
  4030  000A62  0100               	movlb	0	; () banked
  4031  000A64  0100               	movlb	0	; () banked
  4032  000A66  51DB               	movf	_retornoParametros& (0+255),w,b
  4033  000A68  0A38               	xorlw	56
  4034  000A6A  A4D8               	btfss	status,2,c
  4035  000A6C  D2D1               	goto	l3496
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;MyUSART.c: 85: sendStr(",");
  4039  000A6E  0E08               	movlw	high STR_3
  4040  000A70  0100               	movlb	0	; () banked
  4041  000A72  0100               	movlb	0	; () banked
  4042  000A74  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4043  000A76  0E69               	movlw	low STR_3
  4044  000A78  0100               	movlb	0	; () banked
  4045  000A7A  6F60               	movwf	?_sendStr& (0+255),b
  4046  000A7C  EC32  F015         	call	_sendStr	;wreg free
  4047                           
  4048                           ;MyUSART.c: 87: sendStr("\"r\":");
  4049  000A80  0E08               	movlw	high STR_10
  4050  000A82  0100               	movlb	0	; () banked
  4051  000A84  0100               	movlb	0	; () banked
  4052  000A86  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4053  000A88  0E5C               	movlw	low STR_10
  4054  000A8A  0100               	movlb	0	; () banked
  4055  000A8C  6F60               	movwf	?_sendStr& (0+255),b
  4056  000A8E  EC32  F015         	call	_sendStr	;wreg free
  4057                           
  4058                           ;MyUSART.c: 88: itoa(buffer, retornoParametros, 10);
  4059  000A92  0100               	movlb	0	; () banked
  4060  000A94  0E00               	movlw	high enviarEstadoConsola@buffer
  4061  000A96  0100               	movlb	0	; () banked
  4062  000A98  0100               	movlb	0	; () banked
  4063  000A9A  6F72               	movwf	(?_itoa+1)& (0+255),b
  4064  000A9C  0100               	movlb	0	; () banked
  4065  000A9E  0E92               	movlw	low enviarEstadoConsola@buffer
  4066  000AA0  0100               	movlb	0	; () banked
  4067  000AA2  6F71               	movwf	?_itoa& (0+255),b
  4068  000AA4  0100               	movlb	0	; () banked
  4069  000AA6  0100               	movlb	0	; () banked
  4070  000AA8  C0DB  F073         	movff	_retornoParametros,?_itoa+2
  4071  000AAC  0100               	movlb	0	; () banked
  4072  000AAE  0100               	movlb	0	; () banked
  4073  000AB0  6B74               	clrf	(?_itoa+3)& (0+255),b
  4074  000AB2  0E00               	movlw	0
  4075  000AB4  0100               	movlb	0	; () banked
  4076  000AB6  0100               	movlb	0	; () banked
  4077  000AB8  6F76               	movwf	(?_itoa+5)& (0+255),b
  4078  000ABA  0E0A               	movlw	10
  4079  000ABC  0100               	movlb	0	; () banked
  4080  000ABE  6F75               	movwf	(?_itoa+4)& (0+255),b
  4081  000AC0  ECBB  F015         	call	_itoa	;wreg free
  4082                           
  4083                           ;MyUSART.c: 89: sendStr(buffer);
  4084  000AC4  0100               	movlb	0	; () banked
  4085  000AC6  0E00               	movlw	high enviarEstadoConsola@buffer
  4086  000AC8  0100               	movlb	0	; () banked
  4087  000ACA  0100               	movlb	0	; () banked
  4088  000ACC  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4089  000ACE  0100               	movlb	0	; () banked
  4090  000AD0  0E92               	movlw	low enviarEstadoConsola@buffer
  4091  000AD2  0100               	movlb	0	; () banked
  4092  000AD4  6F60               	movwf	?_sendStr& (0+255),b
  4093  000AD6  EC32  F015         	call	_sendStr	;wreg free
  4094                           
  4095                           ;MyUSART.c: 90: sendStr(",");
  4096  000ADA  0E08               	movlw	high STR_3
  4097  000ADC  0100               	movlb	0	; () banked
  4098  000ADE  0100               	movlb	0	; () banked
  4099  000AE0  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4100  000AE2  0E69               	movlw	low STR_3
  4101  000AE4  0100               	movlb	0	; () banked
  4102  000AE6  6F60               	movwf	?_sendStr& (0+255),b
  4103  000AE8  EC32  F015         	call	_sendStr	;wreg free
  4104                           
  4105                           ;MyUSART.c: 92: retornoParametros=0;
  4106  000AEC  0100               	movlb	0	; () banked
  4107  000AEE  6F91               	movwf	??_enviarEstadoConsola& (0+255),b
  4108  000AF0  0E00               	movlw	0
  4109  000AF2  0100               	movlb	0	; () banked
  4110  000AF4  0100               	movlb	0	; () banked
  4111  000AF6  6FDB               	movwf	_retornoParametros& (0+255),b
  4112  000AF8  0100               	movlb	0	; () banked
  4113  000AFA  5191               	movf	??_enviarEstadoConsola& (0+255),w,b
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;MyUSART.c: 95: sendStr("\"kp\":");
  4117  000AFC  0E08               	movlw	high STR_12
  4118  000AFE  0100               	movlb	0	; () banked
  4119  000B00  0100               	movlb	0	; () banked
  4120  000B02  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4121  000B04  0E34               	movlw	low STR_12
  4122  000B06  0100               	movlb	0	; () banked
  4123  000B08  6F60               	movwf	?_sendStr& (0+255),b
  4124  000B0A  EC32  F015         	call	_sendStr	;wreg free
  4125                           
  4126                           ;MyUSART.c: 96: ltoa(buffer, Kp, 10);
  4127  000B0E  0100               	movlb	0	; () banked
  4128  000B10  0E00               	movlw	high enviarEstadoConsola@buffer
  4129  000B12  0100               	movlb	0	; () banked
  4130  000B14  0100               	movlb	0	; () banked
  4131  000B16  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4132  000B18  0100               	movlb	0	; () banked
  4133  000B1A  0E92               	movlw	low enviarEstadoConsola@buffer
  4134  000B1C  0100               	movlb	0	; () banked
  4135  000B1E  6F87               	movwf	?_ltoa& (0+255),b
  4136  000B20  C110  F089         	movff	enviarEstadoConsola@Kp,?_ltoa+2
  4137  000B24  C111  F08A         	movff	enviarEstadoConsola@Kp+1,?_ltoa+3
  4138  000B28  C112  F08B         	movff	enviarEstadoConsola@Kp+2,?_ltoa+4
  4139  000B2C  C113  F08C         	movff	enviarEstadoConsola@Kp+3,?_ltoa+5
  4140  000B30  0E00               	movlw	0
  4141  000B32  0100               	movlb	0	; () banked
  4142  000B34  0100               	movlb	0	; () banked
  4143  000B36  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4144  000B38  0E0A               	movlw	10
  4145  000B3A  0100               	movlb	0	; () banked
  4146  000B3C  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4147  000B3E  ECCC  F014         	call	_ltoa	;wreg free
  4148                           
  4149                           ;MyUSART.c: 97: sendStr(buffer);
  4150  000B42  0100               	movlb	0	; () banked
  4151  000B44  0E00               	movlw	high enviarEstadoConsola@buffer
  4152  000B46  0100               	movlb	0	; () banked
  4153  000B48  0100               	movlb	0	; () banked
  4154  000B4A  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4155  000B4C  0100               	movlb	0	; () banked
  4156  000B4E  0E92               	movlw	low enviarEstadoConsola@buffer
  4157  000B50  0100               	movlb	0	; () banked
  4158  000B52  6F60               	movwf	?_sendStr& (0+255),b
  4159  000B54  EC32  F015         	call	_sendStr	;wreg free
  4160                           
  4161                           ;MyUSART.c: 99: sendStr(",");
  4162  000B58  0E08               	movlw	high STR_3
  4163  000B5A  0100               	movlb	0	; () banked
  4164  000B5C  0100               	movlb	0	; () banked
  4165  000B5E  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4166  000B60  0E69               	movlw	low STR_3
  4167  000B62  0100               	movlb	0	; () banked
  4168  000B64  6F60               	movwf	?_sendStr& (0+255),b
  4169  000B66  EC32  F015         	call	_sendStr	;wreg free
  4170                           
  4171                           ;MyUSART.c: 101: sendStr("\"ki\":");
  4172  000B6A  0E08               	movlw	high STR_14
  4173  000B6C  0100               	movlb	0	; () banked
  4174  000B6E  0100               	movlb	0	; () banked
  4175  000B70  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4176  000B72  0E22               	movlw	low STR_14
  4177  000B74  0100               	movlb	0	; () banked
  4178  000B76  6F60               	movwf	?_sendStr& (0+255),b
  4179  000B78  EC32  F015         	call	_sendStr	;wreg free
  4180                           
  4181                           ;MyUSART.c: 102: ltoa(buffer, Ki, 10);
  4182  000B7C  0100               	movlb	0	; () banked
  4183  000B7E  0E00               	movlw	high enviarEstadoConsola@buffer
  4184  000B80  0100               	movlb	0	; () banked
  4185  000B82  0100               	movlb	0	; () banked
  4186  000B84  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4187  000B86  0100               	movlb	0	; () banked
  4188  000B88  0E92               	movlw	low enviarEstadoConsola@buffer
  4189  000B8A  0100               	movlb	0	; () banked
  4190  000B8C  6F87               	movwf	?_ltoa& (0+255),b
  4191  000B8E  C114  F089         	movff	enviarEstadoConsola@Ki,?_ltoa+2
  4192  000B92  C115  F08A         	movff	enviarEstadoConsola@Ki+1,?_ltoa+3
  4193  000B96  C116  F08B         	movff	enviarEstadoConsola@Ki+2,?_ltoa+4
  4194  000B9A  C117  F08C         	movff	enviarEstadoConsola@Ki+3,?_ltoa+5
  4195  000B9E  0E00               	movlw	0
  4196  000BA0  0100               	movlb	0	; () banked
  4197  000BA2  0100               	movlb	0	; () banked
  4198  000BA4  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4199  000BA6  0E0A               	movlw	10
  4200  000BA8  0100               	movlb	0	; () banked
  4201  000BAA  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4202  000BAC  ECCC  F014         	call	_ltoa	;wreg free
  4203                           
  4204                           ;MyUSART.c: 103: sendStr(buffer);
  4205  000BB0  0100               	movlb	0	; () banked
  4206  000BB2  0E00               	movlw	high enviarEstadoConsola@buffer
  4207  000BB4  0100               	movlb	0	; () banked
  4208  000BB6  0100               	movlb	0	; () banked
  4209  000BB8  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4210  000BBA  0100               	movlb	0	; () banked
  4211  000BBC  0E92               	movlw	low enviarEstadoConsola@buffer
  4212  000BBE  0100               	movlb	0	; () banked
  4213  000BC0  6F60               	movwf	?_sendStr& (0+255),b
  4214  000BC2  EC32  F015         	call	_sendStr	;wreg free
  4215                           
  4216                           ;MyUSART.c: 105: sendStr(",");
  4217  000BC6  0E08               	movlw	high STR_3
  4218  000BC8  0100               	movlb	0	; () banked
  4219  000BCA  0100               	movlb	0	; () banked
  4220  000BCC  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4221  000BCE  0E69               	movlw	low STR_3
  4222  000BD0  0100               	movlb	0	; () banked
  4223  000BD2  6F60               	movwf	?_sendStr& (0+255),b
  4224  000BD4  EC32  F015         	call	_sendStr	;wreg free
  4225                           
  4226                           ;MyUSART.c: 107: sendStr("\"kd\":");
  4227  000BD8  0E08               	movlw	high STR_16
  4228  000BDA  0100               	movlb	0	; () banked
  4229  000BDC  0100               	movlb	0	; () banked
  4230  000BDE  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4231  000BE0  0E1C               	movlw	low STR_16
  4232  000BE2  0100               	movlb	0	; () banked
  4233  000BE4  6F60               	movwf	?_sendStr& (0+255),b
  4234  000BE6  EC32  F015         	call	_sendStr	;wreg free
  4235                           
  4236                           ;MyUSART.c: 108: ltoa(buffer, Kd, 10);
  4237  000BEA  0100               	movlb	0	; () banked
  4238  000BEC  0E00               	movlw	high enviarEstadoConsola@buffer
  4239  000BEE  0100               	movlb	0	; () banked
  4240  000BF0  0100               	movlb	0	; () banked
  4241  000BF2  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4242  000BF4  0100               	movlb	0	; () banked
  4243  000BF6  0E92               	movlw	low enviarEstadoConsola@buffer
  4244  000BF8  0100               	movlb	0	; () banked
  4245  000BFA  6F87               	movwf	?_ltoa& (0+255),b
  4246  000BFC  C118  F089         	movff	enviarEstadoConsola@Kd,?_ltoa+2
  4247  000C00  C119  F08A         	movff	enviarEstadoConsola@Kd+1,?_ltoa+3
  4248  000C04  C11A  F08B         	movff	enviarEstadoConsola@Kd+2,?_ltoa+4
  4249  000C08  C11B  F08C         	movff	enviarEstadoConsola@Kd+3,?_ltoa+5
  4250  000C0C  0E00               	movlw	0
  4251  000C0E  0100               	movlb	0	; () banked
  4252  000C10  0100               	movlb	0	; () banked
  4253  000C12  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4254  000C14  0E0A               	movlw	10
  4255  000C16  0100               	movlb	0	; () banked
  4256  000C18  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4257  000C1A  ECCC  F014         	call	_ltoa	;wreg free
  4258                           
  4259                           ;MyUSART.c: 109: sendStr(buffer);
  4260  000C1E  0100               	movlb	0	; () banked
  4261  000C20  0E00               	movlw	high enviarEstadoConsola@buffer
  4262  000C22  0100               	movlb	0	; () banked
  4263  000C24  0100               	movlb	0	; () banked
  4264  000C26  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4265  000C28  0100               	movlb	0	; () banked
  4266  000C2A  0E92               	movlw	low enviarEstadoConsola@buffer
  4267  000C2C  0100               	movlb	0	; () banked
  4268  000C2E  6F60               	movwf	?_sendStr& (0+255),b
  4269  000C30  EC32  F015         	call	_sendStr	;wreg free
  4270                           
  4271                           ;MyUSART.c: 111: sendStr(",");
  4272  000C34  0E08               	movlw	high STR_3
  4273  000C36  0100               	movlb	0	; () banked
  4274  000C38  0100               	movlb	0	; () banked
  4275  000C3A  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4276  000C3C  0E69               	movlw	low STR_3
  4277  000C3E  0100               	movlb	0	; () banked
  4278  000C40  6F60               	movwf	?_sendStr& (0+255),b
  4279  000C42  EC32  F015         	call	_sendStr	;wreg free
  4280                           
  4281                           ;MyUSART.c: 113: sendStr("\"kp2\":");
  4282  000C46  0E08               	movlw	high STR_18
  4283  000C48  0100               	movlb	0	; () banked
  4284  000C4A  0100               	movlb	0	; () banked
  4285  000C4C  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4286  000C4E  0E0E               	movlw	low STR_18
  4287  000C50  0100               	movlb	0	; () banked
  4288  000C52  6F60               	movwf	?_sendStr& (0+255),b
  4289  000C54  EC32  F015         	call	_sendStr	;wreg free
  4290                           
  4291                           ;MyUSART.c: 114: ltoa(buffer, Kp2, 10);
  4292  000C58  0100               	movlb	0	; () banked
  4293  000C5A  0E00               	movlw	high enviarEstadoConsola@buffer
  4294  000C5C  0100               	movlb	0	; () banked
  4295  000C5E  0100               	movlb	0	; () banked
  4296  000C60  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4297  000C62  0100               	movlb	0	; () banked
  4298  000C64  0E92               	movlw	low enviarEstadoConsola@buffer
  4299  000C66  0100               	movlb	0	; () banked
  4300  000C68  6F87               	movwf	?_ltoa& (0+255),b
  4301  000C6A  C11C  F089         	movff	enviarEstadoConsola@Kp2,?_ltoa+2
  4302  000C6E  C11D  F08A         	movff	enviarEstadoConsola@Kp2+1,?_ltoa+3
  4303  000C72  C11E  F08B         	movff	enviarEstadoConsola@Kp2+2,?_ltoa+4
  4304  000C76  C11F  F08C         	movff	enviarEstadoConsola@Kp2+3,?_ltoa+5
  4305  000C7A  0E00               	movlw	0
  4306  000C7C  0100               	movlb	0	; () banked
  4307  000C7E  0100               	movlb	0	; () banked
  4308  000C80  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4309  000C82  0E0A               	movlw	10
  4310  000C84  0100               	movlb	0	; () banked
  4311  000C86  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4312  000C88  ECCC  F014         	call	_ltoa	;wreg free
  4313                           
  4314                           ;MyUSART.c: 115: sendStr(buffer);
  4315  000C8C  0100               	movlb	0	; () banked
  4316  000C8E  0E00               	movlw	high enviarEstadoConsola@buffer
  4317  000C90  0100               	movlb	0	; () banked
  4318  000C92  0100               	movlb	0	; () banked
  4319  000C94  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4320  000C96  0100               	movlb	0	; () banked
  4321  000C98  0E92               	movlw	low enviarEstadoConsola@buffer
  4322  000C9A  0100               	movlb	0	; () banked
  4323  000C9C  6F60               	movwf	?_sendStr& (0+255),b
  4324  000C9E  EC32  F015         	call	_sendStr	;wreg free
  4325                           
  4326                           ;MyUSART.c: 117: sendStr(",");
  4327  000CA2  0E08               	movlw	high STR_3
  4328  000CA4  0100               	movlb	0	; () banked
  4329  000CA6  0100               	movlb	0	; () banked
  4330  000CA8  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4331  000CAA  0E69               	movlw	low STR_3
  4332  000CAC  0100               	movlb	0	; () banked
  4333  000CAE  6F60               	movwf	?_sendStr& (0+255),b
  4334  000CB0  EC32  F015         	call	_sendStr	;wreg free
  4335                           
  4336                           ;MyUSART.c: 119: sendStr("\"ki2\":");
  4337  000CB4  0E08               	movlw	high STR_20
  4338  000CB6  0100               	movlb	0	; () banked
  4339  000CB8  0100               	movlb	0	; () banked
  4340  000CBA  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4341  000CBC  0E07               	movlw	low STR_20
  4342  000CBE  0100               	movlb	0	; () banked
  4343  000CC0  6F60               	movwf	?_sendStr& (0+255),b
  4344  000CC2  EC32  F015         	call	_sendStr	;wreg free
  4345                           
  4346                           ;MyUSART.c: 120: ltoa(buffer, Ki2, 10);
  4347  000CC6  0100               	movlb	0	; () banked
  4348  000CC8  0E00               	movlw	high enviarEstadoConsola@buffer
  4349  000CCA  0100               	movlb	0	; () banked
  4350  000CCC  0100               	movlb	0	; () banked
  4351  000CCE  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4352  000CD0  0100               	movlb	0	; () banked
  4353  000CD2  0E92               	movlw	low enviarEstadoConsola@buffer
  4354  000CD4  0100               	movlb	0	; () banked
  4355  000CD6  6F87               	movwf	?_ltoa& (0+255),b
  4356  000CD8  C120  F089         	movff	enviarEstadoConsola@Ki2,?_ltoa+2
  4357  000CDC  C121  F08A         	movff	enviarEstadoConsola@Ki2+1,?_ltoa+3
  4358  000CE0  C122  F08B         	movff	enviarEstadoConsola@Ki2+2,?_ltoa+4
  4359  000CE4  C123  F08C         	movff	enviarEstadoConsola@Ki2+3,?_ltoa+5
  4360  000CE8  0E00               	movlw	0
  4361  000CEA  0100               	movlb	0	; () banked
  4362  000CEC  0100               	movlb	0	; () banked
  4363  000CEE  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4364  000CF0  0E0A               	movlw	10
  4365  000CF2  0100               	movlb	0	; () banked
  4366  000CF4  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4367  000CF6  ECCC  F014         	call	_ltoa	;wreg free
  4368                           
  4369                           ;MyUSART.c: 121: sendStr(buffer);
  4370  000CFA  0100               	movlb	0	; () banked
  4371  000CFC  0E00               	movlw	high enviarEstadoConsola@buffer
  4372  000CFE  0100               	movlb	0	; () banked
  4373  000D00  0100               	movlb	0	; () banked
  4374  000D02  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4375  000D04  0100               	movlb	0	; () banked
  4376  000D06  0E92               	movlw	low enviarEstadoConsola@buffer
  4377  000D08  0100               	movlb	0	; () banked
  4378  000D0A  6F60               	movwf	?_sendStr& (0+255),b
  4379  000D0C  EC32  F015         	call	_sendStr	;wreg free
  4380                           
  4381                           ;MyUSART.c: 123: sendStr(",");
  4382  000D10  0E08               	movlw	high STR_3
  4383  000D12  0100               	movlb	0	; () banked
  4384  000D14  0100               	movlb	0	; () banked
  4385  000D16  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4386  000D18  0E69               	movlw	low STR_3
  4387  000D1A  0100               	movlb	0	; () banked
  4388  000D1C  6F60               	movwf	?_sendStr& (0+255),b
  4389  000D1E  EC32  F015         	call	_sendStr	;wreg free
  4390                           
  4391                           ;MyUSART.c: 125: sendStr("\"kd2\":");
  4392  000D22  0E08               	movlw	high STR_22
  4393  000D24  0100               	movlb	0	; () banked
  4394  000D26  0100               	movlb	0	; () banked
  4395  000D28  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4396  000D2A  0E00               	movlw	low STR_22
  4397  000D2C  0100               	movlb	0	; () banked
  4398  000D2E  6F60               	movwf	?_sendStr& (0+255),b
  4399  000D30  EC32  F015         	call	_sendStr	;wreg free
  4400                           
  4401                           ;MyUSART.c: 126: ltoa(buffer, Kd2, 10);
  4402  000D34  0100               	movlb	0	; () banked
  4403  000D36  0E00               	movlw	high enviarEstadoConsola@buffer
  4404  000D38  0100               	movlb	0	; () banked
  4405  000D3A  0100               	movlb	0	; () banked
  4406  000D3C  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4407  000D3E  0100               	movlb	0	; () banked
  4408  000D40  0E92               	movlw	low enviarEstadoConsola@buffer
  4409  000D42  0100               	movlb	0	; () banked
  4410  000D44  6F87               	movwf	?_ltoa& (0+255),b
  4411  000D46  C124  F089         	movff	enviarEstadoConsola@Kd2,?_ltoa+2
  4412  000D4A  C125  F08A         	movff	enviarEstadoConsola@Kd2+1,?_ltoa+3
  4413  000D4E  C126  F08B         	movff	enviarEstadoConsola@Kd2+2,?_ltoa+4
  4414  000D52  C127  F08C         	movff	enviarEstadoConsola@Kd2+3,?_ltoa+5
  4415  000D56  0E00               	movlw	0
  4416  000D58  0100               	movlb	0	; () banked
  4417  000D5A  0100               	movlb	0	; () banked
  4418  000D5C  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4419  000D5E  0E0A               	movlw	10
  4420  000D60  0100               	movlb	0	; () banked
  4421  000D62  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4422  000D64  ECCC  F014         	call	_ltoa	;wreg free
  4423                           
  4424                           ;MyUSART.c: 127: sendStr(buffer);
  4425  000D68  0100               	movlb	0	; () banked
  4426  000D6A  0E00               	movlw	high enviarEstadoConsola@buffer
  4427  000D6C  0100               	movlb	0	; () banked
  4428  000D6E  0100               	movlb	0	; () banked
  4429  000D70  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4430  000D72  0100               	movlb	0	; () banked
  4431  000D74  0E92               	movlw	low enviarEstadoConsola@buffer
  4432  000D76  0100               	movlb	0	; () banked
  4433  000D78  6F60               	movwf	?_sendStr& (0+255),b
  4434  000D7A  EC32  F015         	call	_sendStr	;wreg free
  4435                           
  4436                           ;MyUSART.c: 129: sendStr(",");
  4437  000D7E  0E08               	movlw	high STR_3
  4438  000D80  0100               	movlb	0	; () banked
  4439  000D82  0100               	movlb	0	; () banked
  4440  000D84  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4441  000D86  0E69               	movlw	low STR_3
  4442  000D88  0100               	movlb	0	; () banked
  4443  000D8A  6F60               	movwf	?_sendStr& (0+255),b
  4444  000D8C  EC32  F015         	call	_sendStr	;wreg free
  4445                           
  4446                           ;MyUSART.c: 131: sendStr("\"cOn\":");
  4447  000D90  0E08               	movlw	high STR_24
  4448  000D92  0100               	movlb	0	; () banked
  4449  000D94  0100               	movlb	0	; () banked
  4450  000D96  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4451  000D98  0E15               	movlw	low STR_24
  4452  000D9A  0100               	movlb	0	; () banked
  4453  000D9C  6F60               	movwf	?_sendStr& (0+255),b
  4454  000D9E  EC32  F015         	call	_sendStr	;wreg free
  4455                           
  4456                           ;MyUSART.c: 132: itoa(buffer, controlOn, 10);
  4457  000DA2  0100               	movlb	0	; () banked
  4458  000DA4  0E00               	movlw	high enviarEstadoConsola@buffer
  4459  000DA6  0100               	movlb	0	; () banked
  4460  000DA8  0100               	movlb	0	; () banked
  4461  000DAA  6F72               	movwf	(?_itoa+1)& (0+255),b
  4462  000DAC  0100               	movlb	0	; () banked
  4463  000DAE  0E92               	movlw	low enviarEstadoConsola@buffer
  4464  000DB0  0100               	movlb	0	; () banked
  4465  000DB2  6F71               	movwf	?_itoa& (0+255),b
  4466  000DB4  0101               	movlb	1	; () banked
  4467  000DB6  0100               	movlb	0	; () banked
  4468  000DB8  C128  F073         	movff	enviarEstadoConsola@controlOn,?_itoa+2
  4469  000DBC  0100               	movlb	0	; () banked
  4470  000DBE  0100               	movlb	0	; () banked
  4471  000DC0  6B74               	clrf	(?_itoa+3)& (0+255),b
  4472  000DC2  0E00               	movlw	0
  4473  000DC4  0100               	movlb	0	; () banked
  4474  000DC6  0100               	movlb	0	; () banked
  4475  000DC8  6F76               	movwf	(?_itoa+5)& (0+255),b
  4476  000DCA  0E0A               	movlw	10
  4477  000DCC  0100               	movlb	0	; () banked
  4478  000DCE  6F75               	movwf	(?_itoa+4)& (0+255),b
  4479  000DD0  ECBB  F015         	call	_itoa	;wreg free
  4480                           
  4481                           ;MyUSART.c: 133: sendStr(buffer);
  4482  000DD4  0100               	movlb	0	; () banked
  4483  000DD6  0E00               	movlw	high enviarEstadoConsola@buffer
  4484  000DD8  0100               	movlb	0	; () banked
  4485  000DDA  0100               	movlb	0	; () banked
  4486  000DDC  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4487  000DDE  0100               	movlb	0	; () banked
  4488  000DE0  0E92               	movlw	low enviarEstadoConsola@buffer
  4489  000DE2  0100               	movlb	0	; () banked
  4490  000DE4  6F60               	movwf	?_sendStr& (0+255),b
  4491  000DE6  EC32  F015         	call	_sendStr	;wreg free
  4492                           
  4493                           ;MyUSART.c: 135: sendStr(",");
  4494  000DEA  0E08               	movlw	high STR_3
  4495  000DEC  0100               	movlb	0	; () banked
  4496  000DEE  0100               	movlb	0	; () banked
  4497  000DF0  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4498  000DF2  0E69               	movlw	low STR_3
  4499  000DF4  0100               	movlb	0	; () banked
  4500  000DF6  6F60               	movwf	?_sendStr& (0+255),b
  4501  000DF8  EC32  F015         	call	_sendStr	;wreg free
  4502                           
  4503                           ;MyUSART.c: 137: sendStr("\"ds\":");
  4504  000DFC  0E08               	movlw	high STR_26
  4505  000DFE  0100               	movlb	0	; () banked
  4506  000E00  0100               	movlb	0	; () banked
  4507  000E02  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4508  000E04  0E3A               	movlw	low STR_26
  4509  000E06  0100               	movlb	0	; () banked
  4510  000E08  6F60               	movwf	?_sendStr& (0+255),b
  4511  000E0A  EC32  F015         	call	_sendStr	;wreg free
  4512                           
  4513                           ;MyUSART.c: 138: ltoa(buffer, dirStep, 10);
  4514  000E0E  0100               	movlb	0	; () banked
  4515  000E10  0E00               	movlw	high enviarEstadoConsola@buffer
  4516  000E12  0100               	movlb	0	; () banked
  4517  000E14  0100               	movlb	0	; () banked
  4518  000E16  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4519  000E18  0100               	movlb	0	; () banked
  4520  000E1A  0E92               	movlw	low enviarEstadoConsola@buffer
  4521  000E1C  0100               	movlb	0	; () banked
  4522  000E1E  6F87               	movwf	?_ltoa& (0+255),b
  4523  000E20  C129  F089         	movff	enviarEstadoConsola@dirStep,?_ltoa+2
  4524  000E24  C12A  F08A         	movff	enviarEstadoConsola@dirStep+1,?_ltoa+3
  4525  000E28  C12B  F08B         	movff	enviarEstadoConsola@dirStep+2,?_ltoa+4
  4526  000E2C  C12C  F08C         	movff	enviarEstadoConsola@dirStep+3,?_ltoa+5
  4527  000E30  0E00               	movlw	0
  4528  000E32  0100               	movlb	0	; () banked
  4529  000E34  0100               	movlb	0	; () banked
  4530  000E36  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4531  000E38  0E0A               	movlw	10
  4532  000E3A  0100               	movlb	0	; () banked
  4533  000E3C  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4534  000E3E  ECCC  F014         	call	_ltoa	;wreg free
  4535                           
  4536                           ;MyUSART.c: 139: sendStr(buffer);
  4537  000E42  0100               	movlb	0	; () banked
  4538  000E44  0E00               	movlw	high enviarEstadoConsola@buffer
  4539  000E46  0100               	movlb	0	; () banked
  4540  000E48  0100               	movlb	0	; () banked
  4541  000E4A  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4542  000E4C  0100               	movlb	0	; () banked
  4543  000E4E  0E92               	movlw	low enviarEstadoConsola@buffer
  4544  000E50  0100               	movlb	0	; () banked
  4545  000E52  6F60               	movwf	?_sendStr& (0+255),b
  4546  000E54  EC32  F015         	call	_sendStr	;wreg free
  4547                           
  4548                           ;MyUSART.c: 141: sendStr(",");
  4549  000E58  0E08               	movlw	high STR_3
  4550  000E5A  0100               	movlb	0	; () banked
  4551  000E5C  0100               	movlb	0	; () banked
  4552  000E5E  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4553  000E60  0E69               	movlw	low STR_3
  4554  000E62  0100               	movlb	0	; () banked
  4555  000E64  6F60               	movwf	?_sendStr& (0+255),b
  4556  000E66  EC32  F015         	call	_sendStr	;wreg free
  4557                           
  4558                           ;MyUSART.c: 143: sendStr("\"ps\":");
  4559  000E6A  0E08               	movlw	high STR_28
  4560  000E6C  0100               	movlb	0	; () banked
  4561  000E6E  0100               	movlb	0	; () banked
  4562  000E70  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4563  000E72  0E40               	movlw	low STR_28
  4564  000E74  0100               	movlb	0	; () banked
  4565  000E76  6F60               	movwf	?_sendStr& (0+255),b
  4566  000E78  EC32  F015         	call	_sendStr	;wreg free
  4567                           
  4568                           ;MyUSART.c: 144: ltoa(buffer, potenciaStep, 10);
  4569  000E7C  0100               	movlb	0	; () banked
  4570  000E7E  0E00               	movlw	high enviarEstadoConsola@buffer
  4571  000E80  0100               	movlb	0	; () banked
  4572  000E82  0100               	movlb	0	; () banked
  4573  000E84  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4574  000E86  0100               	movlb	0	; () banked
  4575  000E88  0E92               	movlw	low enviarEstadoConsola@buffer
  4576  000E8A  0100               	movlb	0	; () banked
  4577  000E8C  6F87               	movwf	?_ltoa& (0+255),b
  4578  000E8E  C12D  F089         	movff	enviarEstadoConsola@potenciaStep,?_ltoa+2
  4579  000E92  C12E  F08A         	movff	enviarEstadoConsola@potenciaStep+1,?_ltoa+3
  4580  000E96  C12F  F08B         	movff	enviarEstadoConsola@potenciaStep+2,?_ltoa+4
  4581  000E9A  C130  F08C         	movff	enviarEstadoConsola@potenciaStep+3,?_ltoa+5
  4582  000E9E  0E00               	movlw	0
  4583  000EA0  0100               	movlb	0	; () banked
  4584  000EA2  0100               	movlb	0	; () banked
  4585  000EA4  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4586  000EA6  0E0A               	movlw	10
  4587  000EA8  0100               	movlb	0	; () banked
  4588  000EAA  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4589  000EAC  ECCC  F014         	call	_ltoa	;wreg free
  4590                           
  4591                           ;MyUSART.c: 145: sendStr(buffer);
  4592  000EB0  0100               	movlb	0	; () banked
  4593  000EB2  0E00               	movlw	high enviarEstadoConsola@buffer
  4594  000EB4  0100               	movlb	0	; () banked
  4595  000EB6  0100               	movlb	0	; () banked
  4596  000EB8  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4597  000EBA  0100               	movlb	0	; () banked
  4598  000EBC  0E92               	movlw	low enviarEstadoConsola@buffer
  4599  000EBE  0100               	movlb	0	; () banked
  4600  000EC0  6F60               	movwf	?_sendStr& (0+255),b
  4601  000EC2  EC32  F015         	call	_sendStr	;wreg free
  4602                           
  4603                           ;MyUSART.c: 147: sendStr(",");
  4604  000EC6  0E08               	movlw	high STR_3
  4605  000EC8  0100               	movlb	0	; () banked
  4606  000ECA  0100               	movlb	0	; () banked
  4607  000ECC  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4608  000ECE  0E69               	movlw	low STR_3
  4609  000ED0  0100               	movlb	0	; () banked
  4610  000ED2  6F60               	movwf	?_sendStr& (0+255),b
  4611  000ED4  EC32  F015         	call	_sendStr	;wreg free
  4612                           
  4613                           ;MyUSART.c: 149: sendStr("\"dm\":");
  4614  000ED8  0E08               	movlw	high STR_30
  4615  000EDA  0100               	movlb	0	; () banked
  4616  000EDC  0100               	movlb	0	; () banked
  4617  000EDE  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4618  000EE0  0E2E               	movlw	low STR_30
  4619  000EE2  0100               	movlb	0	; () banked
  4620  000EE4  6F60               	movwf	?_sendStr& (0+255),b
  4621  000EE6  EC32  F015         	call	_sendStr	;wreg free
  4622                           
  4623                           ;MyUSART.c: 150: ltoa(buffer, dutyPWMmin, 10);
  4624  000EEA  0100               	movlb	0	; () banked
  4625  000EEC  0E00               	movlw	high enviarEstadoConsola@buffer
  4626  000EEE  0100               	movlb	0	; () banked
  4627  000EF0  0100               	movlb	0	; () banked
  4628  000EF2  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4629  000EF4  0100               	movlb	0	; () banked
  4630  000EF6  0E92               	movlw	low enviarEstadoConsola@buffer
  4631  000EF8  0100               	movlb	0	; () banked
  4632  000EFA  6F87               	movwf	?_ltoa& (0+255),b
  4633  000EFC  C131  F089         	movff	enviarEstadoConsola@dutyPWMmin,?_ltoa+2
  4634  000F00  C132  F08A         	movff	enviarEstadoConsola@dutyPWMmin+1,?_ltoa+3
  4635  000F04  C133  F08B         	movff	enviarEstadoConsola@dutyPWMmin+2,?_ltoa+4
  4636  000F08  C134  F08C         	movff	enviarEstadoConsola@dutyPWMmin+3,?_ltoa+5
  4637  000F0C  0E00               	movlw	0
  4638  000F0E  0100               	movlb	0	; () banked
  4639  000F10  0100               	movlb	0	; () banked
  4640  000F12  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4641  000F14  0E0A               	movlw	10
  4642  000F16  0100               	movlb	0	; () banked
  4643  000F18  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4644  000F1A  ECCC  F014         	call	_ltoa	;wreg free
  4645                           
  4646                           ;MyUSART.c: 151: sendStr(buffer);
  4647  000F1E  0100               	movlb	0	; () banked
  4648  000F20  0E00               	movlw	high enviarEstadoConsola@buffer
  4649  000F22  0100               	movlb	0	; () banked
  4650  000F24  0100               	movlb	0	; () banked
  4651  000F26  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4652  000F28  0100               	movlb	0	; () banked
  4653  000F2A  0E92               	movlw	low enviarEstadoConsola@buffer
  4654  000F2C  0100               	movlb	0	; () banked
  4655  000F2E  6F60               	movwf	?_sendStr& (0+255),b
  4656  000F30  EC32  F015         	call	_sendStr	;wreg free
  4657                           
  4658                           ;MyUSART.c: 153: sendStr(",");
  4659  000F34  0E08               	movlw	high STR_3
  4660  000F36  0100               	movlb	0	; () banked
  4661  000F38  0100               	movlb	0	; () banked
  4662  000F3A  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4663  000F3C  0E69               	movlw	low STR_3
  4664  000F3E  0100               	movlb	0	; () banked
  4665  000F40  6F60               	movwf	?_sendStr& (0+255),b
  4666  000F42  EC32  F015         	call	_sendStr	;wreg free
  4667                           
  4668                           ;MyUSART.c: 155: sendStr("\"dl\":");
  4669  000F46  0E08               	movlw	high STR_32
  4670  000F48  0100               	movlb	0	; () banked
  4671  000F4A  0100               	movlb	0	; () banked
  4672  000F4C  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4673  000F4E  0E28               	movlw	low STR_32
  4674  000F50  0100               	movlb	0	; () banked
  4675  000F52  6F60               	movwf	?_sendStr& (0+255),b
  4676  000F54  EC32  F015         	call	_sendStr	;wreg free
  4677                           
  4678                           ;MyUSART.c: 156: ltoa(buffer, dutyPWMlimit, 10);
  4679  000F58  0100               	movlb	0	; () banked
  4680  000F5A  0E00               	movlw	high enviarEstadoConsola@buffer
  4681  000F5C  0100               	movlb	0	; () banked
  4682  000F5E  0100               	movlb	0	; () banked
  4683  000F60  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4684  000F62  0100               	movlb	0	; () banked
  4685  000F64  0E92               	movlw	low enviarEstadoConsola@buffer
  4686  000F66  0100               	movlb	0	; () banked
  4687  000F68  6F87               	movwf	?_ltoa& (0+255),b
  4688  000F6A  C135  F089         	movff	enviarEstadoConsola@dutyPWMlimit,?_ltoa+2
  4689  000F6E  C136  F08A         	movff	enviarEstadoConsola@dutyPWMlimit+1,?_ltoa+3
  4690  000F72  C137  F08B         	movff	enviarEstadoConsola@dutyPWMlimit+2,?_ltoa+4
  4691  000F76  C138  F08C         	movff	enviarEstadoConsola@dutyPWMlimit+3,?_ltoa+5
  4692  000F7A  0E00               	movlw	0
  4693  000F7C  0100               	movlb	0	; () banked
  4694  000F7E  0100               	movlb	0	; () banked
  4695  000F80  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4696  000F82  0E0A               	movlw	10
  4697  000F84  0100               	movlb	0	; () banked
  4698  000F86  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4699  000F88  ECCC  F014         	call	_ltoa	;wreg free
  4700                           
  4701                           ;MyUSART.c: 157: sendStr(buffer);
  4702  000F8C  0100               	movlb	0	; () banked
  4703  000F8E  0E00               	movlw	high enviarEstadoConsola@buffer
  4704  000F90  0100               	movlb	0	; () banked
  4705  000F92  0100               	movlb	0	; () banked
  4706  000F94  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4707  000F96  0100               	movlb	0	; () banked
  4708  000F98  0E92               	movlw	low enviarEstadoConsola@buffer
  4709  000F9A  0100               	movlb	0	; () banked
  4710  000F9C  6F60               	movwf	?_sendStr& (0+255),b
  4711  000F9E  EC32  F015         	call	_sendStr	;wreg free
  4712                           
  4713                           ;MyUSART.c: 159: sendStr(",");
  4714  000FA2  0E08               	movlw	high STR_3
  4715  000FA4  0100               	movlb	0	; () banked
  4716  000FA6  0100               	movlb	0	; () banked
  4717  000FA8  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4718  000FAA  0E69               	movlw	low STR_3
  4719  000FAC  0100               	movlb	0	; () banked
  4720  000FAE  6F60               	movwf	?_sendStr& (0+255),b
  4721  000FB0  EC32  F015         	call	_sendStr	;wreg free
  4722                           
  4723                           ;MyUSART.c: 161: sendStr("\"dt\":");
  4724  000FB4  0E08               	movlw	high STR_34
  4725  000FB6  0100               	movlb	0	; () banked
  4726  000FB8  0100               	movlb	0	; () banked
  4727  000FBA  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4728  000FBC  0E46               	movlw	low STR_34
  4729  000FBE  0100               	movlb	0	; () banked
  4730  000FC0  6F60               	movwf	?_sendStr& (0+255),b
  4731  000FC2  EC32  F015         	call	_sendStr	;wreg free
  4732                           
  4733                           ;MyUSART.c: 162: ltoa(buffer, dutyPWMlimitTimeout, 10);
  4734  000FC6  0100               	movlb	0	; () banked
  4735  000FC8  0E00               	movlw	high enviarEstadoConsola@buffer
  4736  000FCA  0100               	movlb	0	; () banked
  4737  000FCC  0100               	movlb	0	; () banked
  4738  000FCE  6F88               	movwf	(?_ltoa+1)& (0+255),b
  4739  000FD0  0100               	movlb	0	; () banked
  4740  000FD2  0E92               	movlw	low enviarEstadoConsola@buffer
  4741  000FD4  0100               	movlb	0	; () banked
  4742  000FD6  6F87               	movwf	?_ltoa& (0+255),b
  4743  000FD8  C139  F089         	movff	enviarEstadoConsola@dutyPWMlimitTimeout,?_ltoa+2
  4744  000FDC  C13A  F08A         	movff	enviarEstadoConsola@dutyPWMlimitTimeout+1,?_ltoa+3
  4745  000FE0  C13B  F08B         	movff	enviarEstadoConsola@dutyPWMlimitTimeout+2,?_ltoa+4
  4746  000FE4  C13C  F08C         	movff	enviarEstadoConsola@dutyPWMlimitTimeout+3,?_ltoa+5
  4747  000FE8  0E00               	movlw	0
  4748  000FEA  0100               	movlb	0	; () banked
  4749  000FEC  0100               	movlb	0	; () banked
  4750  000FEE  6F8E               	movwf	(?_ltoa+7)& (0+255),b
  4751  000FF0  0E0A               	movlw	10
  4752  000FF2  0100               	movlb	0	; () banked
  4753  000FF4  6F8D               	movwf	(?_ltoa+6)& (0+255),b
  4754  000FF6  ECCC  F014         	call	_ltoa	;wreg free
  4755                           
  4756                           ;MyUSART.c: 163: sendStr(buffer);
  4757  000FFA  0100               	movlb	0	; () banked
  4758  000FFC  0E00               	movlw	high enviarEstadoConsola@buffer
  4759  000FFE  0100               	movlb	0	; () banked
  4760  001000  0100               	movlb	0	; () banked
  4761  001002  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4762  001004  0100               	movlb	0	; () banked
  4763  001006  0E92               	movlw	low enviarEstadoConsola@buffer
  4764  001008  0100               	movlb	0	; () banked
  4765  00100A  6F60               	movwf	?_sendStr& (0+255),b
  4766  00100C  EC32  F015         	call	_sendStr	;wreg free
  4767  001010                     l3496:
  4768                           
  4769                           ;MyUSART.c: 165: }
  4770                           ;MyUSART.c: 167: sendStr("}");
  4771  001010  0E08               	movlw	high STR_35
  4772  001012  0100               	movlb	0	; () banked
  4773  001014  0100               	movlb	0	; () banked
  4774  001016  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4775  001018  0E6D               	movlw	low STR_35
  4776  00101A  0100               	movlb	0	; () banked
  4777  00101C  6F60               	movwf	?_sendStr& (0+255),b
  4778  00101E  EC32  F015         	call	_sendStr	;wreg free
  4779                           
  4780                           ;MyUSART.c: 168: sendStr("\n\r");
  4781  001022  0E08               	movlw	high STR_36
  4782  001024  0100               	movlb	0	; () banked
  4783  001026  0100               	movlb	0	; () banked
  4784  001028  6F61               	movwf	(?_sendStr+1)& (0+255),b
  4785  00102A  0E66               	movlw	low STR_36
  4786  00102C  0100               	movlb	0	; () banked
  4787  00102E  6F60               	movwf	?_sendStr& (0+255),b
  4788  001030  EC32  F015         	call	_sendStr	;wreg free
  4789  001034                     l93:
  4790  001034  0012               	return	
  4791  001036                     __end_of_enviarEstadoConsola:
  4792                           	opt stack 0
  4793                           tblptru	equ	0xFF8
  4794                           tblptrh	equ	0xFF7
  4795                           tblptrl	equ	0xFF6
  4796                           tablat	equ	0xFF5
  4797                           prodh	equ	0xFF4
  4798                           prodl	equ	0xFF3
  4799                           intcon	equ	0xFF2
  4800                           intcon2	equ	0xFF1
  4801                           postinc0	equ	0xFEE
  4802                           wreg	equ	0xFE8
  4803                           indf1	equ	0xFE7
  4804                           postdec1	equ	0xFE5
  4805                           fsr1h	equ	0xFE2
  4806                           fsr1l	equ	0xFE1
  4807                           indf2	equ	0xFDF
  4808                           fsr2h	equ	0xFDA
  4809                           fsr2l	equ	0xFD9
  4810                           status	equ	0xFD8
  4811                           
  4812 ;; *************** function _itoa *****************
  4813 ;; Defined at:
  4814 ;;		line 5 in file "/opt/microchip/xc8/v1.21/sources/common/itoa.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  buf             2   17[BANK0 ] PTR unsigned char 
  4817 ;;		 -> enviarEstadoConsola@buffer(10), 
  4818 ;;  val             2   19[BANK0 ] int 
  4819 ;;  base            2   21[BANK0 ] int 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  cp              2   23[BANK0 ] PTR unsigned char 
  4822 ;;		 -> enviarEstadoConsola@buffer(10), 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  2   17[BANK0 ] PTR unsigned char 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4832 ;;      Params:         0       6       0       0       0       0       0       0       0
  4833 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4835 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4836 ;;Total ram usage:        8 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    5
  4839 ;; This function calls:
  4840 ;;		_utoa
  4841 ;; This function is called by:
  4842 ;;		_enviarEstadoConsola
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text13
  4847  002B76                     __ptext13:
  4848                           	opt stack 0
  4849  002B76                     _itoa:
  4850                           	opt stack 24
  4851                           
  4852                           ;incstack = 0
  4853                           ;incstack = 0
  4854  002B76  C071  F077         	movff	itoa@buf,itoa@cp
  4855  002B7A  C072  F078         	movff	itoa@buf+1,itoa@cp+1
  4856  002B7E  0100               	movlb	0	; () banked
  4857  002B80  0100               	movlb	0	; () banked
  4858  002B82  AF74               	btfss	(itoa@val+1)& (0+255),7,b
  4859  002B84  D011               	goto	l3550
  4860                           
  4861                           ; BSR set to: 0
  4862  002B86  C071  FFD9         	movff	itoa@buf,fsr2l
  4863  002B8A  C072  FFDA         	movff	itoa@buf+1,fsr2h
  4864  002B8E  0E2D               	movlw	45
  4865  002B90  6EDF               	movwf	indf2,c
  4866                           
  4867                           ; BSR set to: 0
  4868  002B92  0100               	movlb	0	; () banked
  4869  002B94  0100               	movlb	0	; () banked
  4870  002B96  4B71               	infsnz	itoa@buf& (0+255),f,b
  4871  002B98  2B72               	incf	(itoa@buf+1)& (0+255),f,b
  4872                           
  4873                           ; BSR set to: 0
  4874  002B9A  0100               	movlb	0	; () banked
  4875  002B9C  0100               	movlb	0	; () banked
  4876  002B9E  6D73               	negf	itoa@val& (0+255),b
  4877  002BA0  0100               	movlb	0	; () banked
  4878  002BA2  1F74               	comf	(itoa@val+1)& (0+255),f,b
  4879  002BA4  B0D8               	btfsc	status,0,c
  4880  002BA6  2B74               	incf	(itoa@val+1)& (0+255),f,b
  4881  002BA8                     l3550:
  4882                           
  4883                           ; BSR set to: 0
  4884  002BA8  C071  F068         	movff	itoa@buf,?_utoa
  4885  002BAC  C072  F069         	movff	itoa@buf+1,?_utoa+1
  4886  002BB0  C073  F06A         	movff	itoa@val,?_utoa+2
  4887  002BB4  C074  F06B         	movff	itoa@val+1,?_utoa+3
  4888  002BB8  C075  F06C         	movff	itoa@base,?_utoa+4
  4889  002BBC  C076  F06D         	movff	itoa@base+1,?_utoa+5
  4890  002BC0  ECF6  F011         	call	_utoa	;wreg free
  4891                           
  4892                           ;	Return value of _itoa is never used
  4893  002BC4  0012               	return	
  4894  002BC6                     __end_of_itoa:
  4895                           	opt stack 0
  4896                           tblptru	equ	0xFF8
  4897                           tblptrh	equ	0xFF7
  4898                           tblptrl	equ	0xFF6
  4899                           tablat	equ	0xFF5
  4900                           prodh	equ	0xFF4
  4901                           prodl	equ	0xFF3
  4902                           intcon	equ	0xFF2
  4903                           intcon2	equ	0xFF1
  4904                           postinc0	equ	0xFEE
  4905                           wreg	equ	0xFE8
  4906                           indf1	equ	0xFE7
  4907                           postdec1	equ	0xFE5
  4908                           fsr1h	equ	0xFE2
  4909                           fsr1l	equ	0xFE1
  4910                           indf2	equ	0xFDF
  4911                           fsr2h	equ	0xFDA
  4912                           fsr2l	equ	0xFD9
  4913                           status	equ	0xFD8
  4914                           
  4915 ;; *************** function _utoa *****************
  4916 ;; Defined at:
  4917 ;;		line 18 in file "/opt/microchip/xc8/v1.21/sources/common/itoa.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  4920 ;;		 -> enviarEstadoConsola@buffer(10), 
  4921 ;;  val             2   10[BANK0 ] unsigned int 
  4922 ;;  base            2   12[BANK0 ] int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  v               2   14[BANK0 ] unsigned int 
  4925 ;;  c               1   16[BANK0 ] unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  2    8[BANK0 ] PTR unsigned char 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4935 ;;      Params:         0       6       0       0       0       0       0       0       0
  4936 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4938 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4939 ;;Total ram usage:        9 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    4
  4942 ;; This function calls:
  4943 ;;		___lwdiv
  4944 ;;		___lwmod
  4945 ;; This function is called by:
  4946 ;;		_enviarEstadoConsola
  4947 ;;		_itoa
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text14
  4952  0023EC                     __ptext14:
  4953                           	opt stack 0
  4954  0023EC                     _utoa:
  4955                           	opt stack 24
  4956                           
  4957                           ;incstack = 0
  4958                           ;incstack = 0
  4959  0023EC  C06A  F06E         	movff	utoa@val,utoa@v
  4960  0023F0  C06B  F06F         	movff	utoa@val+1,utoa@v+1
  4961  0023F4                     l3502:
  4962  0023F4  C06E  F060         	movff	utoa@v,?___lwdiv
  4963  0023F8  C06F  F061         	movff	utoa@v+1,?___lwdiv+1
  4964  0023FC  C06C  F062         	movff	utoa@base,?___lwdiv+2
  4965  002400  C06D  F063         	movff	utoa@base+1,?___lwdiv+3
  4966  002404  ECCE  F012         	call	___lwdiv	;wreg free
  4967  002408  0100               	movlb	0	; () banked
  4968  00240A  C060  F06E         	movff	?___lwdiv,utoa@v
  4969  00240E  0100               	movlb	0	; () banked
  4970  002410  C061  F06F         	movff	?___lwdiv+1,utoa@v+1
  4971                           
  4972                           ; BSR set to: 0
  4973  002414  0100               	movlb	0	; () banked
  4974  002416  0100               	movlb	0	; () banked
  4975  002418  4B68               	infsnz	utoa@buf& (0+255),f,b
  4976  00241A  2B69               	incf	(utoa@buf+1)& (0+255),f,b
  4977                           
  4978                           ; BSR set to: 0
  4979  00241C  0100               	movlb	0	; () banked
  4980  00241E  0100               	movlb	0	; () banked
  4981  002420  516F               	movf	(utoa@v+1)& (0+255),w,b
  4982  002422  116E               	iorwf	utoa@v& (0+255),w,b
  4983  002424  A4D8               	btfss	status,2,c
  4984  002426  D7E6               	goto	l3502
  4985                           
  4986                           ; BSR set to: 0
  4987                           
  4988                           ; BSR set to: 0
  4989  002428  C068  FFD9         	movff	utoa@buf,fsr2l
  4990  00242C  C069  FFDA         	movff	utoa@buf+1,fsr2h
  4991  002430  0E00               	movlw	0
  4992  002432  6EDF               	movwf	indf2,c
  4993                           
  4994                           ; BSR set to: 0
  4995  002434  0100               	movlb	0	; () banked
  4996  002436  0100               	movlb	0	; () banked
  4997  002438  0768               	decf	utoa@buf& (0+255),f,b
  4998  00243A  A0D8               	btfss	status,0,c
  4999  00243C  0769               	decf	(utoa@buf+1)& (0+255),f,b
  5000  00243E                     l3512:
  5001                           
  5002                           ; BSR set to: 0
  5003  00243E  C06A  F060         	movff	utoa@val,?___lwmod
  5004  002442  C06B  F061         	movff	utoa@val+1,?___lwmod+1
  5005  002446  C06C  F062         	movff	utoa@base,?___lwmod+2
  5006  00244A  C06D  F063         	movff	utoa@base+1,?___lwmod+3
  5007  00244E  EC07  F014         	call	___lwmod	;wreg free
  5008  002452  0100               	movlb	0	; () banked
  5009  002454  0100               	movlb	0	; () banked
  5010  002456  5160               	movf	?___lwmod& (0+255),w,b
  5011  002458  0100               	movlb	0	; () banked
  5012  00245A  0100               	movlb	0	; () banked
  5013  00245C  6F70               	movwf	utoa@c& (0+255),b
  5014                           
  5015                           ; BSR set to: 0
  5016  00245E  C06A  F060         	movff	utoa@val,?___lwdiv
  5017  002462  C06B  F061         	movff	utoa@val+1,?___lwdiv+1
  5018  002466  C06C  F062         	movff	utoa@base,?___lwdiv+2
  5019  00246A  C06D  F063         	movff	utoa@base+1,?___lwdiv+3
  5020  00246E  ECCE  F012         	call	___lwdiv	;wreg free
  5021  002472  0100               	movlb	0	; () banked
  5022  002474  C060  F06A         	movff	?___lwdiv,utoa@val
  5023  002478  0100               	movlb	0	; () banked
  5024  00247A  C061  F06B         	movff	?___lwdiv+1,utoa@val+1
  5025                           
  5026                           ; BSR set to: 0
  5027  00247E  0E09               	movlw	9
  5028  002480  0100               	movlb	0	; () banked
  5029  002482  0100               	movlb	0	; () banked
  5030  002484  6570               	cpfsgt	utoa@c& (0+255),b
  5031  002486  D004               	goto	l890
  5032                           
  5033                           ; BSR set to: 0
  5034  002488  0E07               	movlw	7
  5035  00248A  0100               	movlb	0	; () banked
  5036  00248C  0100               	movlb	0	; () banked
  5037  00248E  2770               	addwf	utoa@c& (0+255),f,b
  5038  002490                     l890:
  5039                           
  5040                           ; BSR set to: 0
  5041  002490  0E30               	movlw	48
  5042  002492  0100               	movlb	0	; () banked
  5043  002494  0100               	movlb	0	; () banked
  5044  002496  2770               	addwf	utoa@c& (0+255),f,b
  5045                           
  5046                           ; BSR set to: 0
  5047  002498  C068  FFD9         	movff	utoa@buf,fsr2l
  5048  00249C  C069  FFDA         	movff	utoa@buf+1,fsr2h
  5049  0024A0  0100               	movlb	0	; () banked
  5050  0024A2  C070  FFDF         	movff	utoa@c,indf2
  5051                           
  5052                           ; BSR set to: 0
  5053  0024A6  0100               	movlb	0	; () banked
  5054  0024A8  0100               	movlb	0	; () banked
  5055  0024AA  0768               	decf	utoa@buf& (0+255),f,b
  5056  0024AC  A0D8               	btfss	status,0,c
  5057  0024AE  0769               	decf	(utoa@buf+1)& (0+255),f,b
  5058                           
  5059                           ; BSR set to: 0
  5060  0024B0  0100               	movlb	0	; () banked
  5061  0024B2  0100               	movlb	0	; () banked
  5062  0024B4  516B               	movf	(utoa@val+1)& (0+255),w,b
  5063  0024B6  116A               	iorwf	utoa@val& (0+255),w,b
  5064  0024B8  A4D8               	btfss	status,2,c
  5065  0024BA  D7C1               	goto	l3512
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;	Return value of _utoa is never used
  5069                           
  5070                           ; BSR set to: 0
  5071  0024BC  0100               	movlb	0	; () banked
  5072  0024BE  0100               	movlb	0	; () banked
  5073  0024C0  4B68               	infsnz	utoa@buf& (0+255),f,b
  5074  0024C2  2B69               	incf	(utoa@buf+1)& (0+255),f,b
  5075                           
  5076                           ; BSR set to: 0
  5077                           
  5078                           ; BSR set to: 0
  5079  0024C4  0012               	return	
  5080  0024C6                     __end_of_utoa:
  5081                           	opt stack 0
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           prodh	equ	0xFF4
  5087                           prodl	equ	0xFF3
  5088                           intcon	equ	0xFF2
  5089                           intcon2	equ	0xFF1
  5090                           postinc0	equ	0xFEE
  5091                           wreg	equ	0xFE8
  5092                           indf1	equ	0xFE7
  5093                           postdec1	equ	0xFE5
  5094                           fsr1h	equ	0xFE2
  5095                           fsr1l	equ	0xFE1
  5096                           indf2	equ	0xFDF
  5097                           fsr2h	equ	0xFDA
  5098                           fsr2l	equ	0xFD9
  5099                           status	equ	0xFD8
  5100                           
  5101 ;; *************** function ___lwmod *****************
  5102 ;; Defined at:
  5103 ;;		line 10 in file "/opt/microchip/xc8/v1.21/sources/common/lwmod.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  dividend        2    0[BANK0 ] unsigned int 
  5106 ;;  divisor         2    2[BANK0 ] unsigned int 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  counter         1    5[BANK0 ] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  2    0[BANK0 ] unsigned int 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5118 ;;      Params:         0       4       0       0       0       0       0       0       0
  5119 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5120 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5121 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5122 ;;Total ram usage:        6 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    3
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_utoa
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text15
  5133  00280E                     __ptext15:
  5134                           	opt stack 0
  5135  00280E                     ___lwmod:
  5136                           	opt stack 24
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;incstack = 0
  5140                           ;incstack = 0
  5141  00280E  0100               	movlb	0	; () banked
  5142  002810  0100               	movlb	0	; () banked
  5143  002812  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5144  002814  1162               	iorwf	___lwmod@divisor& (0+255),w,b
  5145  002816  B4D8               	btfsc	status,2,c
  5146  002818  D03A               	goto	l1018
  5147                           
  5148                           ; BSR set to: 0
  5149  00281A  0100               	movlb	0	; () banked
  5150  00281C  6F64               	movwf	??___lwmod& (0+255),b
  5151  00281E  0E01               	movlw	1
  5152  002820  0100               	movlb	0	; () banked
  5153  002822  0100               	movlb	0	; () banked
  5154  002824  6F65               	movwf	___lwmod@counter& (0+255),b
  5155  002826  0100               	movlb	0	; () banked
  5156  002828  5164               	movf	??___lwmod& (0+255),w,b
  5157  00282A  D009               	goto	l4006
  5158  00282C                     l4004:
  5159                           
  5160                           ; BSR set to: 0
  5161  00282C  0100               	movlb	0	; () banked
  5162  00282E  0100               	movlb	0	; () banked
  5163  002830  0100               	movlb	0	; () banked
  5164  002832  90D8               	bcf	status,0,c
  5165  002834  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  5166  002836  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5167  002838  0100               	movlb	0	; () banked
  5168  00283A  0100               	movlb	0	; () banked
  5169  00283C  2B65               	incf	___lwmod@counter& (0+255),f,b
  5170  00283E                     l4006:
  5171                           
  5172                           ; BSR set to: 0
  5173  00283E  0100               	movlb	0	; () banked
  5174  002840  0100               	movlb	0	; () banked
  5175  002842  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5176  002844  D7F3               	goto	l4004
  5177  002846                     l4008:
  5178                           
  5179                           ; BSR set to: 0
  5180  002846  0100               	movlb	0	; () banked
  5181  002848  0100               	movlb	0	; () banked
  5182  00284A  5162               	movf	___lwmod@divisor& (0+255),w,b
  5183  00284C  0100               	movlb	0	; () banked
  5184  00284E  0100               	movlb	0	; () banked
  5185  002850  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  5186  002852  0100               	movlb	0	; () banked
  5187  002854  0100               	movlb	0	; () banked
  5188  002856  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5189  002858  0100               	movlb	0	; () banked
  5190  00285A  0100               	movlb	0	; () banked
  5191  00285C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5192  00285E  A0D8               	btfss	status,0,c
  5193  002860  D00C               	goto	l4012
  5194                           
  5195                           ; BSR set to: 0
  5196  002862  0100               	movlb	0	; () banked
  5197  002864  0100               	movlb	0	; () banked
  5198  002866  5162               	movf	___lwmod@divisor& (0+255),w,b
  5199  002868  0100               	movlb	0	; () banked
  5200  00286A  0100               	movlb	0	; () banked
  5201  00286C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  5202  00286E  0100               	movlb	0	; () banked
  5203  002870  0100               	movlb	0	; () banked
  5204  002872  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5205  002874  0100               	movlb	0	; () banked
  5206  002876  0100               	movlb	0	; () banked
  5207  002878  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5208  00287A                     l4012:
  5209                           
  5210                           ; BSR set to: 0
  5211  00287A  0100               	movlb	0	; () banked
  5212  00287C  0100               	movlb	0	; () banked
  5213  00287E  0100               	movlb	0	; () banked
  5214  002880  90D8               	bcf	status,0,c
  5215  002882  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5216  002884  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  5217                           
  5218                           ; BSR set to: 0
  5219  002886  0100               	movlb	0	; () banked
  5220  002888  0100               	movlb	0	; () banked
  5221  00288A  2F65               	decfsz	___lwmod@counter& (0+255),f,b
  5222  00288C  D7DC               	goto	l4008
  5223  00288E                     l1018:
  5224                           
  5225                           ; BSR set to: 0
  5226  00288E  C060  F060         	movff	___lwmod@dividend,?___lwmod
  5227  002892  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  5228                           
  5229                           ; BSR set to: 0
  5230  002896  0012               	return	
  5231  002898                     __end_of___lwmod:
  5232                           	opt stack 0
  5233                           tblptru	equ	0xFF8
  5234                           tblptrh	equ	0xFF7
  5235                           tblptrl	equ	0xFF6
  5236                           tablat	equ	0xFF5
  5237                           prodh	equ	0xFF4
  5238                           prodl	equ	0xFF3
  5239                           intcon	equ	0xFF2
  5240                           intcon2	equ	0xFF1
  5241                           postinc0	equ	0xFEE
  5242                           wreg	equ	0xFE8
  5243                           indf1	equ	0xFE7
  5244                           postdec1	equ	0xFE5
  5245                           fsr1h	equ	0xFE2
  5246                           fsr1l	equ	0xFE1
  5247                           indf2	equ	0xFDF
  5248                           fsr2h	equ	0xFDA
  5249                           fsr2l	equ	0xFD9
  5250                           status	equ	0xFD8
  5251                           
  5252 ;; *************** function ___lwdiv *****************
  5253 ;; Defined at:
  5254 ;;		line 10 in file "/opt/microchip/xc8/v1.21/sources/common/lwdiv.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  dividend        2    0[BANK0 ] unsigned int 
  5257 ;;  divisor         2    2[BANK0 ] unsigned int 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  quotient        2    6[BANK0 ] unsigned int 
  5260 ;;  counter         1    5[BANK0 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  2    0[BANK0 ] unsigned int 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5270 ;;      Params:         0       4       0       0       0       0       0       0       0
  5271 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5272 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5273 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5274 ;;Total ram usage:        8 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    3
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_utoa
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text16
  5285  00259C                     __ptext16:
  5286                           	opt stack 0
  5287  00259C                     ___lwdiv:
  5288                           	opt stack 24
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;incstack = 0
  5292                           ;incstack = 0
  5293  00259C  0E00               	movlw	0
  5294  00259E  0100               	movlb	0	; () banked
  5295  0025A0  0100               	movlb	0	; () banked
  5296  0025A2  6F67               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5297  0025A4  0E00               	movlw	0
  5298  0025A6  0100               	movlb	0	; () banked
  5299  0025A8  6F66               	movwf	___lwdiv@quotient& (0+255),b
  5300                           
  5301                           ; BSR set to: 0
  5302  0025AA  0100               	movlb	0	; () banked
  5303  0025AC  0100               	movlb	0	; () banked
  5304  0025AE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5305  0025B0  1162               	iorwf	___lwdiv@divisor& (0+255),w,b
  5306  0025B2  B4D8               	btfsc	status,2,c
  5307  0025B4  D043               	goto	l1008
  5308                           
  5309                           ; BSR set to: 0
  5310  0025B6  0100               	movlb	0	; () banked
  5311  0025B8  6F64               	movwf	??___lwdiv& (0+255),b
  5312  0025BA  0E01               	movlw	1
  5313  0025BC  0100               	movlb	0	; () banked
  5314  0025BE  0100               	movlb	0	; () banked
  5315  0025C0  6F65               	movwf	___lwdiv@counter& (0+255),b
  5316  0025C2  0100               	movlb	0	; () banked
  5317  0025C4  5164               	movf	??___lwdiv& (0+255),w,b
  5318  0025C6  D009               	goto	l3986
  5319  0025C8                     l3984:
  5320                           
  5321                           ; BSR set to: 0
  5322  0025C8  0100               	movlb	0	; () banked
  5323  0025CA  0100               	movlb	0	; () banked
  5324  0025CC  0100               	movlb	0	; () banked
  5325  0025CE  90D8               	bcf	status,0,c
  5326  0025D0  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5327  0025D2  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5328  0025D4  0100               	movlb	0	; () banked
  5329  0025D6  0100               	movlb	0	; () banked
  5330  0025D8  2B65               	incf	___lwdiv@counter& (0+255),f,b
  5331  0025DA                     l3986:
  5332                           
  5333                           ; BSR set to: 0
  5334  0025DA  0100               	movlb	0	; () banked
  5335  0025DC  0100               	movlb	0	; () banked
  5336  0025DE  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5337  0025E0  D7F3               	goto	l3984
  5338  0025E2                     l3988:
  5339                           
  5340                           ; BSR set to: 0
  5341  0025E2  0100               	movlb	0	; () banked
  5342  0025E4  0100               	movlb	0	; () banked
  5343  0025E6  0100               	movlb	0	; () banked
  5344  0025E8  90D8               	bcf	status,0,c
  5345  0025EA  3766               	rlcf	___lwdiv@quotient& (0+255),f,b
  5346  0025EC  3767               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5347                           
  5348                           ; BSR set to: 0
  5349  0025EE  0100               	movlb	0	; () banked
  5350  0025F0  0100               	movlb	0	; () banked
  5351  0025F2  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5352  0025F4  0100               	movlb	0	; () banked
  5353  0025F6  0100               	movlb	0	; () banked
  5354  0025F8  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5355  0025FA  0100               	movlb	0	; () banked
  5356  0025FC  0100               	movlb	0	; () banked
  5357  0025FE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5358  002600  0100               	movlb	0	; () banked
  5359  002602  0100               	movlb	0	; () banked
  5360  002604  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5361  002606  A0D8               	btfss	status,0,c
  5362  002608  D00F               	goto	l3996
  5363                           
  5364                           ; BSR set to: 0
  5365  00260A  0100               	movlb	0	; () banked
  5366  00260C  0100               	movlb	0	; () banked
  5367  00260E  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5368  002610  0100               	movlb	0	; () banked
  5369  002612  0100               	movlb	0	; () banked
  5370  002614  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5371  002616  0100               	movlb	0	; () banked
  5372  002618  0100               	movlb	0	; () banked
  5373  00261A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5374  00261C  0100               	movlb	0	; () banked
  5375  00261E  0100               	movlb	0	; () banked
  5376  002620  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5377                           
  5378                           ; BSR set to: 0
  5379  002622  0100               	movlb	0	; () banked
  5380  002624  0100               	movlb	0	; () banked
  5381  002626  8166               	bsf	___lwdiv@quotient& (0+255),0,b
  5382  002628                     l3996:
  5383                           
  5384                           ; BSR set to: 0
  5385  002628  0100               	movlb	0	; () banked
  5386  00262A  0100               	movlb	0	; () banked
  5387  00262C  0100               	movlb	0	; () banked
  5388  00262E  90D8               	bcf	status,0,c
  5389  002630  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5390  002632  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5391                           
  5392                           ; BSR set to: 0
  5393  002634  0100               	movlb	0	; () banked
  5394  002636  0100               	movlb	0	; () banked
  5395  002638  2F65               	decfsz	___lwdiv@counter& (0+255),f,b
  5396  00263A  D7D3               	goto	l3988
  5397  00263C                     l1008:
  5398                           
  5399                           ; BSR set to: 0
  5400  00263C  C066  F060         	movff	___lwdiv@quotient,?___lwdiv
  5401  002640  C067  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5402                           
  5403                           ; BSR set to: 0
  5404  002644  0012               	return	
  5405  002646                     __end_of___lwdiv:
  5406                           	opt stack 0
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           intcon2	equ	0xFF1
  5415                           postinc0	equ	0xFEE
  5416                           wreg	equ	0xFE8
  5417                           indf1	equ	0xFE7
  5418                           postdec1	equ	0xFE5
  5419                           fsr1h	equ	0xFE2
  5420                           fsr1l	equ	0xFE1
  5421                           indf2	equ	0xFDF
  5422                           fsr2h	equ	0xFDA
  5423                           fsr2l	equ	0xFD9
  5424                           status	equ	0xFD8
  5425                           
  5426 ;; *************** function _ltoa *****************
  5427 ;; Defined at:
  5428 ;;		line 9 in file "/opt/microchip/xc8/v1.21/sources/common/ltoa.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  buf             2   39[BANK0 ] PTR unsigned char 
  5431 ;;		 -> enviarEstadoConsola@buffer(10), 
  5432 ;;  val             4   41[BANK0 ] long 
  5433 ;;  base            2   45[BANK0 ] int 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  cp              2   47[BANK0 ] PTR unsigned char 
  5436 ;;		 -> enviarEstadoConsola@buffer(10), 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  2   39[BANK0 ] PTR unsigned char 
  5439 ;; Registers used:
  5440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5446 ;;      Params:         0       8       0       0       0       0       0       0       0
  5447 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5449 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5450 ;;Total ram usage:       10 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    5
  5453 ;; This function calls:
  5454 ;;		_ultoa
  5455 ;; This function is called by:
  5456 ;;		_enviarEstadoConsola
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text17
  5461  002998                     __ptext17:
  5462                           	opt stack 0
  5463  002998                     _ltoa:
  5464                           	opt stack 24
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;incstack = 0
  5468                           ;incstack = 0
  5469  002998  C087  F08F         	movff	ltoa@buf,ltoa@cp
  5470  00299C  C088  F090         	movff	ltoa@buf+1,ltoa@cp+1
  5471  0029A0  0100               	movlb	0	; () banked
  5472  0029A2  0100               	movlb	0	; () banked
  5473  0029A4  AF8C               	btfss	(ltoa@val+3)& (0+255),7,b
  5474  0029A6  D01A               	goto	l3538
  5475                           
  5476                           ; BSR set to: 0
  5477  0029A8  C087  FFD9         	movff	ltoa@buf,fsr2l
  5478  0029AC  C088  FFDA         	movff	ltoa@buf+1,fsr2h
  5479  0029B0  0E2D               	movlw	45
  5480  0029B2  6EDF               	movwf	indf2,c
  5481                           
  5482                           ; BSR set to: 0
  5483  0029B4  0100               	movlb	0	; () banked
  5484  0029B6  0100               	movlb	0	; () banked
  5485  0029B8  4B87               	infsnz	ltoa@buf& (0+255),f,b
  5486  0029BA  2B88               	incf	(ltoa@buf+1)& (0+255),f,b
  5487                           
  5488                           ; BSR set to: 0
  5489  0029BC  0100               	movlb	0	; () banked
  5490  0029BE  0100               	movlb	0	; () banked
  5491  0029C0  1F8C               	comf	(ltoa@val+3)& (0+255),f,b
  5492  0029C2  0100               	movlb	0	; () banked
  5493  0029C4  1F8B               	comf	(ltoa@val+2)& (0+255),f,b
  5494  0029C6  0100               	movlb	0	; () banked
  5495  0029C8  1F8A               	comf	(ltoa@val+1)& (0+255),f,b
  5496  0029CA  0100               	movlb	0	; () banked
  5497  0029CC  6D89               	negf	ltoa@val& (0+255),b
  5498  0029CE  0E00               	movlw	0
  5499  0029D0  0100               	movlb	0	; () banked
  5500  0029D2  238A               	addwfc	(ltoa@val+1)& (0+255),f,b
  5501  0029D4  0100               	movlb	0	; () banked
  5502  0029D6  238B               	addwfc	(ltoa@val+2)& (0+255),f,b
  5503  0029D8  0100               	movlb	0	; () banked
  5504  0029DA  238C               	addwfc	(ltoa@val+3)& (0+255),f,b
  5505  0029DC                     l3538:
  5506                           
  5507                           ; BSR set to: 0
  5508  0029DC  C087  F07A         	movff	ltoa@buf,?_ultoa
  5509  0029E0  C088  F07B         	movff	ltoa@buf+1,?_ultoa+1
  5510  0029E4  C089  F07C         	movff	ltoa@val,?_ultoa+2
  5511  0029E8  C08A  F07D         	movff	ltoa@val+1,?_ultoa+3
  5512  0029EC  C08B  F07E         	movff	ltoa@val+2,?_ultoa+4
  5513  0029F0  C08C  F07F         	movff	ltoa@val+3,?_ultoa+5
  5514  0029F4  C08D  F080         	movff	ltoa@base,?_ultoa+6
  5515  0029F8  C08E  F081         	movff	ltoa@base+1,?_ultoa+7
  5516  0029FC  ECA8  F00F         	call	_ultoa	;wreg free
  5517                           
  5518                           ;	Return value of _ltoa is never used
  5519  002A00  0012               	return	
  5520  002A02                     __end_of_ltoa:
  5521                           	opt stack 0
  5522                           tblptru	equ	0xFF8
  5523                           tblptrh	equ	0xFF7
  5524                           tblptrl	equ	0xFF6
  5525                           tablat	equ	0xFF5
  5526                           prodh	equ	0xFF4
  5527                           prodl	equ	0xFF3
  5528                           intcon	equ	0xFF2
  5529                           intcon2	equ	0xFF1
  5530                           postinc0	equ	0xFEE
  5531                           wreg	equ	0xFE8
  5532                           indf1	equ	0xFE7
  5533                           postdec1	equ	0xFE5
  5534                           fsr1h	equ	0xFE2
  5535                           fsr1l	equ	0xFE1
  5536                           indf2	equ	0xFDF
  5537                           fsr2h	equ	0xFDA
  5538                           fsr2l	equ	0xFD9
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function _ultoa *****************
  5542 ;; Defined at:
  5543 ;;		line 34 in file "/opt/microchip/xc8/v1.21/sources/common/ltoa.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  buf             2   26[BANK0 ] PTR unsigned char 
  5546 ;;		 -> enviarEstadoConsola@buffer(10), 
  5547 ;;  val             4   28[BANK0 ] unsigned long 
  5548 ;;  base            2   32[BANK0 ] int 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  v               4   34[BANK0 ] unsigned long 
  5551 ;;  c               1   38[BANK0 ] unsigned char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  2   26[BANK0 ] PTR unsigned char 
  5554 ;; Registers used:
  5555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5561 ;;      Params:         0       8       0       0       0       0       0       0       0
  5562 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5564 ;;      Totals:         0      13       0       0       0       0       0       0       0
  5565 ;;Total ram usage:       13 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    4
  5568 ;; This function calls:
  5569 ;;		___lldiv
  5570 ;;		___llmod
  5571 ;; This function is called by:
  5572 ;;		_ltoa
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text18
  5577  001F50                     __ptext18:
  5578                           	opt stack 0
  5579  001F50                     _ultoa:
  5580                           	opt stack 24
  5581                           
  5582                           ;incstack = 0
  5583                           ;incstack = 0
  5584  001F50  C07C  F082         	movff	ultoa@val,ultoa@v
  5585  001F54  C07D  F083         	movff	ultoa@val+1,ultoa@v+1
  5586  001F58  C07E  F084         	movff	ultoa@val+2,ultoa@v+2
  5587  001F5C  C07F  F085         	movff	ultoa@val+3,ultoa@v+3
  5588  001F60                     l3954:
  5589  001F60  C082  F06C         	movff	ultoa@v,?___lldiv
  5590  001F64  C083  F06D         	movff	ultoa@v+1,?___lldiv+1
  5591  001F68  C084  F06E         	movff	ultoa@v+2,?___lldiv+2
  5592  001F6C  C085  F06F         	movff	ultoa@v+3,?___lldiv+3
  5593  001F70  0100               	movlb	0	; () banked
  5594  001F72  0100               	movlb	0	; () banked
  5595  001F74  C080  F070         	movff	ultoa@base,?___lldiv+4
  5596  001F78  0100               	movlb	0	; () banked
  5597  001F7A  0100               	movlb	0	; () banked
  5598  001F7C  C081  F071         	movff	ultoa@base+1,?___lldiv+5
  5599  001F80  0100               	movlb	0	; () banked
  5600  001F82  0E00               	movlw	0
  5601  001F84  0100               	movlb	0	; () banked
  5602  001F86  BF71               	btfsc	(?___lldiv+5)& (0+255),7,b
  5603  001F88  0EFF               	movlw	-1
  5604  001F8A  0100               	movlb	0	; () banked
  5605  001F8C  6F72               	movwf	(?___lldiv+6)& (0+255),b
  5606  001F8E  0100               	movlb	0	; () banked
  5607  001F90  6F73               	movwf	(?___lldiv+7)& (0+255),b
  5608  001F92  EC71  F011         	call	___lldiv	;wreg free
  5609  001F96  C06F  F085         	movff	?___lldiv+3,ultoa@v+3
  5610  001F9A  C06E  F084         	movff	?___lldiv+2,ultoa@v+2
  5611  001F9E  C06D  F083         	movff	?___lldiv+1,ultoa@v+1
  5612  001FA2  C06C  F082         	movff	?___lldiv,ultoa@v
  5613  001FA6  0100               	movlb	0	; () banked
  5614  001FA8  0100               	movlb	0	; () banked
  5615  001FAA  4B7A               	infsnz	ultoa@buf& (0+255),f,b
  5616  001FAC  2B7B               	incf	(ultoa@buf+1)& (0+255),f,b
  5617                           
  5618                           ; BSR set to: 0
  5619  001FAE  0100               	movlb	0	; () banked
  5620  001FB0  0100               	movlb	0	; () banked
  5621  001FB2  5185               	movf	(ultoa@v+3)& (0+255),w,b
  5622  001FB4  1182               	iorwf	ultoa@v& (0+255),w,b
  5623  001FB6  1183               	iorwf	(ultoa@v+1)& (0+255),w,b
  5624  001FB8  1184               	iorwf	(ultoa@v+2)& (0+255),w,b
  5625  001FBA  A4D8               	btfss	status,2,c
  5626  001FBC  D7D1               	goto	l3954
  5627                           
  5628                           ; BSR set to: 0
  5629                           
  5630                           ; BSR set to: 0
  5631  001FBE  C07A  FFD9         	movff	ultoa@buf,fsr2l
  5632  001FC2  C07B  FFDA         	movff	ultoa@buf+1,fsr2h
  5633  001FC6  0E00               	movlw	0
  5634  001FC8  6EDF               	movwf	indf2,c
  5635                           
  5636                           ; BSR set to: 0
  5637  001FCA  0100               	movlb	0	; () banked
  5638  001FCC  0100               	movlb	0	; () banked
  5639  001FCE  077A               	decf	ultoa@buf& (0+255),f,b
  5640  001FD0  A0D8               	btfss	status,0,c
  5641  001FD2  077B               	decf	(ultoa@buf+1)& (0+255),f,b
  5642  001FD4                     l3964:
  5643                           
  5644                           ; BSR set to: 0
  5645  001FD4  C07C  F060         	movff	ultoa@val,?___llmod
  5646  001FD8  C07D  F061         	movff	ultoa@val+1,?___llmod+1
  5647  001FDC  C07E  F062         	movff	ultoa@val+2,?___llmod+2
  5648  001FE0  C07F  F063         	movff	ultoa@val+3,?___llmod+3
  5649  001FE4  0100               	movlb	0	; () banked
  5650  001FE6  0100               	movlb	0	; () banked
  5651  001FE8  C080  F064         	movff	ultoa@base,?___llmod+4
  5652  001FEC  0100               	movlb	0	; () banked
  5653  001FEE  0100               	movlb	0	; () banked
  5654  001FF0  C081  F065         	movff	ultoa@base+1,?___llmod+5
  5655  001FF4  0100               	movlb	0	; () banked
  5656  001FF6  0E00               	movlw	0
  5657  001FF8  0100               	movlb	0	; () banked
  5658  001FFA  BF65               	btfsc	(?___llmod+5)& (0+255),7,b
  5659  001FFC  0EFF               	movlw	-1
  5660  001FFE  0100               	movlb	0	; () banked
  5661  002000  6F66               	movwf	(?___llmod+6)& (0+255),b
  5662  002002  0100               	movlb	0	; () banked
  5663  002004  6F67               	movwf	(?___llmod+7)& (0+255),b
  5664  002006  EC63  F012         	call	___llmod	;wreg free
  5665  00200A  0100               	movlb	0	; () banked
  5666  00200C  0100               	movlb	0	; () banked
  5667  00200E  5160               	movf	?___llmod& (0+255),w,b
  5668  002010  0100               	movlb	0	; () banked
  5669  002012  0100               	movlb	0	; () banked
  5670  002014  6F86               	movwf	ultoa@c& (0+255),b
  5671                           
  5672                           ; BSR set to: 0
  5673  002016  C07C  F06C         	movff	ultoa@val,?___lldiv
  5674  00201A  C07D  F06D         	movff	ultoa@val+1,?___lldiv+1
  5675  00201E  C07E  F06E         	movff	ultoa@val+2,?___lldiv+2
  5676  002022  C07F  F06F         	movff	ultoa@val+3,?___lldiv+3
  5677  002026  0100               	movlb	0	; () banked
  5678  002028  0100               	movlb	0	; () banked
  5679  00202A  C080  F070         	movff	ultoa@base,?___lldiv+4
  5680  00202E  0100               	movlb	0	; () banked
  5681  002030  0100               	movlb	0	; () banked
  5682  002032  C081  F071         	movff	ultoa@base+1,?___lldiv+5
  5683  002036  0100               	movlb	0	; () banked
  5684  002038  0E00               	movlw	0
  5685  00203A  0100               	movlb	0	; () banked
  5686  00203C  BF71               	btfsc	(?___lldiv+5)& (0+255),7,b
  5687  00203E  0EFF               	movlw	-1
  5688  002040  0100               	movlb	0	; () banked
  5689  002042  6F72               	movwf	(?___lldiv+6)& (0+255),b
  5690  002044  0100               	movlb	0	; () banked
  5691  002046  6F73               	movwf	(?___lldiv+7)& (0+255),b
  5692  002048  EC71  F011         	call	___lldiv	;wreg free
  5693  00204C  C06F  F07F         	movff	?___lldiv+3,ultoa@val+3
  5694  002050  C06E  F07E         	movff	?___lldiv+2,ultoa@val+2
  5695  002054  C06D  F07D         	movff	?___lldiv+1,ultoa@val+1
  5696  002058  C06C  F07C         	movff	?___lldiv,ultoa@val
  5697  00205C  0E09               	movlw	9
  5698  00205E  0100               	movlb	0	; () banked
  5699  002060  0100               	movlb	0	; () banked
  5700  002062  6586               	cpfsgt	ultoa@c& (0+255),b
  5701  002064  D004               	goto	l993
  5702                           
  5703                           ; BSR set to: 0
  5704  002066  0E07               	movlw	7
  5705  002068  0100               	movlb	0	; () banked
  5706  00206A  0100               	movlb	0	; () banked
  5707  00206C  2786               	addwf	ultoa@c& (0+255),f,b
  5708  00206E                     l993:
  5709                           
  5710                           ; BSR set to: 0
  5711  00206E  0E30               	movlw	48
  5712  002070  0100               	movlb	0	; () banked
  5713  002072  0100               	movlb	0	; () banked
  5714  002074  2786               	addwf	ultoa@c& (0+255),f,b
  5715                           
  5716                           ; BSR set to: 0
  5717  002076  C07A  FFD9         	movff	ultoa@buf,fsr2l
  5718  00207A  C07B  FFDA         	movff	ultoa@buf+1,fsr2h
  5719  00207E  0100               	movlb	0	; () banked
  5720  002080  C086  FFDF         	movff	ultoa@c,indf2
  5721                           
  5722                           ; BSR set to: 0
  5723  002084  0100               	movlb	0	; () banked
  5724  002086  0100               	movlb	0	; () banked
  5725  002088  077A               	decf	ultoa@buf& (0+255),f,b
  5726  00208A  A0D8               	btfss	status,0,c
  5727  00208C  077B               	decf	(ultoa@buf+1)& (0+255),f,b
  5728                           
  5729                           ; BSR set to: 0
  5730  00208E  0100               	movlb	0	; () banked
  5731  002090  0100               	movlb	0	; () banked
  5732  002092  517F               	movf	(ultoa@val+3)& (0+255),w,b
  5733  002094  117C               	iorwf	ultoa@val& (0+255),w,b
  5734  002096  117D               	iorwf	(ultoa@val+1)& (0+255),w,b
  5735  002098  117E               	iorwf	(ultoa@val+2)& (0+255),w,b
  5736  00209A  B4D8               	btfsc	status,2,c
  5737                           
  5738                           ; BSR set to: 0
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;	Return value of _ultoa is never used
  5742  00209C  0012               	return	
  5743  00209E  D79A               	goto	l3964
  5744  0020A0                     __end_of_ultoa:
  5745                           	opt stack 0
  5746                           tblptru	equ	0xFF8
  5747                           tblptrh	equ	0xFF7
  5748                           tblptrl	equ	0xFF6
  5749                           tablat	equ	0xFF5
  5750                           prodh	equ	0xFF4
  5751                           prodl	equ	0xFF3
  5752                           intcon	equ	0xFF2
  5753                           intcon2	equ	0xFF1
  5754                           postinc0	equ	0xFEE
  5755                           wreg	equ	0xFE8
  5756                           indf1	equ	0xFE7
  5757                           postdec1	equ	0xFE5
  5758                           fsr1h	equ	0xFE2
  5759                           fsr1l	equ	0xFE1
  5760                           indf2	equ	0xFDF
  5761                           fsr2h	equ	0xFDA
  5762                           fsr2l	equ	0xFD9
  5763                           status	equ	0xFD8
  5764                           
  5765 ;; *************** function ___llmod *****************
  5766 ;; Defined at:
  5767 ;;		line 10 in file "/opt/microchip/xc8/v1.21/sources/common/llmod.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  dividend        4    0[BANK0 ] unsigned long 
  5770 ;;  divisor         4    4[BANK0 ] unsigned long 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  counter         1    9[BANK0 ] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  4    0[BANK0 ] unsigned long 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5782 ;;      Params:         0       8       0       0       0       0       0       0       0
  5783 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5784 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5785 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5786 ;;Total ram usage:       10 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    3
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_ultoa
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text19
  5797  0024C6                     __ptext19:
  5798                           	opt stack 0
  5799  0024C6                     ___llmod:
  5800                           	opt stack 24
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;incstack = 0
  5804                           ;incstack = 0
  5805  0024C6  0100               	movlb	0	; () banked
  5806  0024C8  0100               	movlb	0	; () banked
  5807  0024CA  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5808  0024CC  1164               	iorwf	___llmod@divisor& (0+255),w,b
  5809  0024CE  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5810  0024D0  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5811  0024D2  B4D8               	btfsc	status,2,c
  5812  0024D4  D05A               	goto	l935
  5813                           
  5814                           ; BSR set to: 0
  5815  0024D6  0100               	movlb	0	; () banked
  5816  0024D8  6F68               	movwf	??___llmod& (0+255),b
  5817  0024DA  0E01               	movlw	1
  5818  0024DC  0100               	movlb	0	; () banked
  5819  0024DE  0100               	movlb	0	; () banked
  5820  0024E0  6F69               	movwf	___llmod@counter& (0+255),b
  5821  0024E2  0100               	movlb	0	; () banked
  5822  0024E4  5168               	movf	??___llmod& (0+255),w,b
  5823  0024E6  D00D               	goto	l3942
  5824  0024E8                     l3940:
  5825                           
  5826                           ; BSR set to: 0
  5827  0024E8  0100               	movlb	0	; () banked
  5828  0024EA  90D8               	bcf	status,0,c
  5829  0024EC  0100               	movlb	0	; () banked
  5830  0024EE  3764               	rlcf	___llmod@divisor& (0+255),f,b
  5831  0024F0  0100               	movlb	0	; () banked
  5832  0024F2  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5833  0024F4  0100               	movlb	0	; () banked
  5834  0024F6  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5835  0024F8  0100               	movlb	0	; () banked
  5836  0024FA  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5837  0024FC  0100               	movlb	0	; () banked
  5838  0024FE  0100               	movlb	0	; () banked
  5839  002500  2B69               	incf	___llmod@counter& (0+255),f,b
  5840  002502                     l3942:
  5841                           
  5842                           ; BSR set to: 0
  5843  002502  0100               	movlb	0	; () banked
  5844  002504  0100               	movlb	0	; () banked
  5845  002506  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5846  002508  D7EF               	goto	l3940
  5847  00250A                     l3944:
  5848                           
  5849                           ; BSR set to: 0
  5850  00250A  0100               	movlb	0	; () banked
  5851  00250C  0100               	movlb	0	; () banked
  5852  00250E  5164               	movf	___llmod@divisor& (0+255),w,b
  5853  002510  0100               	movlb	0	; () banked
  5854  002512  0100               	movlb	0	; () banked
  5855  002514  5D60               	subwf	___llmod@dividend& (0+255),w,b
  5856  002516  0100               	movlb	0	; () banked
  5857  002518  0100               	movlb	0	; () banked
  5858  00251A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5859  00251C  0100               	movlb	0	; () banked
  5860  00251E  0100               	movlb	0	; () banked
  5861  002520  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5862  002522  0100               	movlb	0	; () banked
  5863  002524  0100               	movlb	0	; () banked
  5864  002526  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5865  002528  0100               	movlb	0	; () banked
  5866  00252A  0100               	movlb	0	; () banked
  5867  00252C  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5868  00252E  0100               	movlb	0	; () banked
  5869  002530  0100               	movlb	0	; () banked
  5870  002532  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5871  002534  0100               	movlb	0	; () banked
  5872  002536  0100               	movlb	0	; () banked
  5873  002538  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5874  00253A  A0D8               	btfss	status,0,c
  5875  00253C  D018               	goto	l3948
  5876                           
  5877                           ; BSR set to: 0
  5878  00253E  0100               	movlb	0	; () banked
  5879  002540  0100               	movlb	0	; () banked
  5880  002542  5164               	movf	___llmod@divisor& (0+255),w,b
  5881  002544  0100               	movlb	0	; () banked
  5882  002546  0100               	movlb	0	; () banked
  5883  002548  5F60               	subwf	___llmod@dividend& (0+255),f,b
  5884  00254A  0100               	movlb	0	; () banked
  5885  00254C  0100               	movlb	0	; () banked
  5886  00254E  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5887  002550  0100               	movlb	0	; () banked
  5888  002552  0100               	movlb	0	; () banked
  5889  002554  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5890  002556  0100               	movlb	0	; () banked
  5891  002558  0100               	movlb	0	; () banked
  5892  00255A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5893  00255C  0100               	movlb	0	; () banked
  5894  00255E  0100               	movlb	0	; () banked
  5895  002560  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5896  002562  0100               	movlb	0	; () banked
  5897  002564  0100               	movlb	0	; () banked
  5898  002566  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5899  002568  0100               	movlb	0	; () banked
  5900  00256A  0100               	movlb	0	; () banked
  5901  00256C  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5902  00256E                     l3948:
  5903                           
  5904                           ; BSR set to: 0
  5905  00256E  0100               	movlb	0	; () banked
  5906  002570  90D8               	bcf	status,0,c
  5907  002572  0100               	movlb	0	; () banked
  5908  002574  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5909  002576  0100               	movlb	0	; () banked
  5910  002578  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5911  00257A  0100               	movlb	0	; () banked
  5912  00257C  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5913  00257E  0100               	movlb	0	; () banked
  5914  002580  3364               	rrcf	___llmod@divisor& (0+255),f,b
  5915                           
  5916                           ; BSR set to: 0
  5917  002582  0100               	movlb	0	; () banked
  5918  002584  0100               	movlb	0	; () banked
  5919  002586  2F69               	decfsz	___llmod@counter& (0+255),f,b
  5920  002588  D7C0               	goto	l3944
  5921  00258A                     l935:
  5922                           
  5923                           ; BSR set to: 0
  5924  00258A  C060  F060         	movff	___llmod@dividend,?___llmod
  5925  00258E  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  5926  002592  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  5927  002596  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  5928                           
  5929                           ; BSR set to: 0
  5930  00259A  0012               	return	
  5931  00259C                     __end_of___llmod:
  5932                           	opt stack 0
  5933                           tblptru	equ	0xFF8
  5934                           tblptrh	equ	0xFF7
  5935                           tblptrl	equ	0xFF6
  5936                           tablat	equ	0xFF5
  5937                           prodh	equ	0xFF4
  5938                           prodl	equ	0xFF3
  5939                           intcon	equ	0xFF2
  5940                           intcon2	equ	0xFF1
  5941                           postinc0	equ	0xFEE
  5942                           wreg	equ	0xFE8
  5943                           indf1	equ	0xFE7
  5944                           postdec1	equ	0xFE5
  5945                           fsr1h	equ	0xFE2
  5946                           fsr1l	equ	0xFE1
  5947                           indf2	equ	0xFDF
  5948                           fsr2h	equ	0xFDA
  5949                           fsr2l	equ	0xFD9
  5950                           status	equ	0xFD8
  5951                           
  5952 ;; *************** function _sendStr *****************
  5953 ;; Defined at:
  5954 ;;		line 22 in file "MyUSART.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  dataPtr         2    0[BANK0 ] PTR const unsigned char 
  5957 ;;		 -> STR_36(3), STR_35(2), STR_34(6), STR_33(2), 
  5958 ;;		 -> STR_32(6), STR_31(2), STR_30(6), STR_29(2), 
  5959 ;;		 -> STR_28(6), STR_27(2), STR_26(6), STR_25(2), 
  5960 ;;		 -> STR_24(7), STR_23(2), STR_22(7), STR_21(2), 
  5961 ;;		 -> STR_20(7), STR_19(2), STR_18(7), STR_17(2), 
  5962 ;;		 -> STR_16(6), STR_15(2), STR_14(6), STR_13(2), 
  5963 ;;		 -> STR_12(6), STR_11(2), STR_10(5), STR_9(2), 
  5964 ;;		 -> STR_8(5), STR_7(2), STR_6(5), STR_5(2), 
  5965 ;;		 -> STR_4(6), STR_3(2), enviarEstadoConsola@buffer(10), STR_2(5), 
  5966 ;;		 -> STR_1(2), 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;		None               void
  5971 ;; Registers used:
  5972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5978 ;;      Params:         0       2       0       0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5981 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5982 ;;Total ram usage:        2 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    3
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_enviarEstadoConsola
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text20
  5993  002A64                     __ptext20:
  5994                           	opt stack 0
  5995  002A64                     _sendStr:
  5996                           	opt stack 26
  5997                           
  5998                           ;MyUSART.c: 23: while( *dataPtr ){
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;incstack = 0
  6002                           ;incstack = 0
  6003  002A64  D019               	goto	l3362
  6004  002A66                     l83:
  6005  002A66  A2AC               	btfss	4012,1,c	;volatile
  6006  002A68  D7FE               	goto	l83
  6007                           
  6008                           ;MyUSART.c: 25: TXREG = *dataPtr;
  6009  002A6A  0100               	movlb	0	; () banked
  6010  002A6C  0100               	movlb	0	; () banked
  6011  002A6E  5160               	movf	sendStr@dataPtr& (0+255),w,b
  6012  002A70  6EF6               	movwf	tblptrl,c
  6013  002A72  6EE9               	movwf	fsr0l,c
  6014  002A74  0E07               	movlw	(high __ramtop+-1)
  6015  002A76  6EEA               	movwf	fsr0h,c
  6016  002A78  0100               	movlb	0	; () banked
  6017  002A7A  0100               	movlb	0	; () banked
  6018  002A7C  5161               	movf	(sendStr@dataPtr+1)& (0+255),w,b
  6019  002A7E  64EA               	cpfsgt	fsr0h,c
  6020  002A80  D003               	bra	u2217
  6021  002A82  6EEA               	movwf	fsr0h,c
  6022  002A84  50EF               	movf	indf0,w,c
  6023  002A86  D003               	bra	u2210
  6024  002A88                     u2217:
  6025  002A88  6EF7               	movwf	tblptrh,c
  6026  002A8A  0008               	tblrd		*
  6027  002A8C  50F5               	movf	tablat,w,c
  6028  002A8E                     u2210:
  6029  002A8E  6EAD               	movwf	4013,c	;volatile
  6030                           
  6031                           ;MyUSART.c: 26: dataPtr++;
  6032  002A90  0100               	movlb	0	; () banked
  6033  002A92  0100               	movlb	0	; () banked
  6034  002A94  4B60               	infsnz	sendStr@dataPtr& (0+255),f,b
  6035  002A96  2B61               	incf	(sendStr@dataPtr+1)& (0+255),f,b
  6036  002A98                     l3362:
  6037  002A98  0100               	movlb	0	; () banked
  6038  002A9A  0100               	movlb	0	; () banked
  6039  002A9C  5160               	movf	sendStr@dataPtr& (0+255),w,b
  6040  002A9E  6EF6               	movwf	tblptrl,c
  6041  002AA0  6EE9               	movwf	fsr0l,c
  6042  002AA2  0E07               	movlw	(high __ramtop+-1)
  6043  002AA4  6EEA               	movwf	fsr0h,c
  6044  002AA6  0100               	movlb	0	; () banked
  6045  002AA8  0100               	movlb	0	; () banked
  6046  002AAA  5161               	movf	(sendStr@dataPtr+1)& (0+255),w,b
  6047  002AAC  64EA               	cpfsgt	fsr0h,c
  6048  002AAE  D003               	bra	u2227
  6049  002AB0  6EEA               	movwf	fsr0h,c
  6050  002AB2  50EF               	movf	indf0,w,c
  6051  002AB4  D003               	bra	u2220
  6052  002AB6                     u2227:
  6053  002AB6  6EF7               	movwf	tblptrh,c
  6054  002AB8  0008               	tblrd		*
  6055  002ABA  50F5               	movf	tablat,w,c
  6056  002ABC                     u2220:
  6057  002ABC  0900               	iorlw	0
  6058  002ABE  B4D8               	btfsc	status,2,c
  6059  002AC0  0012               	return	
  6060  002AC2  D7D1               	goto	l83
  6061  002AC4                     __end_of_sendStr:
  6062                           	opt stack 0
  6063                           tblptru	equ	0xFF8
  6064                           tblptrh	equ	0xFF7
  6065                           tblptrl	equ	0xFF6
  6066                           tablat	equ	0xFF5
  6067                           prodh	equ	0xFF4
  6068                           prodl	equ	0xFF3
  6069                           intcon	equ	0xFF2
  6070                           intcon2	equ	0xFF1
  6071                           indf0	equ	0xFEF
  6072                           postinc0	equ	0xFEE
  6073                           fsr0h	equ	0xFEA
  6074                           fsr0l	equ	0xFE9
  6075                           wreg	equ	0xFE8
  6076                           indf1	equ	0xFE7
  6077                           postdec1	equ	0xFE5
  6078                           fsr1h	equ	0xFE2
  6079                           fsr1l	equ	0xFE1
  6080                           indf2	equ	0xFDF
  6081                           fsr2h	equ	0xFDA
  6082                           fsr2l	equ	0xFD9
  6083                           status	equ	0xFD8
  6084                           
  6085 ;; *************** function _ConfigUSART *****************
  6086 ;; Defined at:
  6087 ;;		line 8 in file "MyUSART.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;		None
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;		None               void
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6103 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6104 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6105 ;;Total ram usage:        1 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    4
  6108 ;; This function calls:
  6109 ;;		_OpenUSART
  6110 ;; This function is called by:
  6111 ;;		_main
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text21
  6116  002D96                     __ptext21:
  6117                           	opt stack 0
  6118  002D96                     _ConfigUSART:
  6119                           	opt stack 26
  6120                           
  6121                           ;MyUSART.c: 9: TRISCbits.RC6 = 0;
  6122                           
  6123                           ;incstack = 0
  6124                           ;incstack = 0
  6125  002D96  9C94               	bcf	3988,6,c	;volatile
  6126                           
  6127                           ;MyUSART.c: 10: TRISCbits.RC7 = 1;
  6128  002D98  8E94               	bsf	3988,7,c	;volatile
  6129                           
  6130                           ;MyUSART.c: 11: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111
      +                          ,16);
  6131  002D9A  0100               	movlb	0	; () banked
  6132  002D9C  6F63               	movwf	??_ConfigUSART& (0+255),b
  6133  002D9E  0E7C               	movlw	124
  6134  002DA0  0100               	movlb	0	; () banked
  6135  002DA2  0100               	movlb	0	; () banked
  6136  002DA4  6F60               	movwf	?_OpenUSART& (0+255),b
  6137  002DA6  0100               	movlb	0	; () banked
  6138  002DA8  5163               	movf	??_ConfigUSART& (0+255),w,b
  6139  002DAA  0E00               	movlw	0
  6140  002DAC  0100               	movlb	0	; () banked
  6141  002DAE  0100               	movlb	0	; () banked
  6142  002DB0  6F62               	movwf	(?_OpenUSART+2)& (0+255),b
  6143  002DB2  0E10               	movlw	16
  6144  002DB4  0100               	movlb	0	; () banked
  6145  002DB6  6F61               	movwf	(?_OpenUSART+1)& (0+255),b
  6146  002DB8  EC4C  F014         	call	_OpenUSART	;wreg free
  6147                           
  6148                           ;MyUSART.c: 12: BAUDCONbits.BRG16 = 1;
  6149  002DBC  86B8               	bsf	4024,3,c	;volatile
  6150  002DBE  0012               	return	
  6151  002DC0                     __end_of_ConfigUSART:
  6152                           	opt stack 0
  6153                           tblptru	equ	0xFF8
  6154                           tblptrh	equ	0xFF7
  6155                           tblptrl	equ	0xFF6
  6156                           tablat	equ	0xFF5
  6157                           prodh	equ	0xFF4
  6158                           prodl	equ	0xFF3
  6159                           intcon	equ	0xFF2
  6160                           intcon2	equ	0xFF1
  6161                           indf0	equ	0xFEF
  6162                           postinc0	equ	0xFEE
  6163                           fsr0h	equ	0xFEA
  6164                           fsr0l	equ	0xFE9
  6165                           wreg	equ	0xFE8
  6166                           indf1	equ	0xFE7
  6167                           postdec1	equ	0xFE5
  6168                           fsr1h	equ	0xFE2
  6169                           fsr1l	equ	0xFE1
  6170                           indf2	equ	0xFDF
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function _OpenUSART *****************
  6176 ;; Defined at:
  6177 ;;		line 74 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/USART/uopen.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  config          1    0[BANK0 ] unsigned char 
  6180 ;;  spbrg           2    1[BANK0 ] unsigned int 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;		None               void
  6185 ;; Registers used:
  6186 ;;		wreg, status,2
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6192 ;;      Params:         0       3       0       0       0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6195 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6196 ;;Total ram usage:        3 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    3
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_ConfigUSART
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text22
  6207  002898                     __ptext22:
  6208                           	opt stack 0
  6209  002898                     _OpenUSART:
  6210                           	opt stack 26
  6211                           
  6212                           ;incstack = 0
  6213                           ;incstack = 0
  6214  002898  0E00               	movlw	0
  6215  00289A  6EAC               	movwf	4012,c	;volatile
  6216  00289C  0E00               	movlw	0
  6217  00289E  6EAB               	movwf	4011,c	;volatile
  6218  0028A0  0100               	movlb	0	; () banked
  6219  0028A2  0100               	movlb	0	; () banked
  6220  0028A4  B160               	btfsc	OpenUSART@config& (0+255),0,b
  6221                           
  6222                           ; BSR set to: 0
  6223  0028A6  88AC               	bsf	4012,4,c	;volatile
  6224                           
  6225                           ; BSR set to: 0
  6226  0028A8  0100               	movlb	0	; () banked
  6227  0028AA  0100               	movlb	0	; () banked
  6228  0028AC  A360               	btfss	OpenUSART@config& (0+255),1,b
  6229  0028AE  D002               	goto	l412
  6230                           
  6231                           ; BSR set to: 0
  6232  0028B0  8CAC               	bsf	4012,6,c	;volatile
  6233  0028B2  8CAB               	bsf	4011,6,c	;volatile
  6234  0028B4                     l412:
  6235                           
  6236                           ; BSR set to: 0
  6237  0028B4  0100               	movlb	0	; () banked
  6238  0028B6  0100               	movlb	0	; () banked
  6239  0028B8  B560               	btfsc	OpenUSART@config& (0+255),2,b
  6240                           
  6241                           ; BSR set to: 0
  6242  0028BA  8EAC               	bsf	4012,7,c	;volatile
  6243                           
  6244                           ; BSR set to: 0
  6245  0028BC  0100               	movlb	0	; () banked
  6246  0028BE  0100               	movlb	0	; () banked
  6247  0028C0  A760               	btfss	OpenUSART@config& (0+255),3,b
  6248  0028C2  D002               	goto	l414
  6249                           
  6250                           ; BSR set to: 0
  6251  0028C4  88AB               	bsf	4011,4,c	;volatile
  6252  0028C6  D001               	goto	l415
  6253  0028C8                     l414:
  6254                           
  6255                           ; BSR set to: 0
  6256  0028C8  8AAB               	bsf	4011,5,c	;volatile
  6257  0028CA                     l415:
  6258                           
  6259                           ; BSR set to: 0
  6260  0028CA  0100               	movlb	0	; () banked
  6261  0028CC  0100               	movlb	0	; () banked
  6262  0028CE  B960               	btfsc	OpenUSART@config& (0+255),4,b
  6263                           
  6264                           ; BSR set to: 0
  6265  0028D0  84AC               	bsf	4012,2,c	;volatile
  6266                           
  6267                           ; BSR set to: 0
  6268  0028D2  989E               	bcf	3998,4,c	;volatile
  6269  0028D4  0100               	movlb	0	; () banked
  6270  0028D6  0100               	movlb	0	; () banked
  6271  0028D8  BB60               	btfsc	OpenUSART@config& (0+255),5,b
  6272                           
  6273                           ; BSR set to: 0
  6274  0028DA  86AB               	bsf	4011,3,c	;volatile
  6275                           
  6276                           ; BSR set to: 0
  6277  0028DC  0100               	movlb	0	; () banked
  6278  0028DE  0100               	movlb	0	; () banked
  6279  0028E0  AD60               	btfss	OpenUSART@config& (0+255),6,b
  6280  0028E2  D002               	goto	l418
  6281                           
  6282                           ; BSR set to: 0
  6283  0028E4  8A9D               	bsf	3997,5,c	;volatile
  6284  0028E6  D001               	goto	l419
  6285  0028E8                     l418:
  6286                           
  6287                           ; BSR set to: 0
  6288  0028E8  9A9D               	bcf	3997,5,c	;volatile
  6289  0028EA                     l419:
  6290                           
  6291                           ; BSR set to: 0
  6292  0028EA  9A9E               	bcf	3998,5,c	;volatile
  6293  0028EC  0100               	movlb	0	; () banked
  6294  0028EE  0100               	movlb	0	; () banked
  6295  0028F0  AF60               	btfss	OpenUSART@config& (0+255),7,b
  6296  0028F2  D002               	goto	l420
  6297                           
  6298                           ; BSR set to: 0
  6299  0028F4  889D               	bsf	3997,4,c	;volatile
  6300  0028F6  D001               	goto	l421
  6301  0028F8                     l420:
  6302                           
  6303                           ; BSR set to: 0
  6304  0028F8  989D               	bcf	3997,4,c	;volatile
  6305  0028FA                     l421:
  6306                           
  6307                           ; BSR set to: 0
  6308  0028FA  C061  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  6309                           
  6310                           ; BSR set to: 0
  6311  0028FE  0100               	movlb	0	; () banked
  6312  002900  0100               	movlb	0	; () banked
  6313  002902  5162               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  6314  002904  6EB0               	movwf	4016,c	;volatile
  6315                           
  6316                           ; BSR set to: 0
  6317  002906  8AAC               	bsf	4012,5,c	;volatile
  6318                           
  6319                           ; BSR set to: 0
  6320  002908  8EAB               	bsf	4011,7,c	;volatile
  6321                           
  6322                           ; BSR set to: 0
  6323  00290A  9C94               	bcf	3988,6,c	;volatile
  6324                           
  6325                           ; BSR set to: 0
  6326  00290C  8E94               	bsf	3988,7,c	;volatile
  6327                           
  6328                           ; BSR set to: 0
  6329  00290E  B8AC               	btfsc	4012,4,c	;volatile
  6330                           
  6331                           ; BSR set to: 0
  6332  002910  BEAC               	btfsc	4012,7,c	;volatile
  6333  002912  D001               	goto	l423
  6334                           
  6335                           ; BSR set to: 0
  6336  002914  8C94               	bsf	3988,6,c	;volatile
  6337  002916                     l423:
  6338                           
  6339                           ; BSR set to: 0
  6340  002916  0012               	return	
  6341  002918                     __end_of_OpenUSART:
  6342                           	opt stack 0
  6343                           tblptru	equ	0xFF8
  6344                           tblptrh	equ	0xFF7
  6345                           tblptrl	equ	0xFF6
  6346                           tablat	equ	0xFF5
  6347                           prodh	equ	0xFF4
  6348                           prodl	equ	0xFF3
  6349                           intcon	equ	0xFF2
  6350                           intcon2	equ	0xFF1
  6351                           indf0	equ	0xFEF
  6352                           postinc0	equ	0xFEE
  6353                           fsr0h	equ	0xFEA
  6354                           fsr0l	equ	0xFE9
  6355                           wreg	equ	0xFE8
  6356                           indf1	equ	0xFE7
  6357                           postdec1	equ	0xFE5
  6358                           fsr1h	equ	0xFE2
  6359                           fsr1l	equ	0xFE1
  6360                           indf2	equ	0xFDF
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8
  6364                           
  6365 ;; *************** function _ConfigPWM *****************
  6366 ;; Defined at:
  6367 ;;		line 9 in file "MyPWM.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;		None               void
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6381 ;;      Params:         0       0       0       0       0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6383 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6384 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6385 ;;Total ram usage:        1 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    4
  6388 ;; This function calls:
  6389 ;;		_SetDCPWM1
  6390 ;;		_OpenTimer2
  6391 ;;		_OpenPWM1
  6392 ;; This function is called by:
  6393 ;;		_main
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text23
  6398  002C8C                     __ptext23:
  6399                           	opt stack 0
  6400  002C8C                     _ConfigPWM:
  6401                           	opt stack 26
  6402                           
  6403                           ;MyPWM.c: 10: SetDCPWM1 (0x00);
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;incstack = 0
  6407                           ;incstack = 0
  6408  002C8C  0E00               	movlw	0
  6409  002C8E  0100               	movlb	0	; () banked
  6410  002C90  0100               	movlb	0	; () banked
  6411  002C92  6F61               	movwf	(?_SetDCPWM1+1)& (0+255),b
  6412  002C94  0E00               	movlw	0
  6413  002C96  0100               	movlb	0	; () banked
  6414  002C98  6F60               	movwf	?_SetDCPWM1& (0+255),b
  6415  002C9A  ECE3  F015         	call	_SetDCPWM1	;wreg free
  6416                           
  6417                           ;MyPWM.c: 11: OpenTimer2( 0b01111111 & 0b11111110 );
  6418  002C9E  0100               	movlb	0	; () banked
  6419  002CA0  6F66               	movwf	??_ConfigPWM& (0+255),b
  6420  002CA2  0E7E               	movlw	126
  6421  002CA4  0100               	movlb	0	; () banked
  6422  002CA6  0100               	movlb	0	; () banked
  6423  002CA8  6F60               	movwf	?_OpenTimer2& (0+255),b
  6424  002CAA  0100               	movlb	0	; () banked
  6425  002CAC  5166               	movf	??_ConfigPWM& (0+255),w,b
  6426  002CAE  ECE0  F016         	call	_OpenTimer2	;wreg free
  6427                           
  6428                           ;MyPWM.c: 12: OpenPWM1(0xFF);
  6429  002CB2  0100               	movlb	0	; () banked
  6430  002CB4  6F66               	movwf	??_ConfigPWM& (0+255),b
  6431  002CB6  0EFF               	movlw	255
  6432  002CB8  0100               	movlb	0	; () banked
  6433  002CBA  0100               	movlb	0	; () banked
  6434  002CBC  6F60               	movwf	?_OpenPWM1& (0+255),b
  6435  002CBE  0100               	movlb	0	; () banked
  6436  002CC0  5166               	movf	??_ConfigPWM& (0+255),w,b
  6437  002CC2  EC43  F017         	call	_OpenPWM1	;wreg free
  6438  002CC6  0012               	return	
  6439  002CC8                     __end_of_ConfigPWM:
  6440                           	opt stack 0
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           intcon2	equ	0xFF1
  6449                           indf0	equ	0xFEF
  6450                           postinc0	equ	0xFEE
  6451                           fsr0h	equ	0xFEA
  6452                           fsr0l	equ	0xFE9
  6453                           wreg	equ	0xFE8
  6454                           indf1	equ	0xFE7
  6455                           postdec1	equ	0xFE5
  6456                           fsr1h	equ	0xFE2
  6457                           fsr1l	equ	0xFE1
  6458                           indf2	equ	0xFDF
  6459                           fsr2h	equ	0xFDA
  6460                           fsr2l	equ	0xFD9
  6461                           status	equ	0xFD8
  6462                           
  6463 ;; *************** function _OpenPWM1 *****************
  6464 ;; Defined at:
  6465 ;;		line 9 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/PWM/pw1open.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  period          1    0[BANK0 ] unsigned char 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;		None               void
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, status,0
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6479 ;;      Params:         0       1       0       0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6482 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6483 ;;Total ram usage:        1 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    3
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_ConfigPWM
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text24
  6494  002E86                     __ptext24:
  6495                           	opt stack 0
  6496  002E86                     _OpenPWM1:
  6497                           	opt stack 26
  6498                           
  6499                           ;incstack = 0
  6500                           ;incstack = 0
  6501  002E86  0E0C               	movlw	12
  6502  002E88  12BD               	iorwf	4029,f,c	;volatile
  6503  002E8A  9494               	bcf	3988,2,c	;volatile
  6504  002E8C  94CA               	bcf	4042,2,c	;volatile
  6505  002E8E  C060  FFCB         	movff	OpenPWM1@period,4043	;volatile
  6506  002E92  84CA               	bsf	4042,2,c	;volatile
  6507  002E94  0012               	return	
  6508  002E96                     __end_of_OpenPWM1:
  6509                           	opt stack 0
  6510                           tblptru	equ	0xFF8
  6511                           tblptrh	equ	0xFF7
  6512                           tblptrl	equ	0xFF6
  6513                           tablat	equ	0xFF5
  6514                           prodh	equ	0xFF4
  6515                           prodl	equ	0xFF3
  6516                           intcon	equ	0xFF2
  6517                           intcon2	equ	0xFF1
  6518                           indf0	equ	0xFEF
  6519                           postinc0	equ	0xFEE
  6520                           fsr0h	equ	0xFEA
  6521                           fsr0l	equ	0xFE9
  6522                           wreg	equ	0xFE8
  6523                           indf1	equ	0xFE7
  6524                           postdec1	equ	0xFE5
  6525                           fsr1h	equ	0xFE2
  6526                           fsr1l	equ	0xFE1
  6527                           indf2	equ	0xFDF
  6528                           fsr2h	equ	0xFDA
  6529                           fsr2l	equ	0xFD9
  6530                           status	equ	0xFD8
  6531                           
  6532 ;; *************** function _OpenTimer2 *****************
  6533 ;; Defined at:
  6534 ;;		line 18 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/Timers/t2open.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  config          1    0[BANK0 ] unsigned char 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;		None               void
  6541 ;; Registers used:
  6542 ;;		wreg, status,2, status,0
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6548 ;;      Params:         0       1       0       0       0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6551 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6552 ;;Total ram usage:        1 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    3
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_ConfigPWM
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text25
  6563  002DC0                     __ptext25:
  6564                           	opt stack 0
  6565  002DC0                     _OpenTimer2:
  6566                           	opt stack 26
  6567                           
  6568                           ;incstack = 0
  6569                           ;incstack = 0
  6570  002DC0  0100               	movlb	0	; () banked
  6571  002DC2  0100               	movlb	0	; () banked
  6572  002DC4  5160               	movf	OpenTimer2@config& (0+255),w,b
  6573  002DC6  0BFB               	andlw	251
  6574  002DC8  6ECA               	movwf	4042,c	;volatile
  6575                           
  6576                           ; BSR set to: 0
  6577  002DCA  0E00               	movlw	0
  6578  002DCC  6ECC               	movwf	4044,c	;volatile
  6579                           
  6580                           ; BSR set to: 0
  6581  002DCE  929E               	bcf	3998,1,c	;volatile
  6582                           
  6583                           ; BSR set to: 0
  6584  002DD0  0100               	movlb	0	; () banked
  6585  002DD2  0100               	movlb	0	; () banked
  6586  002DD4  AF60               	btfss	OpenTimer2@config& (0+255),7,b
  6587  002DD6  D002               	goto	l388
  6588                           
  6589                           ; BSR set to: 0
  6590  002DD8  829D               	bsf	3997,1,c	;volatile
  6591  002DDA  D001               	goto	l389
  6592  002DDC                     l388:
  6593                           
  6594                           ; BSR set to: 0
  6595  002DDC  929D               	bcf	3997,1,c	;volatile
  6596  002DDE                     l389:
  6597                           
  6598                           ; BSR set to: 0
  6599  002DDE  84CA               	bsf	4042,2,c	;volatile
  6600                           
  6601                           ; BSR set to: 0
  6602  002DE0  0012               	return	
  6603  002DE2                     __end_of_OpenTimer2:
  6604                           	opt stack 0
  6605                           tblptru	equ	0xFF8
  6606                           tblptrh	equ	0xFF7
  6607                           tblptrl	equ	0xFF6
  6608                           tablat	equ	0xFF5
  6609                           prodh	equ	0xFF4
  6610                           prodl	equ	0xFF3
  6611                           intcon	equ	0xFF2
  6612                           intcon2	equ	0xFF1
  6613                           indf0	equ	0xFEF
  6614                           postinc0	equ	0xFEE
  6615                           fsr0h	equ	0xFEA
  6616                           fsr0l	equ	0xFE9
  6617                           wreg	equ	0xFE8
  6618                           indf1	equ	0xFE7
  6619                           postdec1	equ	0xFE5
  6620                           fsr1h	equ	0xFE2
  6621                           fsr1l	equ	0xFE1
  6622                           indf2	equ	0xFDF
  6623                           fsr2h	equ	0xFDA
  6624                           fsr2l	equ	0xFD9
  6625                           status	equ	0xFD8
  6626                           
  6627 ;; *************** function _SetDCPWM1 *****************
  6628 ;; Defined at:
  6629 ;;		line 8 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/PWM/pw1setdc.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  6634 ;; Return value:  Size  Location     Type
  6635 ;;		None               void
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6643 ;;      Params:         0       2       0       0       0       0       0       0       0
  6644 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6645 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6646 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6647 ;;Total ram usage:        6 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    3
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_ConfigPWM
  6654 ;;		_setDUTY
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text26
  6659  002BC6                     __ptext26:
  6660                           	opt stack 0
  6661  002BC6                     _SetDCPWM1:
  6662                           	opt stack 24
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;incstack = 0
  6666                           ;incstack = 0
  6667  002BC6  0100               	movlb	0	; () banked
  6668  002BC8  C060  F062         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  6669  002BCC  0100               	movlb	0	; () banked
  6670  002BCE  C061  F063         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  6671  002BD2  0E06               	movlw	6
  6672  002BD4                     u2085:
  6673  002BD4  90D8               	bcf	status,0,c
  6674  002BD6  0100               	movlb	0	; () banked
  6675  002BD8  3762               	rlcf	??_SetDCPWM1& (0+255),f,b
  6676  002BDA  3763               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  6677  002BDC  2EE8               	decfsz	wreg,f,c
  6678  002BDE  D7FA               	goto	u2085
  6679  002BE0  C062  F064         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  6680  002BE4  C063  F065         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  6681                           
  6682                           ; BSR set to: 0
  6683  002BE8  C065  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  6684  002BEC  C064  F062         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  6685  002BF0  0100               	movlb	0	; () banked
  6686  002BF2  90D8               	bcf	status,0,c
  6687  002BF4  3362               	rrcf	??_SetDCPWM1& (0+255),f,b
  6688  002BF6  0100               	movlb	0	; () banked
  6689  002BF8  90D8               	bcf	status,0,c
  6690  002BFA  3362               	rrcf	??_SetDCPWM1& (0+255),f,b
  6691  002BFC  0E30               	movlw	48
  6692  002BFE  0100               	movlb	0	; () banked
  6693  002C00  1762               	andwf	??_SetDCPWM1& (0+255),f,b
  6694  002C02  50BD               	movf	4029,w,c	;volatile
  6695  002C04  0BCF               	andlw	207
  6696  002C06  0100               	movlb	0	; () banked
  6697  002C08  1162               	iorwf	??_SetDCPWM1& (0+255),w,b
  6698  002C0A  6EBD               	movwf	4029,c	;volatile
  6699                           
  6700                           ; BSR set to: 0
  6701  002C0C  0012               	return	
  6702  002C0E                     __end_of_SetDCPWM1:
  6703                           	opt stack 0
  6704                           tblptru	equ	0xFF8
  6705                           tblptrh	equ	0xFF7
  6706                           tblptrl	equ	0xFF6
  6707                           tablat	equ	0xFF5
  6708                           prodh	equ	0xFF4
  6709                           prodl	equ	0xFF3
  6710                           intcon	equ	0xFF2
  6711                           intcon2	equ	0xFF1
  6712                           indf0	equ	0xFEF
  6713                           postinc0	equ	0xFEE
  6714                           fsr0h	equ	0xFEA
  6715                           fsr0l	equ	0xFE9
  6716                           wreg	equ	0xFE8
  6717                           indf1	equ	0xFE7
  6718                           postdec1	equ	0xFE5
  6719                           fsr1h	equ	0xFE2
  6720                           fsr1l	equ	0xFE1
  6721                           indf2	equ	0xFDF
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function _controlador *****************
  6727 ;; Defined at:
  6728 ;;		line 57 in file "MyControl.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  error           4    0[BANK1 ] long 
  6731 ;;  dt              4    4[BANK1 ] unsigned long 
  6732 ;;  Kp              4    8[BANK1 ] unsigned long 
  6733 ;;  Ki              4   12[BANK1 ] unsigned long 
  6734 ;;  Kd              4   16[BANK1 ] unsigned long 
  6735 ;;  dutyPWM         2   20[BANK1 ] PTR unsigned long 
  6736 ;;		 -> dutyPWM(4), 
  6737 ;;  dirGiro         2   22[BANK1 ] PTR unsigned char 
  6738 ;;		 -> main@dirGiro(1), 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  accionContro    4   74[BANK0 ] long 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  4    0[BANK1 ] long 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6750 ;;      Params:         0       0      24       0       0       0       0       0       0
  6751 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6753 ;;      Totals:         0       4      24       0       0       0       0       0       0
  6754 ;;Total ram usage:       28 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    5
  6757 ;; This function calls:
  6758 ;;		_calcPID
  6759 ;;		_labs
  6760 ;;		___aldiv
  6761 ;;		___lmul
  6762 ;; This function is called by:
  6763 ;;		_main
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text27
  6768  001A26                     __ptext27:
  6769                           	opt stack 0
  6770  001A26                     _controlador:
  6771                           	opt stack 25
  6772                           
  6773                           ;MyControl.c: 59: int32_t accionControl;
  6774                           ;MyControl.c: 60: static int32_t lastError1;
  6775                           ;MyControl.c: 62: error *= 1000;
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;incstack = 0
  6779                           ;incstack = 0
  6780  001A26  C100  F060         	movff	controlador@error,?___lmul
  6781  001A2A  C101  F061         	movff	controlador@error+1,?___lmul+1
  6782  001A2E  C102  F062         	movff	controlador@error+2,?___lmul+2
  6783  001A32  C103  F063         	movff	controlador@error+3,?___lmul+3
  6784  001A36  0EE8               	movlw	232
  6785  001A38  0100               	movlb	0	; () banked
  6786  001A3A  0100               	movlb	0	; () banked
  6787  001A3C  6F64               	movwf	(?___lmul+4)& (0+255),b
  6788  001A3E  0E03               	movlw	3
  6789  001A40  0100               	movlb	0	; () banked
  6790  001A42  6F65               	movwf	(?___lmul+5)& (0+255),b
  6791  001A44  0E00               	movlw	0
  6792  001A46  0100               	movlb	0	; () banked
  6793  001A48  6F66               	movwf	(?___lmul+6)& (0+255),b
  6794  001A4A  0E00               	movlw	0
  6795  001A4C  0100               	movlb	0	; () banked
  6796  001A4E  6F67               	movwf	(?___lmul+7)& (0+255),b
  6797  001A50  EC72  F013         	call	___lmul	;wreg free
  6798  001A54  C063  F103         	movff	?___lmul+3,controlador@error+3
  6799  001A58  C062  F102         	movff	?___lmul+2,controlador@error+2
  6800  001A5C  C061  F101         	movff	?___lmul+1,controlador@error+1
  6801  001A60  C060  F100         	movff	?___lmul,controlador@error
  6802                           
  6803                           ;MyControl.c: 64: accionControl = calcPID(error,
  6804                           ;MyControl.c: 65: dt,
  6805                           ;MyControl.c: 66: Kp, Ki, Kd,
  6806                           ;MyControl.c: 67: &lastError1,
  6807                           ;MyControl.c: 68: &iError1);
  6808  001A64  C100  F07A         	movff	controlador@error,?_calcPID
  6809  001A68  C101  F07B         	movff	controlador@error+1,?_calcPID+1
  6810  001A6C  C102  F07C         	movff	controlador@error+2,?_calcPID+2
  6811  001A70  C103  F07D         	movff	controlador@error+3,?_calcPID+3
  6812  001A74  C104  F07E         	movff	controlador@dt,?_calcPID+4
  6813  001A78  C105  F07F         	movff	controlador@dt+1,?_calcPID+5
  6814  001A7C  C106  F080         	movff	controlador@dt+2,?_calcPID+6
  6815  001A80  C107  F081         	movff	controlador@dt+3,?_calcPID+7
  6816  001A84  C108  F082         	movff	controlador@Kp,?_calcPID+8
  6817  001A88  C109  F083         	movff	controlador@Kp+1,?_calcPID+9
  6818  001A8C  C10A  F084         	movff	controlador@Kp+2,?_calcPID+10
  6819  001A90  C10B  F085         	movff	controlador@Kp+3,?_calcPID+11
  6820  001A94  C10C  F086         	movff	controlador@Ki,?_calcPID+12
  6821  001A98  C10D  F087         	movff	controlador@Ki+1,?_calcPID+13
  6822  001A9C  C10E  F088         	movff	controlador@Ki+2,?_calcPID+14
  6823  001AA0  C10F  F089         	movff	controlador@Ki+3,?_calcPID+15
  6824  001AA4  C110  F08A         	movff	controlador@Kd,?_calcPID+16
  6825  001AA8  C111  F08B         	movff	controlador@Kd+1,?_calcPID+17
  6826  001AAC  C112  F08C         	movff	controlador@Kd+2,?_calcPID+18
  6827  001AB0  C113  F08D         	movff	controlador@Kd+3,?_calcPID+19
  6828  001AB4  0E00               	movlw	high controlador@lastError1
  6829  001AB6  0100               	movlb	0	; () banked
  6830  001AB8  0100               	movlb	0	; () banked
  6831  001ABA  6F8F               	movwf	(?_calcPID+21)& (0+255),b
  6832  001ABC  0E31               	movlw	low controlador@lastError1
  6833  001ABE  0100               	movlb	0	; () banked
  6834  001AC0  6F8E               	movwf	(?_calcPID+20)& (0+255),b
  6835  001AC2  0E00               	movlw	high _iError1
  6836  001AC4  0100               	movlb	0	; () banked
  6837  001AC6  0100               	movlb	0	; () banked
  6838  001AC8  6F91               	movwf	(?_calcPID+23)& (0+255),b
  6839  001ACA  0E29               	movlw	low _iError1
  6840  001ACC  0100               	movlb	0	; () banked
  6841  001ACE  6F90               	movwf	(?_calcPID+22)& (0+255),b
  6842  001AD0  EC85  F00A         	call	_calcPID	;wreg free
  6843  001AD4  C07D  F0AD         	movff	?_calcPID+3,controlador@accionControl+3
  6844  001AD8  C07C  F0AC         	movff	?_calcPID+2,controlador@accionControl+2
  6845  001ADC  C07B  F0AB         	movff	?_calcPID+1,controlador@accionControl+1
  6846  001AE0  C07A  F0AA         	movff	?_calcPID,controlador@accionControl
  6847                           
  6848                           ;MyControl.c: 70: static int32_t lastError2;
  6849                           ;MyControl.c: 72: accionControl = calcPID(accionControl,
  6850                           ;MyControl.c: 73: dt,
  6851                           ;MyControl.c: 74: Kp2, Ki2, Kd2,
  6852                           ;MyControl.c: 75: &lastError2,
  6853                           ;MyControl.c: 76: &iError2);
  6854  001AE4  C0AA  F07A         	movff	controlador@accionControl,?_calcPID
  6855  001AE8  C0AB  F07B         	movff	controlador@accionControl+1,?_calcPID+1
  6856  001AEC  C0AC  F07C         	movff	controlador@accionControl+2,?_calcPID+2
  6857  001AF0  C0AD  F07D         	movff	controlador@accionControl+3,?_calcPID+3
  6858  001AF4  C104  F07E         	movff	controlador@dt,?_calcPID+4
  6859  001AF8  C105  F07F         	movff	controlador@dt+1,?_calcPID+5
  6860  001AFC  C106  F080         	movff	controlador@dt+2,?_calcPID+6
  6861  001B00  C107  F081         	movff	controlador@dt+3,?_calcPID+7
  6862  001B04  C0E5  F082         	movff	_Kp2,?_calcPID+8
  6863  001B08  C0E6  F083         	movff	_Kp2+1,?_calcPID+9
  6864  001B0C  C0E7  F084         	movff	_Kp2+2,?_calcPID+10
  6865  001B10  C0E8  F085         	movff	_Kp2+3,?_calcPID+11
  6866  001B14  C0BC  F086         	movff	_Ki2,?_calcPID+12
  6867  001B18  C0BD  F087         	movff	_Ki2+1,?_calcPID+13
  6868  001B1C  C0BE  F088         	movff	_Ki2+2,?_calcPID+14
  6869  001B20  C0BF  F089         	movff	_Ki2+3,?_calcPID+15
  6870  001B24  C0B4  F08A         	movff	_Kd2,?_calcPID+16
  6871  001B28  C0B5  F08B         	movff	_Kd2+1,?_calcPID+17
  6872  001B2C  C0B6  F08C         	movff	_Kd2+2,?_calcPID+18
  6873  001B30  C0B7  F08D         	movff	_Kd2+3,?_calcPID+19
  6874  001B34  0E00               	movlw	high controlador@lastError2
  6875  001B36  0100               	movlb	0	; () banked
  6876  001B38  0100               	movlb	0	; () banked
  6877  001B3A  6F8F               	movwf	(?_calcPID+21)& (0+255),b
  6878  001B3C  0E35               	movlw	low controlador@lastError2
  6879  001B3E  0100               	movlb	0	; () banked
  6880  001B40  6F8E               	movwf	(?_calcPID+20)& (0+255),b
  6881  001B42  0E00               	movlw	high _iError2
  6882  001B44  0100               	movlb	0	; () banked
  6883  001B46  0100               	movlb	0	; () banked
  6884  001B48  6F91               	movwf	(?_calcPID+23)& (0+255),b
  6885  001B4A  0E2D               	movlw	low _iError2
  6886  001B4C  0100               	movlb	0	; () banked
  6887  001B4E  6F90               	movwf	(?_calcPID+22)& (0+255),b
  6888  001B50  EC85  F00A         	call	_calcPID	;wreg free
  6889  001B54  C07D  F0AD         	movff	?_calcPID+3,controlador@accionControl+3
  6890  001B58  C07C  F0AC         	movff	?_calcPID+2,controlador@accionControl+2
  6891  001B5C  C07B  F0AB         	movff	?_calcPID+1,controlador@accionControl+1
  6892  001B60  C07A  F0AA         	movff	?_calcPID,controlador@accionControl
  6893                           
  6894                           ;MyControl.c: 78: accionControl /= 1000000;
  6895  001B64  C0AA  F060         	movff	controlador@accionControl,?___aldiv
  6896  001B68  C0AB  F061         	movff	controlador@accionControl+1,?___aldiv+1
  6897  001B6C  C0AC  F062         	movff	controlador@accionControl+2,?___aldiv+2
  6898  001B70  C0AD  F063         	movff	controlador@accionControl+3,?___aldiv+3
  6899  001B74  0E40               	movlw	64
  6900  001B76  0100               	movlb	0	; () banked
  6901  001B78  0100               	movlb	0	; () banked
  6902  001B7A  6F64               	movwf	(?___aldiv+4)& (0+255),b
  6903  001B7C  0E42               	movlw	66
  6904  001B7E  0100               	movlb	0	; () banked
  6905  001B80  6F65               	movwf	(?___aldiv+5)& (0+255),b
  6906  001B82  0E0F               	movlw	15
  6907  001B84  0100               	movlb	0	; () banked
  6908  001B86  6F66               	movwf	(?___aldiv+6)& (0+255),b
  6909  001B88  0E00               	movlw	0
  6910  001B8A  0100               	movlb	0	; () banked
  6911  001B8C  6F67               	movwf	(?___aldiv+7)& (0+255),b
  6912  001B8E  EC1F  F00E         	call	___aldiv	;wreg free
  6913  001B92  C063  F0AD         	movff	?___aldiv+3,controlador@accionControl+3
  6914  001B96  C062  F0AC         	movff	?___aldiv+2,controlador@accionControl+2
  6915  001B9A  C061  F0AB         	movff	?___aldiv+1,controlador@accionControl+1
  6916  001B9E  C060  F0AA         	movff	?___aldiv,controlador@accionControl
  6917                           
  6918                           ;MyControl.c: 80: if (accionControl > 0) {
  6919  001BA2  0100               	movlb	0	; () banked
  6920  001BA4  0100               	movlb	0	; () banked
  6921  001BA6  51AD               	movf	(controlador@accionControl+3)& (0+255),w,b
  6922  001BA8  0A80               	xorlw	128
  6923  001BAA  0F80               	addlw	128
  6924  001BAC  E10B               	bnz	u2065
  6925  001BAE  0E00               	movlw	0
  6926  001BB0  0100               	movlb	0	; () banked
  6927  001BB2  5DAC               	subwf	(controlador@accionControl+2)& (0+255),w,b
  6928  001BB4  E107               	bnz	u2065
  6929  001BB6  0E00               	movlw	0
  6930  001BB8  0100               	movlb	0	; () banked
  6931  001BBA  5DAB               	subwf	(controlador@accionControl+1)& (0+255),w,b
  6932  001BBC  E103               	bnz	u2065
  6933  001BBE  0E01               	movlw	1
  6934  001BC0  0100               	movlb	0	; () banked
  6935  001BC2  5DAA               	subwf	controlador@accionControl& (0+255),w,b
  6936  001BC4                     u2065:
  6937  001BC4  A0D8               	btfss	status,0,c
  6938  001BC6  D006               	goto	l41
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;MyControl.c: 81: *dirGiro = 1;
  6942  001BC8  C116  FFD9         	movff	controlador@dirGiro,fsr2l
  6943  001BCC  C117  FFDA         	movff	controlador@dirGiro+1,fsr2h
  6944  001BD0  0E01               	movlw	1
  6945  001BD2  D00F               	goto	L10
  6946  001BD4                     l41:
  6947                           
  6948                           ; BSR set to: 0
  6949  001BD4  0100               	movlb	0	; () banked
  6950  001BD6  0100               	movlb	0	; () banked
  6951  001BD8  AFAD               	btfss	(controlador@accionControl+3)& (0+255),7,b
  6952  001BDA  D006               	goto	l3278
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;MyControl.c: 83: *dirGiro = 2;
  6956  001BDC  C116  FFD9         	movff	controlador@dirGiro,fsr2l
  6957  001BE0  C117  FFDA         	movff	controlador@dirGiro+1,fsr2h
  6958  001BE4  0E02               	movlw	2
  6959  001BE6  D005               	goto	L10
  6960  001BE8                     l3278:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;MyControl.c: 85: *dirGiro = 0;
  6964  001BE8  C116  FFD9         	movff	controlador@dirGiro,fsr2l
  6965  001BEC  C117  FFDA         	movff	controlador@dirGiro+1,fsr2h
  6966  001BF0  0E00               	movlw	0
  6967  001BF2                     L10:
  6968  001BF2  6EDF               	movwf	indf2,c
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;MyControl.c: 86: }
  6972                           ;MyControl.c: 88: *dutyPWM = (uint32_t) labs(accionControl);
  6973                           
  6974                           ; BSR set to: 0
  6975                           
  6976                           ; BSR set to: 0
  6977  001BF4  C0AA  F060         	movff	controlador@accionControl,?_labs
  6978  001BF8  C0AB  F061         	movff	controlador@accionControl+1,?_labs+1
  6979  001BFC  C0AC  F062         	movff	controlador@accionControl+2,?_labs+2
  6980  001C00  C0AD  F063         	movff	controlador@accionControl+3,?_labs+3
  6981  001C04  EC8F  F015         	call	_labs	;wreg free
  6982  001C08  C114  FFD9         	movff	controlador@dutyPWM,fsr2l
  6983  001C0C  C115  FFDA         	movff	controlador@dutyPWM+1,fsr2h
  6984  001C10  0100               	movlb	0	; () banked
  6985  001C12  C060  FFDE         	movff	?_labs,postinc2
  6986  001C16  0100               	movlb	0	; () banked
  6987  001C18  C061  FFDE         	movff	?_labs+1,postinc2
  6988  001C1C  0100               	movlb	0	; () banked
  6989  001C1E  C062  FFDE         	movff	?_labs+2,postinc2
  6990  001C22  0100               	movlb	0	; () banked
  6991  001C24  C063  FFDD         	movff	?_labs+3,postdec2
  6992  001C28  06D9               	decf	fsr2l,f,c
  6993  001C2A  06D9               	decf	fsr2l,f,c
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;MyControl.c: 89: return accionControl;
  6997  001C2C  C0AA  F100         	movff	controlador@accionControl,?_controlador
  6998  001C30  C0AB  F101         	movff	controlador@accionControl+1,?_controlador+1
  6999  001C34  C0AC  F102         	movff	controlador@accionControl+2,?_controlador+2
  7000  001C38  C0AD  F103         	movff	controlador@accionControl+3,?_controlador+3
  7001                           
  7002                           ; BSR set to: 0
  7003                           
  7004                           ; BSR set to: 0
  7005  001C3C  0012               	return	
  7006  001C3E                     __end_of_controlador:
  7007                           	opt stack 0
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           intcon2	equ	0xFF1
  7016                           indf0	equ	0xFEF
  7017                           postinc0	equ	0xFEE
  7018                           fsr0h	equ	0xFEA
  7019                           fsr0l	equ	0xFE9
  7020                           wreg	equ	0xFE8
  7021                           indf1	equ	0xFE7
  7022                           postdec1	equ	0xFE5
  7023                           fsr1h	equ	0xFE2
  7024                           fsr1l	equ	0xFE1
  7025                           indf2	equ	0xFDF
  7026                           postinc2	equ	0xFDE
  7027                           postdec2	equ	0xFDD
  7028                           fsr2h	equ	0xFDA
  7029                           fsr2l	equ	0xFD9
  7030                           status	equ	0xFD8
  7031                           
  7032 ;; *************** function ___aldiv *****************
  7033 ;; Defined at:
  7034 ;;		line 10 in file "/opt/microchip/xc8/v1.21/sources/common/aldiv.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  dividend        4    0[BANK0 ] long 
  7037 ;;  divisor         4    4[BANK0 ] long 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  quotient        4   11[BANK0 ] long 
  7040 ;;  sign            1   10[BANK0 ] unsigned char 
  7041 ;;  counter         1    9[BANK0 ] unsigned char 
  7042 ;; Return value:  Size  Location     Type
  7043 ;;                  4    0[BANK0 ] long 
  7044 ;; Registers used:
  7045 ;;		wreg, status,2, status,0
  7046 ;; Tracked objects:
  7047 ;;		On entry : 0/0
  7048 ;;		On exit  : 0/0
  7049 ;;		Unchanged: 0/0
  7050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7051 ;;      Params:         0       8       0       0       0       0       0       0       0
  7052 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7053 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7054 ;;      Totals:         0      15       0       0       0       0       0       0       0
  7055 ;;Total ram usage:       15 bytes
  7056 ;; Hardware stack levels used:    1
  7057 ;; Hardware stack levels required when called:    3
  7058 ;; This function calls:
  7059 ;;		Nothing
  7060 ;; This function is called by:
  7061 ;;		_controlador
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text28
  7066  001C3E                     __ptext28:
  7067                           	opt stack 0
  7068  001C3E                     ___aldiv:
  7069                           	opt stack 26
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;incstack = 0
  7073                           ;incstack = 0
  7074  001C3E  0100               	movlb	0	; () banked
  7075  001C40  6F68               	movwf	??___aldiv& (0+255),b
  7076  001C42  0E00               	movlw	0
  7077  001C44  0100               	movlb	0	; () banked
  7078  001C46  0100               	movlb	0	; () banked
  7079  001C48  6F6A               	movwf	___aldiv@sign& (0+255),b
  7080  001C4A  0100               	movlb	0	; () banked
  7081  001C4C  5168               	movf	??___aldiv& (0+255),w,b
  7082                           
  7083                           ; BSR set to: 0
  7084  001C4E  0100               	movlb	0	; () banked
  7085  001C50  0100               	movlb	0	; () banked
  7086  001C52  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7087  001C54  D018               	goto	l3856
  7088                           
  7089                           ; BSR set to: 0
  7090  001C56  0100               	movlb	0	; () banked
  7091  001C58  0100               	movlb	0	; () banked
  7092  001C5A  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7093  001C5C  0100               	movlb	0	; () banked
  7094  001C5E  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7095  001C60  0100               	movlb	0	; () banked
  7096  001C62  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7097  001C64  0100               	movlb	0	; () banked
  7098  001C66  6D64               	negf	___aldiv@divisor& (0+255),b
  7099  001C68  0E00               	movlw	0
  7100  001C6A  0100               	movlb	0	; () banked
  7101  001C6C  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7102  001C6E  0100               	movlb	0	; () banked
  7103  001C70  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7104  001C72  0100               	movlb	0	; () banked
  7105  001C74  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7106                           
  7107                           ; BSR set to: 0
  7108  001C76  0100               	movlb	0	; () banked
  7109  001C78  6F68               	movwf	??___aldiv& (0+255),b
  7110  001C7A  0E01               	movlw	1
  7111  001C7C  0100               	movlb	0	; () banked
  7112  001C7E  0100               	movlb	0	; () banked
  7113  001C80  6F6A               	movwf	___aldiv@sign& (0+255),b
  7114  001C82  0100               	movlb	0	; () banked
  7115  001C84  5168               	movf	??___aldiv& (0+255),w,b
  7116  001C86                     l3856:
  7117                           
  7118                           ; BSR set to: 0
  7119  001C86  0100               	movlb	0	; () banked
  7120  001C88  0100               	movlb	0	; () banked
  7121  001C8A  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7122  001C8C  D014               	goto	l3862
  7123                           
  7124                           ; BSR set to: 0
  7125  001C8E  0100               	movlb	0	; () banked
  7126  001C90  0100               	movlb	0	; () banked
  7127  001C92  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7128  001C94  0100               	movlb	0	; () banked
  7129  001C96  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7130  001C98  0100               	movlb	0	; () banked
  7131  001C9A  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7132  001C9C  0100               	movlb	0	; () banked
  7133  001C9E  6D60               	negf	___aldiv@dividend& (0+255),b
  7134  001CA0  0E00               	movlw	0
  7135  001CA2  0100               	movlb	0	; () banked
  7136  001CA4  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7137  001CA6  0100               	movlb	0	; () banked
  7138  001CA8  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7139  001CAA  0100               	movlb	0	; () banked
  7140  001CAC  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7141                           
  7142                           ; BSR set to: 0
  7143  001CAE  0E01               	movlw	1
  7144  001CB0  0100               	movlb	0	; () banked
  7145  001CB2  0100               	movlb	0	; () banked
  7146  001CB4  1B6A               	xorwf	___aldiv@sign& (0+255),f,b
  7147  001CB6                     l3862:
  7148                           
  7149                           ; BSR set to: 0
  7150  001CB6  0E00               	movlw	0
  7151  001CB8  0100               	movlb	0	; () banked
  7152  001CBA  0100               	movlb	0	; () banked
  7153  001CBC  6F6B               	movwf	___aldiv@quotient& (0+255),b
  7154  001CBE  0E00               	movlw	0
  7155  001CC0  0100               	movlb	0	; () banked
  7156  001CC2  6F6C               	movwf	(___aldiv@quotient+1)& (0+255),b
  7157  001CC4  0E00               	movlw	0
  7158  001CC6  0100               	movlb	0	; () banked
  7159  001CC8  6F6D               	movwf	(___aldiv@quotient+2)& (0+255),b
  7160  001CCA  0E00               	movlw	0
  7161  001CCC  0100               	movlb	0	; () banked
  7162  001CCE  6F6E               	movwf	(___aldiv@quotient+3)& (0+255),b
  7163                           
  7164                           ; BSR set to: 0
  7165  001CD0  0100               	movlb	0	; () banked
  7166  001CD2  0100               	movlb	0	; () banked
  7167  001CD4  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7168  001CD6  1164               	iorwf	___aldiv@divisor& (0+255),w,b
  7169  001CD8  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7170  001CDA  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7171  001CDC  B4D8               	btfsc	status,2,c
  7172  001CDE  D067               	goto	l3884
  7173                           
  7174                           ; BSR set to: 0
  7175  001CE0  0100               	movlb	0	; () banked
  7176  001CE2  6F68               	movwf	??___aldiv& (0+255),b
  7177  001CE4  0E01               	movlw	1
  7178  001CE6  0100               	movlb	0	; () banked
  7179  001CE8  0100               	movlb	0	; () banked
  7180  001CEA  6F69               	movwf	___aldiv@counter& (0+255),b
  7181  001CEC  0100               	movlb	0	; () banked
  7182  001CEE  5168               	movf	??___aldiv& (0+255),w,b
  7183  001CF0  D00D               	goto	l3870
  7184  001CF2                     l3868:
  7185                           
  7186                           ; BSR set to: 0
  7187  001CF2  0100               	movlb	0	; () banked
  7188  001CF4  90D8               	bcf	status,0,c
  7189  001CF6  0100               	movlb	0	; () banked
  7190  001CF8  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  7191  001CFA  0100               	movlb	0	; () banked
  7192  001CFC  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7193  001CFE  0100               	movlb	0	; () banked
  7194  001D00  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7195  001D02  0100               	movlb	0	; () banked
  7196  001D04  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7197  001D06  0100               	movlb	0	; () banked
  7198  001D08  0100               	movlb	0	; () banked
  7199  001D0A  2B69               	incf	___aldiv@counter& (0+255),f,b
  7200  001D0C                     l3870:
  7201                           
  7202                           ; BSR set to: 0
  7203  001D0C  0100               	movlb	0	; () banked
  7204  001D0E  0100               	movlb	0	; () banked
  7205  001D10  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7206  001D12  D7EF               	goto	l3868
  7207  001D14                     l3872:
  7208                           
  7209                           ; BSR set to: 0
  7210  001D14  0100               	movlb	0	; () banked
  7211  001D16  90D8               	bcf	status,0,c
  7212  001D18  0100               	movlb	0	; () banked
  7213  001D1A  376B               	rlcf	___aldiv@quotient& (0+255),f,b
  7214  001D1C  0100               	movlb	0	; () banked
  7215  001D1E  376C               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7216  001D20  0100               	movlb	0	; () banked
  7217  001D22  376D               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7218  001D24  0100               	movlb	0	; () banked
  7219  001D26  376E               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7220                           
  7221                           ; BSR set to: 0
  7222  001D28  0100               	movlb	0	; () banked
  7223  001D2A  0100               	movlb	0	; () banked
  7224  001D2C  5164               	movf	___aldiv@divisor& (0+255),w,b
  7225  001D2E  0100               	movlb	0	; () banked
  7226  001D30  0100               	movlb	0	; () banked
  7227  001D32  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  7228  001D34  0100               	movlb	0	; () banked
  7229  001D36  0100               	movlb	0	; () banked
  7230  001D38  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7231  001D3A  0100               	movlb	0	; () banked
  7232  001D3C  0100               	movlb	0	; () banked
  7233  001D3E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7234  001D40  0100               	movlb	0	; () banked
  7235  001D42  0100               	movlb	0	; () banked
  7236  001D44  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7237  001D46  0100               	movlb	0	; () banked
  7238  001D48  0100               	movlb	0	; () banked
  7239  001D4A  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7240  001D4C  0100               	movlb	0	; () banked
  7241  001D4E  0100               	movlb	0	; () banked
  7242  001D50  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7243  001D52  0100               	movlb	0	; () banked
  7244  001D54  0100               	movlb	0	; () banked
  7245  001D56  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7246  001D58  A0D8               	btfss	status,0,c
  7247  001D5A  D01B               	goto	l3880
  7248                           
  7249                           ; BSR set to: 0
  7250  001D5C  0100               	movlb	0	; () banked
  7251  001D5E  0100               	movlb	0	; () banked
  7252  001D60  5164               	movf	___aldiv@divisor& (0+255),w,b
  7253  001D62  0100               	movlb	0	; () banked
  7254  001D64  0100               	movlb	0	; () banked
  7255  001D66  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  7256  001D68  0100               	movlb	0	; () banked
  7257  001D6A  0100               	movlb	0	; () banked
  7258  001D6C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7259  001D6E  0100               	movlb	0	; () banked
  7260  001D70  0100               	movlb	0	; () banked
  7261  001D72  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7262  001D74  0100               	movlb	0	; () banked
  7263  001D76  0100               	movlb	0	; () banked
  7264  001D78  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7265  001D7A  0100               	movlb	0	; () banked
  7266  001D7C  0100               	movlb	0	; () banked
  7267  001D7E  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7268  001D80  0100               	movlb	0	; () banked
  7269  001D82  0100               	movlb	0	; () banked
  7270  001D84  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7271  001D86  0100               	movlb	0	; () banked
  7272  001D88  0100               	movlb	0	; () banked
  7273  001D8A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7274                           
  7275                           ; BSR set to: 0
  7276  001D8C  0100               	movlb	0	; () banked
  7277  001D8E  0100               	movlb	0	; () banked
  7278  001D90  816B               	bsf	___aldiv@quotient& (0+255),0,b
  7279  001D92                     l3880:
  7280                           
  7281                           ; BSR set to: 0
  7282  001D92  0100               	movlb	0	; () banked
  7283  001D94  90D8               	bcf	status,0,c
  7284  001D96  0100               	movlb	0	; () banked
  7285  001D98  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7286  001D9A  0100               	movlb	0	; () banked
  7287  001D9C  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7288  001D9E  0100               	movlb	0	; () banked
  7289  001DA0  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7290  001DA2  0100               	movlb	0	; () banked
  7291  001DA4  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  7292                           
  7293                           ; BSR set to: 0
  7294  001DA6  0100               	movlb	0	; () banked
  7295  001DA8  0100               	movlb	0	; () banked
  7296  001DAA  2F69               	decfsz	___aldiv@counter& (0+255),f,b
  7297  001DAC  D7B3               	goto	l3872
  7298  001DAE                     l3884:
  7299                           
  7300                           ; BSR set to: 0
  7301  001DAE  0100               	movlb	0	; () banked
  7302  001DB0  0100               	movlb	0	; () banked
  7303  001DB2  516A               	movf	___aldiv@sign& (0+255),w,b
  7304  001DB4  B4D8               	btfsc	status,2,c
  7305  001DB6  D010               	goto	l3888
  7306                           
  7307                           ; BSR set to: 0
  7308  001DB8  0100               	movlb	0	; () banked
  7309  001DBA  0100               	movlb	0	; () banked
  7310  001DBC  1F6E               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7311  001DBE  0100               	movlb	0	; () banked
  7312  001DC0  1F6D               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7313  001DC2  0100               	movlb	0	; () banked
  7314  001DC4  1F6C               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7315  001DC6  0100               	movlb	0	; () banked
  7316  001DC8  6D6B               	negf	___aldiv@quotient& (0+255),b
  7317  001DCA  0E00               	movlw	0
  7318  001DCC  0100               	movlb	0	; () banked
  7319  001DCE  236C               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7320  001DD0  0100               	movlb	0	; () banked
  7321  001DD2  236D               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7322  001DD4  0100               	movlb	0	; () banked
  7323  001DD6  236E               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7324  001DD8                     l3888:
  7325                           
  7326                           ; BSR set to: 0
  7327  001DD8  C06B  F060         	movff	___aldiv@quotient,?___aldiv
  7328  001DDC  C06C  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  7329  001DE0  C06D  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  7330  001DE4  C06E  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  7331                           
  7332                           ; BSR set to: 0
  7333                           
  7334                           ; BSR set to: 0
  7335  001DE8  0012               	return	
  7336  001DEA                     __end_of___aldiv:
  7337                           	opt stack 0
  7338                           tblptru	equ	0xFF8
  7339                           tblptrh	equ	0xFF7
  7340                           tblptrl	equ	0xFF6
  7341                           tablat	equ	0xFF5
  7342                           prodh	equ	0xFF4
  7343                           prodl	equ	0xFF3
  7344                           intcon	equ	0xFF2
  7345                           intcon2	equ	0xFF1
  7346                           indf0	equ	0xFEF
  7347                           postinc0	equ	0xFEE
  7348                           fsr0h	equ	0xFEA
  7349                           fsr0l	equ	0xFE9
  7350                           wreg	equ	0xFE8
  7351                           indf1	equ	0xFE7
  7352                           postdec1	equ	0xFE5
  7353                           fsr1h	equ	0xFE2
  7354                           fsr1l	equ	0xFE1
  7355                           indf2	equ	0xFDF
  7356                           postinc2	equ	0xFDE
  7357                           postdec2	equ	0xFDD
  7358                           fsr2h	equ	0xFDA
  7359                           fsr2l	equ	0xFD9
  7360                           status	equ	0xFD8
  7361                           
  7362 ;; *************** function _labs *****************
  7363 ;; Defined at:
  7364 ;;		line 5 in file "/opt/microchip/xc8/v1.21/sources/common/labs.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  l               4    0[BANK0 ] long 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  4    0[BANK0 ] long 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7378 ;;      Params:         0       4       0       0       0       0       0       0       0
  7379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7380 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7381 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7382 ;;Total ram usage:        8 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    3
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_calcPID
  7389 ;;		_controlador
  7390 ;;		_parserRx
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text29
  7395  002B1E                     __ptext29:
  7396                           	opt stack 0
  7397  002B1E                     _labs:
  7398                           	opt stack 26
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;incstack = 0
  7402                           ;incstack = 0
  7403  002B1E  0100               	movlb	0	; () banked
  7404  002B20  0100               	movlb	0	; () banked
  7405  002B22  AF63               	btfss	(labs@l+3)& (0+255),7,b
  7406  002B24  D01F               	goto	l895
  7407                           
  7408                           ; BSR set to: 0
  7409  002B26  0100               	movlb	0	; () banked
  7410  002B28  C060  F064         	movff	labs@l,??_labs
  7411  002B2C  0100               	movlb	0	; () banked
  7412  002B2E  C061  F065         	movff	labs@l+1,??_labs+1
  7413  002B32  0100               	movlb	0	; () banked
  7414  002B34  C062  F066         	movff	labs@l+2,??_labs+2
  7415  002B38  0100               	movlb	0	; () banked
  7416  002B3A  C063  F067         	movff	labs@l+3,??_labs+3
  7417  002B3E  0100               	movlb	0	; () banked
  7418  002B40  1F64               	comf	??_labs& (0+255),f,b
  7419  002B42  1F65               	comf	(??_labs+1)& (0+255),f,b
  7420  002B44  1F66               	comf	(??_labs+2)& (0+255),f,b
  7421  002B46  1F67               	comf	(??_labs+3)& (0+255),f,b
  7422  002B48  2B64               	incf	??_labs& (0+255),f,b
  7423  002B4A  0E00               	movlw	0
  7424  002B4C  2365               	addwfc	(??_labs+1)& (0+255),f,b
  7425  002B4E  2366               	addwfc	(??_labs+2)& (0+255),f,b
  7426  002B50  2367               	addwfc	(??_labs+3)& (0+255),f,b
  7427  002B52  C067  F063         	movff	??_labs+3,?_labs+3
  7428  002B56  C066  F062         	movff	??_labs+2,?_labs+2
  7429  002B5A  C065  F061         	movff	??_labs+1,?_labs+1
  7430  002B5E  C064  F060         	movff	??_labs,?_labs
  7431  002B62  D008               	goto	l896
  7432  002B64                     l895:
  7433                           
  7434                           ; BSR set to: 0
  7435  002B64  C060  F060         	movff	labs@l,?_labs
  7436  002B68  C061  F061         	movff	labs@l+1,?_labs+1
  7437  002B6C  C062  F062         	movff	labs@l+2,?_labs+2
  7438  002B70  C063  F063         	movff	labs@l+3,?_labs+3
  7439  002B74                     l896:
  7440                           
  7441                           ; BSR set to: 0
  7442  002B74  0012               	return	
  7443  002B76                     __end_of_labs:
  7444                           	opt stack 0
  7445                           tblptru	equ	0xFF8
  7446                           tblptrh	equ	0xFF7
  7447                           tblptrl	equ	0xFF6
  7448                           tablat	equ	0xFF5
  7449                           prodh	equ	0xFF4
  7450                           prodl	equ	0xFF3
  7451                           intcon	equ	0xFF2
  7452                           intcon2	equ	0xFF1
  7453                           indf0	equ	0xFEF
  7454                           postinc0	equ	0xFEE
  7455                           fsr0h	equ	0xFEA
  7456                           fsr0l	equ	0xFE9
  7457                           wreg	equ	0xFE8
  7458                           indf1	equ	0xFE7
  7459                           postdec1	equ	0xFE5
  7460                           fsr1h	equ	0xFE2
  7461                           fsr1l	equ	0xFE1
  7462                           indf2	equ	0xFDF
  7463                           postinc2	equ	0xFDE
  7464                           postdec2	equ	0xFDD
  7465                           fsr2h	equ	0xFDA
  7466                           fsr2l	equ	0xFD9
  7467                           status	equ	0xFD8
  7468                           
  7469 ;; *************** function _calcPID *****************
  7470 ;; Defined at:
  7471 ;;		line 21 in file "MyControl.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  error           4   26[BANK0 ] long 
  7474 ;;  dt              4   30[BANK0 ] unsigned long 
  7475 ;;  Kp              4   34[BANK0 ] unsigned long 
  7476 ;;  Ki              4   38[BANK0 ] unsigned long 
  7477 ;;  Kd              4   42[BANK0 ] unsigned long 
  7478 ;;  lastErrorPtr    2   46[BANK0 ] PTR long 
  7479 ;;		 -> controlador@lastError2(4), controlador@lastError1(4), 
  7480 ;;  iErrorPtr       2   48[BANK0 ] PTR long 
  7481 ;;		 -> iError2(4), iError1(4), 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  omega           4   70[BANK0 ] long 
  7484 ;;  dError          4   66[BANK0 ] long 
  7485 ;;  output          4   62[BANK0 ] long 
  7486 ;;  epsilon         4   58[BANK0 ] long 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  4   26[BANK0 ] long 
  7489 ;; Registers used:
  7490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7496 ;;      Params:         0      24       0       0       0       0       0       0       0
  7497 ;;      Locals:         0      16       0       0       0       0       0       0       0
  7498 ;;      Temps:          0       8       0       0       0       0       0       0       0
  7499 ;;      Totals:         0      48       0       0       0       0       0       0       0
  7500 ;;Total ram usage:       48 bytes
  7501 ;; Hardware stack levels used:    1
  7502 ;; Hardware stack levels required when called:    4
  7503 ;; This function calls:
  7504 ;;		_labs
  7505 ;;		___lmul
  7506 ;;		___lldiv
  7507 ;; This function is called by:
  7508 ;;		_controlador
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text30
  7513  00150A                     __ptext30:
  7514                           	opt stack 0
  7515  00150A                     _calcPID:
  7516                           	opt stack 25
  7517                           
  7518                           ;MyControl.c: 23: int32_t output;
  7519                           ;MyControl.c: 24: int32_t dError;
  7520                           ;MyControl.c: 25: int32_t epsilon = 10000;
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;incstack = 0
  7524                           ;incstack = 0
  7525  00150A  0E10               	movlw	16
  7526  00150C  0100               	movlb	0	; () banked
  7527  00150E  0100               	movlb	0	; () banked
  7528  001510  6F9A               	movwf	calcPID@epsilon& (0+255),b
  7529  001512  0E27               	movlw	39
  7530  001514  0100               	movlb	0	; () banked
  7531  001516  6F9B               	movwf	(calcPID@epsilon+1)& (0+255),b
  7532  001518  0E00               	movlw	0
  7533  00151A  0100               	movlb	0	; () banked
  7534  00151C  6F9C               	movwf	(calcPID@epsilon+2)& (0+255),b
  7535  00151E  0E00               	movlw	0
  7536  001520  0100               	movlb	0	; () banked
  7537  001522  6F9D               	movwf	(calcPID@epsilon+3)& (0+255),b
  7538                           
  7539                           ;MyControl.c: 26: int32_t omega = 200000;
  7540  001524  0E40               	movlw	64
  7541  001526  0100               	movlb	0	; () banked
  7542  001528  0100               	movlb	0	; () banked
  7543  00152A  6FA6               	movwf	calcPID@omega& (0+255),b
  7544  00152C  0E0D               	movlw	13
  7545  00152E  0100               	movlb	0	; () banked
  7546  001530  6FA7               	movwf	(calcPID@omega+1)& (0+255),b
  7547  001532  0E03               	movlw	3
  7548  001534  0100               	movlb	0	; () banked
  7549  001536  6FA8               	movwf	(calcPID@omega+2)& (0+255),b
  7550  001538  0E00               	movlw	0
  7551  00153A  0100               	movlb	0	; () banked
  7552  00153C  6FA9               	movwf	(calcPID@omega+3)& (0+255),b
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;MyControl.c: 29: dError = (error - (*lastErrorPtr));
  7556  00153E  C08E  FFD9         	movff	calcPID@lastErrorPtr,fsr2l
  7557  001542  C08F  FFDA         	movff	calcPID@lastErrorPtr+1,fsr2h
  7558  001546  CFDE F092          	movff	postinc2,??_calcPID
  7559  00154A  CFDE F093          	movff	postinc2,??_calcPID+1
  7560  00154E  CFDE F094          	movff	postinc2,??_calcPID+2
  7561  001552  CFDE F095          	movff	postinc2,??_calcPID+3
  7562  001556  0100               	movlb	0	; () banked
  7563  001558  1F92               	comf	??_calcPID& (0+255),f,b
  7564  00155A  1F93               	comf	(??_calcPID+1)& (0+255),f,b
  7565  00155C  1F94               	comf	(??_calcPID+2)& (0+255),f,b
  7566  00155E  1F95               	comf	(??_calcPID+3)& (0+255),f,b
  7567  001560  2B92               	incf	??_calcPID& (0+255),f,b
  7568  001562  0E00               	movlw	0
  7569  001564  2393               	addwfc	(??_calcPID+1)& (0+255),f,b
  7570  001566  2394               	addwfc	(??_calcPID+2)& (0+255),f,b
  7571  001568  2395               	addwfc	(??_calcPID+3)& (0+255),f,b
  7572  00156A  0100               	movlb	0	; () banked
  7573  00156C  0100               	movlb	0	; () banked
  7574  00156E  517A               	movf	calcPID@error& (0+255),w,b
  7575  001570  0100               	movlb	0	; () banked
  7576  001572  2592               	addwf	??_calcPID& (0+255),w,b
  7577  001574  0100               	movlb	0	; () banked
  7578  001576  0100               	movlb	0	; () banked
  7579  001578  6FA2               	movwf	calcPID@dError& (0+255),b
  7580  00157A  0100               	movlb	0	; () banked
  7581  00157C  0100               	movlb	0	; () banked
  7582  00157E  517B               	movf	(calcPID@error+1)& (0+255),w,b
  7583  001580  0100               	movlb	0	; () banked
  7584  001582  2193               	addwfc	(??_calcPID+1)& (0+255),w,b
  7585  001584  0100               	movlb	0	; () banked
  7586  001586  6FA3               	movwf	(calcPID@dError+1)& (0+255),b
  7587  001588  0100               	movlb	0	; () banked
  7588  00158A  0100               	movlb	0	; () banked
  7589  00158C  517C               	movf	(calcPID@error+2)& (0+255),w,b
  7590  00158E  0100               	movlb	0	; () banked
  7591  001590  2194               	addwfc	(??_calcPID+2)& (0+255),w,b
  7592  001592  0100               	movlb	0	; () banked
  7593  001594  6FA4               	movwf	(calcPID@dError+2)& (0+255),b
  7594  001596  0100               	movlb	0	; () banked
  7595  001598  0100               	movlb	0	; () banked
  7596  00159A  517D               	movf	(calcPID@error+3)& (0+255),w,b
  7597  00159C  0100               	movlb	0	; () banked
  7598  00159E  2195               	addwfc	(??_calcPID+3)& (0+255),w,b
  7599  0015A0  0100               	movlb	0	; () banked
  7600  0015A2  6FA5               	movwf	(calcPID@dError+3)& (0+255),b
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;MyControl.c: 31: if ( (labs(error) > omega) ) {
  7604  0015A4  C07A  F060         	movff	calcPID@error,?_labs
  7605  0015A8  C07B  F061         	movff	calcPID@error+1,?_labs+1
  7606  0015AC  C07C  F062         	movff	calcPID@error+2,?_labs+2
  7607  0015B0  C07D  F063         	movff	calcPID@error+3,?_labs+3
  7608  0015B4  EC8F  F015         	call	_labs	;wreg free
  7609  0015B8  0100               	movlb	0	; () banked
  7610  0015BA  0100               	movlb	0	; () banked
  7611  0015BC  51A9               	movf	(calcPID@omega+3)& (0+255),w,b
  7612  0015BE  0A80               	xorlw	128
  7613  0015C0  0100               	movlb	0	; () banked
  7614  0015C2  6F92               	movwf	??_calcPID& (0+255),b
  7615  0015C4  0100               	movlb	0	; () banked
  7616  0015C6  0100               	movlb	0	; () banked
  7617  0015C8  5160               	movf	?_labs& (0+255),w,b
  7618  0015CA  0100               	movlb	0	; () banked
  7619  0015CC  0100               	movlb	0	; () banked
  7620  0015CE  5DA6               	subwf	calcPID@omega& (0+255),w,b
  7621  0015D0  0100               	movlb	0	; () banked
  7622  0015D2  0100               	movlb	0	; () banked
  7623  0015D4  5161               	movf	(?_labs+1)& (0+255),w,b
  7624  0015D6  0100               	movlb	0	; () banked
  7625  0015D8  0100               	movlb	0	; () banked
  7626  0015DA  59A7               	subwfb	(calcPID@omega+1)& (0+255),w,b
  7627  0015DC  0100               	movlb	0	; () banked
  7628  0015DE  0100               	movlb	0	; () banked
  7629  0015E0  5162               	movf	(?_labs+2)& (0+255),w,b
  7630  0015E2  0100               	movlb	0	; () banked
  7631  0015E4  0100               	movlb	0	; () banked
  7632  0015E6  59A8               	subwfb	(calcPID@omega+2)& (0+255),w,b
  7633  0015E8  0100               	movlb	0	; () banked
  7634  0015EA  0100               	movlb	0	; () banked
  7635  0015EC  5163               	movf	(?_labs+3)& (0+255),w,b
  7636  0015EE  0A80               	xorlw	128
  7637  0015F0  0100               	movlb	0	; () banked
  7638  0015F2  5992               	subwfb	??_calcPID& (0+255),w,b
  7639  0015F4  B0D8               	btfsc	status,0,c
  7640  0015F6  D00F               	goto	l3252
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;MyControl.c: 32: *iErrorPtr =0;
  7644  0015F8  C090  FFD9         	movff	calcPID@iErrorPtr,fsr2l
  7645  0015FC  C091  FFDA         	movff	calcPID@iErrorPtr+1,fsr2h
  7646  001600  0E00               	movlw	0
  7647  001602  6EDE               	movwf	postinc2,c
  7648  001604  0E00               	movlw	0
  7649  001606  6EDE               	movwf	postinc2,c
  7650  001608  0E00               	movlw	0
  7651  00160A  6EDE               	movwf	postinc2,c
  7652  00160C  0E00               	movlw	0
  7653  00160E  6EDD               	movwf	postdec2,c
  7654  001610  52DD               	movf	postdec2,f,c
  7655  001612  52DD               	movf	postdec2,f,c
  7656                           
  7657                           ;MyControl.c: 33: }else{
  7658  001614  D048               	goto	l33
  7659  001616                     l3252:
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;MyControl.c: 34: *iErrorPtr = *iErrorPtr + (error * dt);
  7663  001616  C090  FFD9         	movff	calcPID@iErrorPtr,fsr2l
  7664  00161A  C091  FFDA         	movff	calcPID@iErrorPtr+1,fsr2h
  7665  00161E  CFDE F092          	movff	postinc2,??_calcPID
  7666  001622  CFDE F093          	movff	postinc2,??_calcPID+1
  7667  001626  CFDE F094          	movff	postinc2,??_calcPID+2
  7668  00162A  CFDE F095          	movff	postinc2,??_calcPID+3
  7669  00162E  C07A  F060         	movff	calcPID@error,?___lmul
  7670  001632  C07B  F061         	movff	calcPID@error+1,?___lmul+1
  7671  001636  C07C  F062         	movff	calcPID@error+2,?___lmul+2
  7672  00163A  C07D  F063         	movff	calcPID@error+3,?___lmul+3
  7673  00163E  C07E  F064         	movff	calcPID@dt,?___lmul+4
  7674  001642  C07F  F065         	movff	calcPID@dt+1,?___lmul+5
  7675  001646  C080  F066         	movff	calcPID@dt+2,?___lmul+6
  7676  00164A  C081  F067         	movff	calcPID@dt+3,?___lmul+7
  7677  00164E  EC72  F013         	call	___lmul	;wreg free
  7678  001652  0100               	movlb	0	; () banked
  7679  001654  5192               	movf	??_calcPID& (0+255),w,b
  7680  001656  0100               	movlb	0	; () banked
  7681  001658  0100               	movlb	0	; () banked
  7682  00165A  2560               	addwf	?___lmul& (0+255),w,b
  7683  00165C  0100               	movlb	0	; () banked
  7684  00165E  6F96               	movwf	(??_calcPID+4)& (0+255),b
  7685  001660  0100               	movlb	0	; () banked
  7686  001662  5193               	movf	(??_calcPID+1)& (0+255),w,b
  7687  001664  0100               	movlb	0	; () banked
  7688  001666  0100               	movlb	0	; () banked
  7689  001668  2161               	addwfc	(?___lmul+1)& (0+255),w,b
  7690  00166A  0100               	movlb	0	; () banked
  7691  00166C  6F97               	movwf	(??_calcPID+5)& (0+255),b
  7692  00166E  0100               	movlb	0	; () banked
  7693  001670  5194               	movf	(??_calcPID+2)& (0+255),w,b
  7694  001672  0100               	movlb	0	; () banked
  7695  001674  0100               	movlb	0	; () banked
  7696  001676  2162               	addwfc	(?___lmul+2)& (0+255),w,b
  7697  001678  0100               	movlb	0	; () banked
  7698  00167A  6F98               	movwf	(??_calcPID+6)& (0+255),b
  7699  00167C  0100               	movlb	0	; () banked
  7700  00167E  5195               	movf	(??_calcPID+3)& (0+255),w,b
  7701  001680  0100               	movlb	0	; () banked
  7702  001682  0100               	movlb	0	; () banked
  7703  001684  2163               	addwfc	(?___lmul+3)& (0+255),w,b
  7704  001686  0100               	movlb	0	; () banked
  7705  001688  6F99               	movwf	(??_calcPID+7)& (0+255),b
  7706  00168A  C090  FFD9         	movff	calcPID@iErrorPtr,fsr2l
  7707  00168E  C091  FFDA         	movff	calcPID@iErrorPtr+1,fsr2h
  7708  001692  C096  FFDE         	movff	??_calcPID+4,postinc2
  7709  001696  C097  FFDE         	movff	??_calcPID+5,postinc2
  7710  00169A  C098  FFDE         	movff	??_calcPID+6,postinc2
  7711  00169E  C099  FFDD         	movff	??_calcPID+7,postdec2
  7712  0016A2  06D9               	decf	fsr2l,f,c
  7713  0016A4  06D9               	decf	fsr2l,f,c
  7714  0016A6                     l33:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;MyControl.c: 35: }
  7718                           ;MyControl.c: 38: output = (Kp * error
  7719                           ;MyControl.c: 39: + Ki * (*iErrorPtr)
  7720                           ;MyControl.c: 40: + ((Kd * dError) / dt) );
  7721  0016A6  C07A  F060         	movff	calcPID@error,?___lmul
  7722  0016AA  C07B  F061         	movff	calcPID@error+1,?___lmul+1
  7723  0016AE  C07C  F062         	movff	calcPID@error+2,?___lmul+2
  7724  0016B2  C07D  F063         	movff	calcPID@error+3,?___lmul+3
  7725  0016B6  C082  F064         	movff	calcPID@Kp,?___lmul+4
  7726  0016BA  C083  F065         	movff	calcPID@Kp+1,?___lmul+5
  7727  0016BE  C084  F066         	movff	calcPID@Kp+2,?___lmul+6
  7728  0016C2  C085  F067         	movff	calcPID@Kp+3,?___lmul+7
  7729  0016C6  EC72  F013         	call	___lmul	;wreg free
  7730  0016CA  C060  F092         	movff	?___lmul,??_calcPID
  7731  0016CE  C061  F093         	movff	?___lmul+1,??_calcPID+1
  7732  0016D2  C062  F094         	movff	?___lmul+2,??_calcPID+2
  7733  0016D6  C063  F095         	movff	?___lmul+3,??_calcPID+3
  7734  0016DA  C090  FFD9         	movff	calcPID@iErrorPtr,fsr2l
  7735  0016DE  C091  FFDA         	movff	calcPID@iErrorPtr+1,fsr2h
  7736  0016E2  0100               	movlb	0	; () banked
  7737  0016E4  CFDE F060          	movff	postinc2,?___lmul
  7738  0016E8  0100               	movlb	0	; () banked
  7739  0016EA  CFDE F061          	movff	postinc2,?___lmul+1
  7740  0016EE  0100               	movlb	0	; () banked
  7741  0016F0  CFDE F062          	movff	postinc2,?___lmul+2
  7742  0016F4  0100               	movlb	0	; () banked
  7743  0016F6  CFDE F063          	movff	postinc2,?___lmul+3
  7744  0016FA  C086  F064         	movff	calcPID@Ki,?___lmul+4
  7745  0016FE  C087  F065         	movff	calcPID@Ki+1,?___lmul+5
  7746  001702  C088  F066         	movff	calcPID@Ki+2,?___lmul+6
  7747  001706  C089  F067         	movff	calcPID@Ki+3,?___lmul+7
  7748  00170A  EC72  F013         	call	___lmul	;wreg free
  7749  00170E  0100               	movlb	0	; () banked
  7750  001710  0100               	movlb	0	; () banked
  7751  001712  5160               	movf	?___lmul& (0+255),w,b
  7752  001714  0100               	movlb	0	; () banked
  7753  001716  2592               	addwf	??_calcPID& (0+255),w,b
  7754  001718  0100               	movlb	0	; () banked
  7755  00171A  6F96               	movwf	(??_calcPID+4)& (0+255),b
  7756  00171C  0100               	movlb	0	; () banked
  7757  00171E  0100               	movlb	0	; () banked
  7758  001720  5161               	movf	(?___lmul+1)& (0+255),w,b
  7759  001722  0100               	movlb	0	; () banked
  7760  001724  2193               	addwfc	(??_calcPID+1)& (0+255),w,b
  7761  001726  0100               	movlb	0	; () banked
  7762  001728  6F97               	movwf	(??_calcPID+5)& (0+255),b
  7763  00172A  0100               	movlb	0	; () banked
  7764  00172C  0100               	movlb	0	; () banked
  7765  00172E  5162               	movf	(?___lmul+2)& (0+255),w,b
  7766  001730  0100               	movlb	0	; () banked
  7767  001732  2194               	addwfc	(??_calcPID+2)& (0+255),w,b
  7768  001734  0100               	movlb	0	; () banked
  7769  001736  6F98               	movwf	(??_calcPID+6)& (0+255),b
  7770  001738  0100               	movlb	0	; () banked
  7771  00173A  0100               	movlb	0	; () banked
  7772  00173C  5163               	movf	(?___lmul+3)& (0+255),w,b
  7773  00173E  0100               	movlb	0	; () banked
  7774  001740  2195               	addwfc	(??_calcPID+3)& (0+255),w,b
  7775  001742  0100               	movlb	0	; () banked
  7776  001744  6F99               	movwf	(??_calcPID+7)& (0+255),b
  7777  001746  C08A  F064         	movff	calcPID@Kd,?___lmul+4
  7778  00174A  C08B  F065         	movff	calcPID@Kd+1,?___lmul+5
  7779  00174E  C08C  F066         	movff	calcPID@Kd+2,?___lmul+6
  7780  001752  C08D  F067         	movff	calcPID@Kd+3,?___lmul+7
  7781  001756  C0A2  F060         	movff	calcPID@dError,?___lmul
  7782  00175A  C0A3  F061         	movff	calcPID@dError+1,?___lmul+1
  7783  00175E  C0A4  F062         	movff	calcPID@dError+2,?___lmul+2
  7784  001762  C0A5  F063         	movff	calcPID@dError+3,?___lmul+3
  7785  001766  EC72  F013         	call	___lmul	;wreg free
  7786  00176A  C063  F06F         	movff	?___lmul+3,?___lldiv+3
  7787  00176E  C062  F06E         	movff	?___lmul+2,?___lldiv+2
  7788  001772  C061  F06D         	movff	?___lmul+1,?___lldiv+1
  7789  001776  C060  F06C         	movff	?___lmul,?___lldiv
  7790  00177A  C07E  F070         	movff	calcPID@dt,?___lldiv+4
  7791  00177E  C07F  F071         	movff	calcPID@dt+1,?___lldiv+5
  7792  001782  C080  F072         	movff	calcPID@dt+2,?___lldiv+6
  7793  001786  C081  F073         	movff	calcPID@dt+3,?___lldiv+7
  7794  00178A  EC71  F011         	call	___lldiv	;wreg free
  7795  00178E  0100               	movlb	0	; () banked
  7796  001790  0100               	movlb	0	; () banked
  7797  001792  516C               	movf	?___lldiv& (0+255),w,b
  7798  001794  0100               	movlb	0	; () banked
  7799  001796  2596               	addwf	(??_calcPID+4)& (0+255),w,b
  7800  001798  0100               	movlb	0	; () banked
  7801  00179A  0100               	movlb	0	; () banked
  7802  00179C  6F9E               	movwf	calcPID@output& (0+255),b
  7803  00179E  0100               	movlb	0	; () banked
  7804  0017A0  0100               	movlb	0	; () banked
  7805  0017A2  516D               	movf	(?___lldiv+1)& (0+255),w,b
  7806  0017A4  0100               	movlb	0	; () banked
  7807  0017A6  2197               	addwfc	(??_calcPID+5)& (0+255),w,b
  7808  0017A8  0100               	movlb	0	; () banked
  7809  0017AA  6F9F               	movwf	(calcPID@output+1)& (0+255),b
  7810  0017AC  0100               	movlb	0	; () banked
  7811  0017AE  0100               	movlb	0	; () banked
  7812  0017B0  516E               	movf	(?___lldiv+2)& (0+255),w,b
  7813  0017B2  0100               	movlb	0	; () banked
  7814  0017B4  2198               	addwfc	(??_calcPID+6)& (0+255),w,b
  7815  0017B6  0100               	movlb	0	; () banked
  7816  0017B8  6FA0               	movwf	(calcPID@output+2)& (0+255),b
  7817  0017BA  0100               	movlb	0	; () banked
  7818  0017BC  0100               	movlb	0	; () banked
  7819  0017BE  516F               	movf	(?___lldiv+3)& (0+255),w,b
  7820  0017C0  0100               	movlb	0	; () banked
  7821  0017C2  2199               	addwfc	(??_calcPID+7)& (0+255),w,b
  7822  0017C4  0100               	movlb	0	; () banked
  7823  0017C6  6FA1               	movwf	(calcPID@output+3)& (0+255),b
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;MyControl.c: 42: *lastErrorPtr = error;
  7827  0017C8  C08E  FFD9         	movff	calcPID@lastErrorPtr,fsr2l
  7828  0017CC  C08F  FFDA         	movff	calcPID@lastErrorPtr+1,fsr2h
  7829  0017D0  0100               	movlb	0	; () banked
  7830  0017D2  C07A  FFDE         	movff	calcPID@error,postinc2
  7831  0017D6  0100               	movlb	0	; () banked
  7832  0017D8  C07B  FFDE         	movff	calcPID@error+1,postinc2
  7833  0017DC  0100               	movlb	0	; () banked
  7834  0017DE  C07C  FFDE         	movff	calcPID@error+2,postinc2
  7835  0017E2  0100               	movlb	0	; () banked
  7836  0017E4  C07D  FFDE         	movff	calcPID@error+3,postinc2
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;MyControl.c: 44: return output;
  7840  0017E8  C09E  F07A         	movff	calcPID@output,?_calcPID
  7841  0017EC  C09F  F07B         	movff	calcPID@output+1,?_calcPID+1
  7842  0017F0  C0A0  F07C         	movff	calcPID@output+2,?_calcPID+2
  7843  0017F4  C0A1  F07D         	movff	calcPID@output+3,?_calcPID+3
  7844                           
  7845                           ; BSR set to: 0
  7846                           
  7847                           ; BSR set to: 0
  7848  0017F8  0012               	return	
  7849  0017FA                     __end_of_calcPID:
  7850                           	opt stack 0
  7851                           tblptru	equ	0xFF8
  7852                           tblptrh	equ	0xFF7
  7853                           tblptrl	equ	0xFF6
  7854                           tablat	equ	0xFF5
  7855                           prodh	equ	0xFF4
  7856                           prodl	equ	0xFF3
  7857                           intcon	equ	0xFF2
  7858                           intcon2	equ	0xFF1
  7859                           indf0	equ	0xFEF
  7860                           postinc0	equ	0xFEE
  7861                           fsr0h	equ	0xFEA
  7862                           fsr0l	equ	0xFE9
  7863                           wreg	equ	0xFE8
  7864                           indf1	equ	0xFE7
  7865                           postdec1	equ	0xFE5
  7866                           fsr1h	equ	0xFE2
  7867                           fsr1l	equ	0xFE1
  7868                           indf2	equ	0xFDF
  7869                           postinc2	equ	0xFDE
  7870                           postdec2	equ	0xFDD
  7871                           fsr2h	equ	0xFDA
  7872                           fsr2l	equ	0xFD9
  7873                           status	equ	0xFD8
  7874                           
  7875 ;; *************** function ___lldiv *****************
  7876 ;; Defined at:
  7877 ;;		line 10 in file "/opt/microchip/xc8/v1.21/sources/common/lldiv.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  dividend        4   12[BANK0 ] unsigned long 
  7880 ;;  divisor         4   16[BANK0 ] unsigned long 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  quotient        4   21[BANK0 ] unsigned long 
  7883 ;;  counter         1   25[BANK0 ] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  4   12[BANK0 ] unsigned long 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7893 ;;      Params:         0       8       0       0       0       0       0       0       0
  7894 ;;      Locals:         0       5       0       0       0       0       0       0       0
  7895 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7896 ;;      Totals:         0      14       0       0       0       0       0       0       0
  7897 ;;Total ram usage:       14 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    3
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_calcPID
  7904 ;;		_ultoa
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text31
  7909  0022E2                     __ptext31:
  7910                           	opt stack 0
  7911  0022E2                     ___lldiv:
  7912                           	opt stack 24
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;incstack = 0
  7916                           ;incstack = 0
  7917  0022E2  0E00               	movlw	0
  7918  0022E4  0100               	movlb	0	; () banked
  7919  0022E6  0100               	movlb	0	; () banked
  7920  0022E8  6F75               	movwf	___lldiv@quotient& (0+255),b
  7921  0022EA  0E00               	movlw	0
  7922  0022EC  0100               	movlb	0	; () banked
  7923  0022EE  6F76               	movwf	(___lldiv@quotient+1)& (0+255),b
  7924  0022F0  0E00               	movlw	0
  7925  0022F2  0100               	movlb	0	; () banked
  7926  0022F4  6F77               	movwf	(___lldiv@quotient+2)& (0+255),b
  7927  0022F6  0E00               	movlw	0
  7928  0022F8  0100               	movlb	0	; () banked
  7929  0022FA  6F78               	movwf	(___lldiv@quotient+3)& (0+255),b
  7930                           
  7931                           ; BSR set to: 0
  7932  0022FC  0100               	movlb	0	; () banked
  7933  0022FE  0100               	movlb	0	; () banked
  7934  002300  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7935  002302  1170               	iorwf	___lldiv@divisor& (0+255),w,b
  7936  002304  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7937  002306  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7938  002308  B4D8               	btfsc	status,2,c
  7939  00230A  D067               	goto	l925
  7940                           
  7941                           ; BSR set to: 0
  7942  00230C  0100               	movlb	0	; () banked
  7943  00230E  6F74               	movwf	??___lldiv& (0+255),b
  7944  002310  0E01               	movlw	1
  7945  002312  0100               	movlb	0	; () banked
  7946  002314  0100               	movlb	0	; () banked
  7947  002316  6F79               	movwf	___lldiv@counter& (0+255),b
  7948  002318  0100               	movlb	0	; () banked
  7949  00231A  5174               	movf	??___lldiv& (0+255),w,b
  7950  00231C  D00D               	goto	l3922
  7951  00231E                     l3920:
  7952                           
  7953                           ; BSR set to: 0
  7954  00231E  0100               	movlb	0	; () banked
  7955  002320  90D8               	bcf	status,0,c
  7956  002322  0100               	movlb	0	; () banked
  7957  002324  3770               	rlcf	___lldiv@divisor& (0+255),f,b
  7958  002326  0100               	movlb	0	; () banked
  7959  002328  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7960  00232A  0100               	movlb	0	; () banked
  7961  00232C  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7962  00232E  0100               	movlb	0	; () banked
  7963  002330  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7964  002332  0100               	movlb	0	; () banked
  7965  002334  0100               	movlb	0	; () banked
  7966  002336  2B79               	incf	___lldiv@counter& (0+255),f,b
  7967  002338                     l3922:
  7968                           
  7969                           ; BSR set to: 0
  7970  002338  0100               	movlb	0	; () banked
  7971  00233A  0100               	movlb	0	; () banked
  7972  00233C  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7973  00233E  D7EF               	goto	l3920
  7974  002340                     l3924:
  7975                           
  7976                           ; BSR set to: 0
  7977  002340  0100               	movlb	0	; () banked
  7978  002342  90D8               	bcf	status,0,c
  7979  002344  0100               	movlb	0	; () banked
  7980  002346  3775               	rlcf	___lldiv@quotient& (0+255),f,b
  7981  002348  0100               	movlb	0	; () banked
  7982  00234A  3776               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7983  00234C  0100               	movlb	0	; () banked
  7984  00234E  3777               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7985  002350  0100               	movlb	0	; () banked
  7986  002352  3778               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7987                           
  7988                           ; BSR set to: 0
  7989  002354  0100               	movlb	0	; () banked
  7990  002356  0100               	movlb	0	; () banked
  7991  002358  5170               	movf	___lldiv@divisor& (0+255),w,b
  7992  00235A  0100               	movlb	0	; () banked
  7993  00235C  0100               	movlb	0	; () banked
  7994  00235E  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
  7995  002360  0100               	movlb	0	; () banked
  7996  002362  0100               	movlb	0	; () banked
  7997  002364  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7998  002366  0100               	movlb	0	; () banked
  7999  002368  0100               	movlb	0	; () banked
  8000  00236A  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8001  00236C  0100               	movlb	0	; () banked
  8002  00236E  0100               	movlb	0	; () banked
  8003  002370  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8004  002372  0100               	movlb	0	; () banked
  8005  002374  0100               	movlb	0	; () banked
  8006  002376  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8007  002378  0100               	movlb	0	; () banked
  8008  00237A  0100               	movlb	0	; () banked
  8009  00237C  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8010  00237E  0100               	movlb	0	; () banked
  8011  002380  0100               	movlb	0	; () banked
  8012  002382  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8013  002384  A0D8               	btfss	status,0,c
  8014  002386  D01B               	goto	l3932
  8015                           
  8016                           ; BSR set to: 0
  8017  002388  0100               	movlb	0	; () banked
  8018  00238A  0100               	movlb	0	; () banked
  8019  00238C  5170               	movf	___lldiv@divisor& (0+255),w,b
  8020  00238E  0100               	movlb	0	; () banked
  8021  002390  0100               	movlb	0	; () banked
  8022  002392  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
  8023  002394  0100               	movlb	0	; () banked
  8024  002396  0100               	movlb	0	; () banked
  8025  002398  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8026  00239A  0100               	movlb	0	; () banked
  8027  00239C  0100               	movlb	0	; () banked
  8028  00239E  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8029  0023A0  0100               	movlb	0	; () banked
  8030  0023A2  0100               	movlb	0	; () banked
  8031  0023A4  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8032  0023A6  0100               	movlb	0	; () banked
  8033  0023A8  0100               	movlb	0	; () banked
  8034  0023AA  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8035  0023AC  0100               	movlb	0	; () banked
  8036  0023AE  0100               	movlb	0	; () banked
  8037  0023B0  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8038  0023B2  0100               	movlb	0	; () banked
  8039  0023B4  0100               	movlb	0	; () banked
  8040  0023B6  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8041                           
  8042                           ; BSR set to: 0
  8043  0023B8  0100               	movlb	0	; () banked
  8044  0023BA  0100               	movlb	0	; () banked
  8045  0023BC  8175               	bsf	___lldiv@quotient& (0+255),0,b
  8046  0023BE                     l3932:
  8047                           
  8048                           ; BSR set to: 0
  8049  0023BE  0100               	movlb	0	; () banked
  8050  0023C0  90D8               	bcf	status,0,c
  8051  0023C2  0100               	movlb	0	; () banked
  8052  0023C4  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8053  0023C6  0100               	movlb	0	; () banked
  8054  0023C8  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8055  0023CA  0100               	movlb	0	; () banked
  8056  0023CC  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8057  0023CE  0100               	movlb	0	; () banked
  8058  0023D0  3370               	rrcf	___lldiv@divisor& (0+255),f,b
  8059                           
  8060                           ; BSR set to: 0
  8061  0023D2  0100               	movlb	0	; () banked
  8062  0023D4  0100               	movlb	0	; () banked
  8063  0023D6  2F79               	decfsz	___lldiv@counter& (0+255),f,b
  8064  0023D8  D7B3               	goto	l3924
  8065  0023DA                     l925:
  8066                           
  8067                           ; BSR set to: 0
  8068  0023DA  C075  F06C         	movff	___lldiv@quotient,?___lldiv
  8069  0023DE  C076  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
  8070  0023E2  C077  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
  8071  0023E6  C078  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
  8072                           
  8073                           ; BSR set to: 0
  8074  0023EA  0012               	return	
  8075  0023EC                     __end_of___lldiv:
  8076                           	opt stack 0
  8077                           tblptru	equ	0xFF8
  8078                           tblptrh	equ	0xFF7
  8079                           tblptrl	equ	0xFF6
  8080                           tablat	equ	0xFF5
  8081                           prodh	equ	0xFF4
  8082                           prodl	equ	0xFF3
  8083                           intcon	equ	0xFF2
  8084                           intcon2	equ	0xFF1
  8085                           indf0	equ	0xFEF
  8086                           postinc0	equ	0xFEE
  8087                           fsr0h	equ	0xFEA
  8088                           fsr0l	equ	0xFE9
  8089                           wreg	equ	0xFE8
  8090                           indf1	equ	0xFE7
  8091                           postdec1	equ	0xFE5
  8092                           fsr1h	equ	0xFE2
  8093                           fsr1l	equ	0xFE1
  8094                           indf2	equ	0xFDF
  8095                           postinc2	equ	0xFDE
  8096                           postdec2	equ	0xFDD
  8097                           fsr2h	equ	0xFDA
  8098                           fsr2l	equ	0xFD9
  8099                           status	equ	0xFD8
  8100                           
  8101 ;; *************** function ___lmul *****************
  8102 ;; Defined at:
  8103 ;;		line 3 in file "/opt/microchip/xc8/v1.21/sources/common/lmul.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8106 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  product         4    8[BANK0 ] unsigned long 
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  4    0[BANK0 ] unsigned long 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2, status,0
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8118 ;;      Params:         0       8       0       0       0       0       0       0       0
  8119 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8121 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8122 ;;Total ram usage:       12 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    3
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_calcPID
  8129 ;;		_controlador
  8130 ;;		_atol
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           
  8134                           	psect	text32
  8135  0026E4                     __ptext32:
  8136                           	opt stack 0
  8137  0026E4                     ___lmul:
  8138                           	opt stack 25
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;incstack = 0
  8142                           ;incstack = 0
  8143  0026E4  0E00               	movlw	0
  8144  0026E6  0100               	movlb	0	; () banked
  8145  0026E8  0100               	movlb	0	; () banked
  8146  0026EA  6F68               	movwf	___lmul@product& (0+255),b
  8147  0026EC  0E00               	movlw	0
  8148  0026EE  0100               	movlb	0	; () banked
  8149  0026F0  6F69               	movwf	(___lmul@product+1)& (0+255),b
  8150  0026F2  0E00               	movlw	0
  8151  0026F4  0100               	movlb	0	; () banked
  8152  0026F6  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  8153  0026F8  0E00               	movlw	0
  8154  0026FA  0100               	movlb	0	; () banked
  8155  0026FC  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  8156  0026FE                     l3894:
  8157                           
  8158                           ; BSR set to: 0
  8159  0026FE  0100               	movlb	0	; () banked
  8160  002700  0100               	movlb	0	; () banked
  8161  002702  A160               	btfss	___lmul@multiplier& (0+255),0,b
  8162  002704  D018               	goto	l3898
  8163                           
  8164                           ; BSR set to: 0
  8165  002706  0100               	movlb	0	; () banked
  8166  002708  0100               	movlb	0	; () banked
  8167  00270A  5164               	movf	___lmul@multiplicand& (0+255),w,b
  8168  00270C  0100               	movlb	0	; () banked
  8169  00270E  0100               	movlb	0	; () banked
  8170  002710  2768               	addwf	___lmul@product& (0+255),f,b
  8171  002712  0100               	movlb	0	; () banked
  8172  002714  0100               	movlb	0	; () banked
  8173  002716  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  8174  002718  0100               	movlb	0	; () banked
  8175  00271A  0100               	movlb	0	; () banked
  8176  00271C  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  8177  00271E  0100               	movlb	0	; () banked
  8178  002720  0100               	movlb	0	; () banked
  8179  002722  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  8180  002724  0100               	movlb	0	; () banked
  8181  002726  0100               	movlb	0	; () banked
  8182  002728  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  8183  00272A  0100               	movlb	0	; () banked
  8184  00272C  0100               	movlb	0	; () banked
  8185  00272E  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  8186  002730  0100               	movlb	0	; () banked
  8187  002732  0100               	movlb	0	; () banked
  8188  002734  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  8189  002736                     l3898:
  8190                           
  8191                           ; BSR set to: 0
  8192  002736  0100               	movlb	0	; () banked
  8193  002738  90D8               	bcf	status,0,c
  8194  00273A  0100               	movlb	0	; () banked
  8195  00273C  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  8196  00273E  0100               	movlb	0	; () banked
  8197  002740  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  8198  002742  0100               	movlb	0	; () banked
  8199  002744  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  8200  002746  0100               	movlb	0	; () banked
  8201  002748  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  8202                           
  8203                           ; BSR set to: 0
  8204  00274A  0100               	movlb	0	; () banked
  8205  00274C  90D8               	bcf	status,0,c
  8206  00274E  0100               	movlb	0	; () banked
  8207  002750  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  8208  002752  0100               	movlb	0	; () banked
  8209  002754  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  8210  002756  0100               	movlb	0	; () banked
  8211  002758  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  8212  00275A  0100               	movlb	0	; () banked
  8213  00275C  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  8214  00275E  0100               	movlb	0	; () banked
  8215  002760  0100               	movlb	0	; () banked
  8216  002762  5163               	movf	(___lmul@multiplier+3)& (0+255),w,b
  8217  002764  1160               	iorwf	___lmul@multiplier& (0+255),w,b
  8218  002766  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  8219  002768  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  8220  00276A  A4D8               	btfss	status,2,c
  8221  00276C  D7C8               	goto	l3894
  8222                           
  8223                           ; BSR set to: 0
  8224  00276E  C068  F060         	movff	___lmul@product,?___lmul
  8225  002772  C069  F061         	movff	___lmul@product+1,?___lmul+1
  8226  002776  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  8227  00277A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  8228                           
  8229                           ; BSR set to: 0
  8230  00277E  0012               	return	
  8231  002780                     __end_of___lmul:
  8232                           	opt stack 0
  8233                           tblptru	equ	0xFF8
  8234                           tblptrh	equ	0xFF7
  8235                           tblptrl	equ	0xFF6
  8236                           tablat	equ	0xFF5
  8237                           prodh	equ	0xFF4
  8238                           prodl	equ	0xFF3
  8239                           intcon	equ	0xFF2
  8240                           intcon2	equ	0xFF1
  8241                           indf0	equ	0xFEF
  8242                           postinc0	equ	0xFEE
  8243                           fsr0h	equ	0xFEA
  8244                           fsr0l	equ	0xFE9
  8245                           wreg	equ	0xFE8
  8246                           indf1	equ	0xFE7
  8247                           postdec1	equ	0xFE5
  8248                           fsr1h	equ	0xFE2
  8249                           fsr1l	equ	0xFE1
  8250                           indf2	equ	0xFDF
  8251                           postinc2	equ	0xFDE
  8252                           postdec2	equ	0xFDD
  8253                           fsr2h	equ	0xFDA
  8254                           fsr2l	equ	0xFD9
  8255                           status	equ	0xFD8
  8256                           
  8257 ;; *************** function _comenzarADC *****************
  8258 ;; Defined at:
  8259 ;;		line 13 in file "MyADC.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;		None               void
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8273 ;;      Params:         0       0       0       0       0       0       0       0       0
  8274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8275 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8276 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8277 ;;Total ram usage:        1 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    4
  8280 ;; This function calls:
  8281 ;;		_SetChanADC
  8282 ;;		_ConvertADC
  8283 ;; This function is called by:
  8284 ;;		_main
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text33
  8289  002E1C                     __ptext33:
  8290                           	opt stack 0
  8291  002E1C                     _comenzarADC:
  8292                           	opt stack 26
  8293                           
  8294                           ;MyADC.c: 14: SetChanADC (0b10101111);
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;incstack = 0
  8298                           ;incstack = 0
  8299  002E1C  0100               	movlb	0	; () banked
  8300  002E1E  6F62               	movwf	??_comenzarADC& (0+255),b
  8301  002E20  0EAF               	movlw	175
  8302  002E22  0100               	movlb	0	; () banked
  8303  002E24  0100               	movlb	0	; () banked
  8304  002E26  6F60               	movwf	?_SetChanADC& (0+255),b
  8305  002E28  0100               	movlb	0	; () banked
  8306  002E2A  5162               	movf	??_comenzarADC& (0+255),w,b
  8307  002E2C  EC00  F017         	call	_SetChanADC	;wreg free
  8308                           
  8309                           ;MyADC.c: 15: ConvertADC();
  8310  002E30  EC5D  F017         	call	_ConvertADC	;wreg free
  8311  002E34  0012               	return	
  8312  002E36                     __end_of_comenzarADC:
  8313                           	opt stack 0
  8314                           tblptru	equ	0xFF8
  8315                           tblptrh	equ	0xFF7
  8316                           tblptrl	equ	0xFF6
  8317                           tablat	equ	0xFF5
  8318                           prodh	equ	0xFF4
  8319                           prodl	equ	0xFF3
  8320                           intcon	equ	0xFF2
  8321                           intcon2	equ	0xFF1
  8322                           indf0	equ	0xFEF
  8323                           postinc0	equ	0xFEE
  8324                           fsr0h	equ	0xFEA
  8325                           fsr0l	equ	0xFE9
  8326                           wreg	equ	0xFE8
  8327                           indf1	equ	0xFE7
  8328                           postdec1	equ	0xFE5
  8329                           fsr1h	equ	0xFE2
  8330                           fsr1l	equ	0xFE1
  8331                           indf2	equ	0xFDF
  8332                           postinc2	equ	0xFDE
  8333                           postdec2	equ	0xFDD
  8334                           fsr2h	equ	0xFDA
  8335                           fsr2l	equ	0xFD9
  8336                           status	equ	0xFD8
  8337                           
  8338 ;; *************** function _ConvertADC *****************
  8339 ;; Defined at:
  8340 ;;		line 23 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/ADC/adcconv.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;		None
  8345 ;; Return value:  Size  Location     Type
  8346 ;;		None               void
  8347 ;; Registers used:
  8348 ;;		None
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0
  8355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8358 ;;Total ram usage:        0 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:    3
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_comenzarADC
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text34
  8369  002EBA                     __ptext34:
  8370                           	opt stack 0
  8371  002EBA                     _ConvertADC:
  8372                           	opt stack 26
  8373                           
  8374                           ;incstack = 0
  8375                           ;incstack = 0
  8376  002EBA  82C2               	bsf	4034,1,c	;volatile
  8377  002EBC  0012               	return	
  8378  002EBE                     __end_of_ConvertADC:
  8379                           	opt stack 0
  8380                           tblptru	equ	0xFF8
  8381                           tblptrh	equ	0xFF7
  8382                           tblptrl	equ	0xFF6
  8383                           tablat	equ	0xFF5
  8384                           prodh	equ	0xFF4
  8385                           prodl	equ	0xFF3
  8386                           intcon	equ	0xFF2
  8387                           intcon2	equ	0xFF1
  8388                           indf0	equ	0xFEF
  8389                           postinc0	equ	0xFEE
  8390                           fsr0h	equ	0xFEA
  8391                           fsr0l	equ	0xFE9
  8392                           wreg	equ	0xFE8
  8393                           indf1	equ	0xFE7
  8394                           postdec1	equ	0xFE5
  8395                           fsr1h	equ	0xFE2
  8396                           fsr1l	equ	0xFE1
  8397                           indf2	equ	0xFDF
  8398                           postinc2	equ	0xFDE
  8399                           postdec2	equ	0xFDD
  8400                           fsr2h	equ	0xFDA
  8401                           fsr2l	equ	0xFD9
  8402                           status	equ	0xFD8
  8403                           
  8404 ;; *************** function _SetChanADC *****************
  8405 ;; Defined at:
  8406 ;;		line 31 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/ADC/adcsetch.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;  channel         1    0[BANK0 ] unsigned char 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;		None
  8411 ;; Return value:  Size  Location     Type
  8412 ;;		None               void
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8420 ;;      Params:         0       1       0       0       0       0       0       0       0
  8421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8422 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8423 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8424 ;;Total ram usage:        2 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; Hardware stack levels required when called:    3
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_comenzarADC
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           	psect	text35
  8435  002E00                     __ptext35:
  8436                           	opt stack 0
  8437  002E00                     _SetChanADC:
  8438                           	opt stack 26
  8439                           
  8440                           ;incstack = 0
  8441                           ;incstack = 0
  8442  002E00  CFC2 F061          	movff	4034,??_SetChanADC	;volatile
  8443  002E04  0EC3               	movlw	195
  8444  002E06  0100               	movlb	0	; () banked
  8445  002E08  1761               	andwf	??_SetChanADC& (0+255),f,b
  8446  002E0A  0100               	movlb	0	; () banked
  8447  002E0C  0100               	movlb	0	; () banked
  8448  002E0E  90D8               	bcf	status,0,c
  8449  002E10  3160               	rrcf	SetChanADC@channel& (0+255),w,b
  8450  002E12  0B3C               	andlw	60
  8451  002E14  0100               	movlb	0	; () banked
  8452  002E16  1161               	iorwf	??_SetChanADC& (0+255),w,b
  8453  002E18  6EC2               	movwf	4034,c	;volatile
  8454                           
  8455                           ; BSR set to: 0
  8456  002E1A  0012               	return	
  8457  002E1C                     __end_of_SetChanADC:
  8458                           	opt stack 0
  8459                           tblptru	equ	0xFF8
  8460                           tblptrh	equ	0xFF7
  8461                           tblptrl	equ	0xFF6
  8462                           tablat	equ	0xFF5
  8463                           prodh	equ	0xFF4
  8464                           prodl	equ	0xFF3
  8465                           intcon	equ	0xFF2
  8466                           intcon2	equ	0xFF1
  8467                           indf0	equ	0xFEF
  8468                           postinc0	equ	0xFEE
  8469                           fsr0h	equ	0xFEA
  8470                           fsr0l	equ	0xFE9
  8471                           wreg	equ	0xFE8
  8472                           indf1	equ	0xFE7
  8473                           postdec1	equ	0xFE5
  8474                           fsr1h	equ	0xFE2
  8475                           fsr1l	equ	0xFE1
  8476                           indf2	equ	0xFDF
  8477                           postinc2	equ	0xFDE
  8478                           postdec2	equ	0xFDD
  8479                           fsr2h	equ	0xFDA
  8480                           fsr2l	equ	0xFD9
  8481                           status	equ	0xFD8
  8482                           
  8483 ;; *************** function _ConfigADC *****************
  8484 ;; Defined at:
  8485 ;;		line 9 in file "MyADC.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;		None
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;		None               void
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8499 ;;      Params:         0       0       0       0       0       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8501 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8502 ;;      Totals:         0       3       0       0       0       0       0       0       0
  8503 ;;Total ram usage:        3 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    4
  8506 ;; This function calls:
  8507 ;;		_OpenADC
  8508 ;; This function is called by:
  8509 ;;		_main
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text36
  8514  002CC8                     __ptext36:
  8515                           	opt stack 0
  8516  002CC8                     _ConfigADC:
  8517                           	opt stack 26
  8518                           
  8519                           ;MyADC.c: 10: OpenADC(0b11111111 & 0b11111111 & 0b11110011, 0b11111111 & 0b11111100, 0b1
      +                          1111000);
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;incstack = 0
  8523                           ;incstack = 0
  8524  002CC8  0100               	movlb	0	; () banked
  8525  002CCA  6F65               	movwf	??_ConfigADC& (0+255),b
  8526  002CCC  0EF3               	movlw	243
  8527  002CCE  0100               	movlb	0	; () banked
  8528  002CD0  0100               	movlb	0	; () banked
  8529  002CD2  6F60               	movwf	?_OpenADC& (0+255),b
  8530  002CD4  0100               	movlb	0	; () banked
  8531  002CD6  5165               	movf	??_ConfigADC& (0+255),w,b
  8532  002CD8  0100               	movlb	0	; () banked
  8533  002CDA  6F66               	movwf	(??_ConfigADC+1)& (0+255),b
  8534  002CDC  0EFC               	movlw	252
  8535  002CDE  0100               	movlb	0	; () banked
  8536  002CE0  0100               	movlb	0	; () banked
  8537  002CE2  6F61               	movwf	(?_OpenADC+1)& (0+255),b
  8538  002CE4  0100               	movlb	0	; () banked
  8539  002CE6  5166               	movf	(??_ConfigADC+1)& (0+255),w,b
  8540  002CE8  0100               	movlb	0	; () banked
  8541  002CEA  6F67               	movwf	(??_ConfigADC+2)& (0+255),b
  8542  002CEC  0EF8               	movlw	248
  8543  002CEE  0100               	movlb	0	; () banked
  8544  002CF0  0100               	movlb	0	; () banked
  8545  002CF2  6F62               	movwf	(?_OpenADC+2)& (0+255),b
  8546  002CF4  0100               	movlb	0	; () banked
  8547  002CF6  5167               	movf	(??_ConfigADC+2)& (0+255),w,b
  8548  002CF8  EC8C  F014         	call	_OpenADC	;wreg free
  8549  002CFC  0012               	return	
  8550  002CFE                     __end_of_ConfigADC:
  8551                           	opt stack 0
  8552                           tblptru	equ	0xFF8
  8553                           tblptrh	equ	0xFF7
  8554                           tblptrl	equ	0xFF6
  8555                           tablat	equ	0xFF5
  8556                           prodh	equ	0xFF4
  8557                           prodl	equ	0xFF3
  8558                           intcon	equ	0xFF2
  8559                           intcon2	equ	0xFF1
  8560                           indf0	equ	0xFEF
  8561                           postinc0	equ	0xFEE
  8562                           fsr0h	equ	0xFEA
  8563                           fsr0l	equ	0xFE9
  8564                           wreg	equ	0xFE8
  8565                           indf1	equ	0xFE7
  8566                           postdec1	equ	0xFE5
  8567                           fsr1h	equ	0xFE2
  8568                           fsr1l	equ	0xFE1
  8569                           indf2	equ	0xFDF
  8570                           postinc2	equ	0xFDE
  8571                           postdec2	equ	0xFDD
  8572                           fsr2h	equ	0xFDA
  8573                           fsr2l	equ	0xFD9
  8574                           status	equ	0xFD8
  8575                           
  8576 ;; *************** function _OpenADC *****************
  8577 ;; Defined at:
  8578 ;;		line 71 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/ADC/adcopen.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  config          1    0[BANK0 ] unsigned char 
  8581 ;;  config2         1    1[BANK0 ] unsigned char 
  8582 ;;  portconfig      1    2[BANK0 ] unsigned char 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;		None               void
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8594 ;;      Params:         0       3       0       0       0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8596 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8597 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8598 ;;Total ram usage:        5 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:    3
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		_ConfigADC
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text37
  8609  002918                     __ptext37:
  8610                           	opt stack 0
  8611  002918                     _OpenADC:
  8612                           	opt stack 26
  8613                           
  8614                           ;incstack = 0
  8615                           ;incstack = 0
  8616  002918  0E00               	movlw	0
  8617  00291A  6EC2               	movwf	4034,c	;volatile
  8618  00291C  0E00               	movlw	0
  8619  00291E  6EC0               	movwf	4032,c	;volatile
  8620  002920  0100               	movlb	0	; () banked
  8621  002922  0100               	movlb	0	; () banked
  8622  002924  90D8               	bcf	status,0,c
  8623  002926  3161               	rrcf	OpenADC@config2& (0+255),w,b
  8624  002928  0B3C               	andlw	60
  8625  00292A  6EC2               	movwf	4034,c	;volatile
  8626                           
  8627                           ; BSR set to: 0
  8628  00292C  C061  F063         	movff	OpenADC@config2,??_OpenADC
  8629  002930  0100               	movlb	0	; () banked
  8630  002932  3B63               	swapf	??_OpenADC& (0+255),f,b
  8631  002934  0EF0               	movlw	240
  8632  002936  1763               	andwf	??_OpenADC& (0+255),f,b
  8633  002938  0E30               	movlw	48
  8634  00293A  0100               	movlb	0	; () banked
  8635  00293C  1763               	andwf	??_OpenADC& (0+255),f,b
  8636  00293E  0100               	movlb	0	; () banked
  8637  002940  0100               	movlb	0	; () banked
  8638  002942  5162               	movf	OpenADC@portconfig& (0+255),w,b
  8639  002944  0B0F               	andlw	15
  8640  002946  0100               	movlb	0	; () banked
  8641  002948  1163               	iorwf	??_OpenADC& (0+255),w,b
  8642  00294A  6EC1               	movwf	4033,c	;volatile
  8643                           
  8644                           ; BSR set to: 0
  8645  00294C  C060  F063         	movff	OpenADC@config,??_OpenADC
  8646  002950  0100               	movlb	0	; () banked
  8647  002952  90D8               	bcf	status,0,c
  8648  002954  3763               	rlcf	??_OpenADC& (0+255),f,b
  8649  002956  0100               	movlb	0	; () banked
  8650  002958  90D8               	bcf	status,0,c
  8651  00295A  3763               	rlcf	??_OpenADC& (0+255),f,b
  8652  00295C  0E38               	movlw	56
  8653  00295E  0100               	movlb	0	; () banked
  8654  002960  1763               	andwf	??_OpenADC& (0+255),f,b
  8655  002962  C060  F064         	movff	OpenADC@config,??_OpenADC+1
  8656  002966  0100               	movlb	0	; () banked
  8657  002968  3B64               	swapf	(??_OpenADC+1)& (0+255),f,b
  8658  00296A  0E0F               	movlw	15
  8659  00296C  1764               	andwf	(??_OpenADC+1)& (0+255),f,b
  8660  00296E  0E07               	movlw	7
  8661  002970  0100               	movlb	0	; () banked
  8662  002972  1764               	andwf	(??_OpenADC+1)& (0+255),f,b
  8663  002974  0100               	movlb	0	; () banked
  8664  002976  0100               	movlb	0	; () banked
  8665  002978  5160               	movf	OpenADC@config& (0+255),w,b
  8666  00297A  0B80               	andlw	128
  8667  00297C  0100               	movlb	0	; () banked
  8668  00297E  1164               	iorwf	(??_OpenADC+1)& (0+255),w,b
  8669  002980  0100               	movlb	0	; () banked
  8670  002982  1163               	iorwf	??_OpenADC& (0+255),w,b
  8671  002984  6EC0               	movwf	4032,c	;volatile
  8672                           
  8673                           ; BSR set to: 0
  8674  002986  0100               	movlb	0	; () banked
  8675  002988  0100               	movlb	0	; () banked
  8676  00298A  AF61               	btfss	OpenADC@config2& (0+255),7,b
  8677  00298C  D003               	goto	l322
  8678                           
  8679                           ; BSR set to: 0
  8680  00298E  9C9E               	bcf	3998,6,c	;volatile
  8681  002990  8C9D               	bsf	3997,6,c	;volatile
  8682  002992  8CF2               	bsf	intcon,6,c	;volatile
  8683  002994                     l322:
  8684                           
  8685                           ; BSR set to: 0
  8686  002994  80C2               	bsf	4034,0,c	;volatile
  8687                           
  8688                           ; BSR set to: 0
  8689  002996  0012               	return	
  8690  002998                     __end_of_OpenADC:
  8691                           	opt stack 0
  8692                           tblptru	equ	0xFF8
  8693                           tblptrh	equ	0xFF7
  8694                           tblptrl	equ	0xFF6
  8695                           tablat	equ	0xFF5
  8696                           prodh	equ	0xFF4
  8697                           prodl	equ	0xFF3
  8698                           intcon	equ	0xFF2
  8699                           intcon2	equ	0xFF1
  8700                           indf0	equ	0xFEF
  8701                           postinc0	equ	0xFEE
  8702                           fsr0h	equ	0xFEA
  8703                           fsr0l	equ	0xFE9
  8704                           wreg	equ	0xFE8
  8705                           indf1	equ	0xFE7
  8706                           postdec1	equ	0xFE5
  8707                           fsr1h	equ	0xFE2
  8708                           fsr1l	equ	0xFE1
  8709                           indf2	equ	0xFDF
  8710                           postinc2	equ	0xFDE
  8711                           postdec2	equ	0xFDD
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _LowIsr *****************
  8717 ;; Defined at:
  8718 ;;		line 362 in file "main.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  caracterRx      1   31[COMRAM] unsigned char 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;		None               void
  8725 ;; Registers used:
  8726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8732 ;;      Params:         0       0       0       0       0       0       0       0       0
  8733 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8734 ;;      Temps:         25       0       0       0       0       0       0       0       0
  8735 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8736 ;;Total ram usage:       26 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    2
  8739 ;; This function calls:
  8740 ;;		_getADC
  8741 ;;		_ReadUSART
  8742 ;;		i1_comenzarADC
  8743 ;;		i1_reset_integral
  8744 ;;		i1_borrarBufferRx
  8745 ;; This function is called by:
  8746 ;;		Interrupt level 1
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	intcodelo
  8751  000018                     __pintcodelo:
  8752                           	opt stack 0
  8753  000018                     _LowIsr:
  8754                           	opt stack 24
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;incstack = 0
  8758  000018  CFD8 F00F          	movff	status,??_LowIsr+8
  8759  00001C  CFE8 F010          	movff	wreg,??_LowIsr+9
  8760  000020  CFE0 F011          	movff	bsr,??_LowIsr+10
  8761  000024  CFFA F012          	movff	pclath,??_LowIsr+11
  8762  000028  CFFB F013          	movff	pclatu,??_LowIsr+12
  8763  00002C  CFE9 F014          	movff	fsr0l,??_LowIsr+13
  8764  000030  CFEA F015          	movff	fsr0h,??_LowIsr+14
  8765  000034  CFE1 F016          	movff	fsr1l,??_LowIsr+15
  8766  000038  CFE2 F017          	movff	fsr1h,??_LowIsr+16
  8767  00003C  CFD9 F018          	movff	fsr2l,??_LowIsr+17
  8768  000040  CFDA F019          	movff	fsr2h,??_LowIsr+18
  8769  000044  CFF3 F01A          	movff	prodl,??_LowIsr+19
  8770  000048  CFF4 F01B          	movff	prodh,??_LowIsr+20
  8771  00004C  CFF6 F01C          	movff	tblptrl,??_LowIsr+21
  8772  000050  CFF7 F01D          	movff	tblptrh,??_LowIsr+22
  8773  000054  CFF8 F01E          	movff	tblptru,??_LowIsr+23
  8774  000058  CFF5 F01F          	movff	tablat,??_LowIsr+24
  8775  00005C                     
  8776                           ;main.c: 363: if (TMR1IE && PIR1bits.TMR1IF)
  8777  00005C  A09D               	btfss	3997,0,c	;volatile
  8778  00005E  D001               	goto	i1u191_21
  8779  000060  D001               	goto	i1u191_20
  8780  000062                     i1u191_21:
  8781  000062  D0BD               	goto	i1l3160
  8782  000064                     i1u191_20:
  8783  000064  A09E               	btfss	3998,0,c	;volatile
  8784  000066  D001               	goto	i1u192_21
  8785  000068  D001               	goto	i1u192_20
  8786  00006A                     i1u192_21:
  8787  00006A  D0B9               	goto	i1l3160
  8788  00006C                     i1u192_20:
  8789  00006C                     
  8790                           ;main.c: 364: {
  8791                           ;main.c: 365: PIR1bits.TMR1IF = 0;
  8792  00006C  909E               	bcf	3998,0,c	;volatile
  8793  00006E                     
  8794                           ;main.c: 368: tik++;
  8795  00006E  0E01               	movlw	1
  8796  000070  0100               	movlb	0	; () banked
  8797  000072  0100               	movlb	0	; () banked
  8798  000074  27D4               	addwf	_tik& (0+255),f,b
  8799  000076  0E00               	movlw	0
  8800  000078  0100               	movlb	0	; () banked
  8801  00007A  23D5               	addwfc	(_tik+1)& (0+255),f,b
  8802  00007C  0E00               	movlw	0
  8803  00007E  0100               	movlb	0	; () banked
  8804  000080  23D6               	addwfc	(_tik+2)& (0+255),f,b
  8805  000082  0E00               	movlw	0
  8806  000084  0100               	movlb	0	; () banked
  8807  000086  23D7               	addwfc	(_tik+3)& (0+255),f,b
  8808  000088                     
  8809                           ; BSR set to: 0
  8810                           ;main.c: 370: if (PIR1bits.ADIF != 0) {
  8811  000088  AC9E               	btfss	3998,6,c	;volatile
  8812  00008A  D001               	goto	i1u193_21
  8813  00008C  D001               	goto	i1u193_20
  8814  00008E                     i1u193_21:
  8815  00008E  D0A7               	goto	i1l3160
  8816  000090                     i1u193_20:
  8817  000090                     
  8818                           ; BSR set to: 0
  8819                           ;main.c: 372: PIR1bits.ADIF = 0;
  8820  000090  9C9E               	bcf	3998,6,c	;volatile
  8821  000092                     
  8822                           ; BSR set to: 0
  8823                           ;main.c: 373: posicion = getADC();
  8824  000092  EC1B  F017         	call	_getADC	;wreg free
  8825  000096  C006  F0F0         	movff	?_getADC+3,_posicion+3
  8826  00009A  C005  F0EF         	movff	?_getADC+2,_posicion+2
  8827  00009E  C004  F0EE         	movff	?_getADC+1,_posicion+1
  8828  0000A2  C003  F0ED         	movff	?_getADC,_posicion
  8829  0000A6                     
  8830                           ;main.c: 374: error = (setPoint - posicion);
  8831  0000A6  0100               	movlb	0	; () banked
  8832  0000A8  C0ED  F007         	movff	_posicion,??_LowIsr
  8833  0000AC  0100               	movlb	0	; () banked
  8834  0000AE  C0EE  F008         	movff	_posicion+1,??_LowIsr+1
  8835  0000B2  0100               	movlb	0	; () banked
  8836  0000B4  C0EF  F009         	movff	_posicion+2,??_LowIsr+2
  8837  0000B8  0100               	movlb	0	; () banked
  8838  0000BA  C0F0  F00A         	movff	_posicion+3,??_LowIsr+3
  8839  0000BE  1E07               	comf	??_LowIsr,f,c
  8840  0000C0  1E08               	comf	??_LowIsr+1,f,c
  8841  0000C2  1E09               	comf	??_LowIsr+2,f,c
  8842  0000C4  1E0A               	comf	??_LowIsr+3,f,c
  8843  0000C6  2A07               	incf	??_LowIsr,f,c
  8844  0000C8  0E00               	movlw	0
  8845  0000CA  2208               	addwfc	??_LowIsr+1,f,c
  8846  0000CC  2209               	addwfc	??_LowIsr+2,f,c
  8847  0000CE  220A               	addwfc	??_LowIsr+3,f,c
  8848  0000D0  503D               	movf	_setPoint,w,c
  8849  0000D2  2407               	addwf	??_LowIsr,w,c
  8850  0000D4  0100               	movlb	0	; () banked
  8851  0000D6  0100               	movlb	0	; () banked
  8852  0000D8  6FC8               	movwf	_error& (0+255),b
  8853  0000DA  503E               	movf	_setPoint+1,w,c
  8854  0000DC  2008               	addwfc	??_LowIsr+1,w,c
  8855  0000DE  0100               	movlb	0	; () banked
  8856  0000E0  6FC9               	movwf	(_error+1)& (0+255),b
  8857  0000E2  503F               	movf	_setPoint+2,w,c
  8858  0000E4  2009               	addwfc	??_LowIsr+2,w,c
  8859  0000E6  0100               	movlb	0	; () banked
  8860  0000E8  6FCA               	movwf	(_error+2)& (0+255),b
  8861  0000EA  5040               	movf	_setPoint+3,w,c
  8862  0000EC  200A               	addwfc	??_LowIsr+3,w,c
  8863  0000EE  0100               	movlb	0	; () banked
  8864  0000F0  6FCB               	movwf	(_error+3)& (0+255),b
  8865  0000F2                     
  8866                           ; BSR set to: 0
  8867                           ;main.c: 375: comenzarADC();
  8868  0000F2  EC3A  F017         	call	i1_comenzarADC	;wreg free
  8869  0000F6                     
  8870                           ;main.c: 376: dt = tik - tik0;
  8871  0000F6  0101               	movlb	1	; () banked
  8872  0000F8  C14B  F007         	movff	_tik0,??_LowIsr
  8873  0000FC  0101               	movlb	1	; () banked
  8874  0000FE  C14C  F008         	movff	_tik0+1,??_LowIsr+1
  8875  000102  0101               	movlb	1	; () banked
  8876  000104  C14D  F009         	movff	_tik0+2,??_LowIsr+2
  8877  000108  0101               	movlb	1	; () banked
  8878  00010A  C14E  F00A         	movff	_tik0+3,??_LowIsr+3
  8879  00010E  1E07               	comf	??_LowIsr,f,c
  8880  000110  1E08               	comf	??_LowIsr+1,f,c
  8881  000112  1E09               	comf	??_LowIsr+2,f,c
  8882  000114  1E0A               	comf	??_LowIsr+3,f,c
  8883  000116  2A07               	incf	??_LowIsr,f,c
  8884  000118  0E00               	movlw	0
  8885  00011A  2208               	addwfc	??_LowIsr+1,f,c
  8886  00011C  2209               	addwfc	??_LowIsr+2,f,c
  8887  00011E  220A               	addwfc	??_LowIsr+3,f,c
  8888  000120  0100               	movlb	0	; () banked
  8889  000122  0100               	movlb	0	; () banked
  8890  000124  51D4               	movf	_tik& (0+255),w,b
  8891  000126  2407               	addwf	??_LowIsr,w,c
  8892  000128  0101               	movlb	1	; () banked
  8893  00012A  0101               	movlb	1	; () banked
  8894  00012C  6F47               	movwf	_dt& (0+255),b
  8895  00012E  0100               	movlb	0	; () banked
  8896  000130  0100               	movlb	0	; () banked
  8897  000132  51D5               	movf	(_tik+1)& (0+255),w,b
  8898  000134  2008               	addwfc	??_LowIsr+1,w,c
  8899  000136  0101               	movlb	1	; () banked
  8900  000138  6F48               	movwf	(_dt+1)& (0+255),b
  8901  00013A  0100               	movlb	0	; () banked
  8902  00013C  0100               	movlb	0	; () banked
  8903  00013E  51D6               	movf	(_tik+2)& (0+255),w,b
  8904  000140  2009               	addwfc	??_LowIsr+2,w,c
  8905  000142  0101               	movlb	1	; () banked
  8906  000144  6F49               	movwf	(_dt+2)& (0+255),b
  8907  000146  0100               	movlb	0	; () banked
  8908  000148  0100               	movlb	0	; () banked
  8909  00014A  51D7               	movf	(_tik+3)& (0+255),w,b
  8910  00014C  200A               	addwfc	??_LowIsr+3,w,c
  8911  00014E  0101               	movlb	1	; () banked
  8912  000150  6F4A               	movwf	(_dt+3)& (0+255),b
  8913  000152                     
  8914                           ; BSR set to: 1
  8915                           ;main.c: 378: tik0 = tik;
  8916  000152  C0D4  F14B         	movff	_tik,_tik0
  8917  000156  C0D5  F14C         	movff	_tik+1,_tik0+1
  8918  00015A  C0D6  F14D         	movff	_tik+2,_tik0+2
  8919  00015E  C0D7  F14E         	movff	_tik+3,_tik0+3
  8920  000162                     
  8921                           ; BSR set to: 1
  8922                           ;main.c: 379: if(tik-tik0i>200){
  8923  000162  0101               	movlb	1	; () banked
  8924  000164  C14F  F007         	movff	_tik0i,??_LowIsr
  8925  000168  0101               	movlb	1	; () banked
  8926  00016A  C150  F008         	movff	_tik0i+1,??_LowIsr+1
  8927  00016E  0101               	movlb	1	; () banked
  8928  000170  C151  F009         	movff	_tik0i+2,??_LowIsr+2
  8929  000174  0101               	movlb	1	; () banked
  8930  000176  C152  F00A         	movff	_tik0i+3,??_LowIsr+3
  8931  00017A  1E07               	comf	??_LowIsr,f,c
  8932  00017C  1E08               	comf	??_LowIsr+1,f,c
  8933  00017E  1E09               	comf	??_LowIsr+2,f,c
  8934  000180  1E0A               	comf	??_LowIsr+3,f,c
  8935  000182  2A07               	incf	??_LowIsr,f,c
  8936  000184  0E00               	movlw	0
  8937  000186  2208               	addwfc	??_LowIsr+1,f,c
  8938  000188  2209               	addwfc	??_LowIsr+2,f,c
  8939  00018A  220A               	addwfc	??_LowIsr+3,f,c
  8940  00018C  0100               	movlb	0	; () banked
  8941  00018E  0100               	movlb	0	; () banked
  8942  000190  51D4               	movf	_tik& (0+255),w,b
  8943  000192  2407               	addwf	??_LowIsr,w,c
  8944  000194  6E0B               	movwf	(??_LowIsr+4)& (0+255),c
  8945  000196  0100               	movlb	0	; () banked
  8946  000198  0100               	movlb	0	; () banked
  8947  00019A  51D5               	movf	(_tik+1)& (0+255),w,b
  8948  00019C  2008               	addwfc	??_LowIsr+1,w,c
  8949  00019E  6E0C               	movwf	(??_LowIsr+5)& (0+255),c
  8950  0001A0  0100               	movlb	0	; () banked
  8951  0001A2  0100               	movlb	0	; () banked
  8952  0001A4  51D6               	movf	(_tik+2)& (0+255),w,b
  8953  0001A6  2009               	addwfc	??_LowIsr+2,w,c
  8954  0001A8  6E0D               	movwf	(??_LowIsr+6)& (0+255),c
  8955  0001AA  0100               	movlb	0	; () banked
  8956  0001AC  0100               	movlb	0	; () banked
  8957  0001AE  51D7               	movf	(_tik+3)& (0+255),w,b
  8958  0001B0  200A               	addwfc	??_LowIsr+3,w,c
  8959  0001B2  6E0E               	movwf	(??_LowIsr+7)& (0+255),c
  8960  0001B4  0EC9               	movlw	201
  8961  0001B6  5C0B               	subwf	??_LowIsr+4,w,c
  8962  0001B8  0E00               	movlw	0
  8963  0001BA  580C               	subwfb	??_LowIsr+5,w,c
  8964  0001BC  0E00               	movlw	0
  8965  0001BE  580D               	subwfb	??_LowIsr+6,w,c
  8966  0001C0  0E00               	movlw	0
  8967  0001C2  580E               	subwfb	??_LowIsr+7,w,c
  8968  0001C4  A0D8               	btfss	status,0,c
  8969  0001C6  D001               	goto	i1u194_21
  8970  0001C8  D001               	goto	i1u194_20
  8971  0001CA                     i1u194_21:
  8972  0001CA  D003               	goto	i1l3158
  8973  0001CC                     i1u194_20:
  8974  0001CC                     
  8975                           ; BSR set to: 0
  8976                           ;main.c: 380: reset_integral();}
  8977  0001CC  ECB2  F016         	call	i1_reset_integral	;wreg free
  8978  0001D0  D000               	goto	i1l3158
  8979  0001D2                     i1l3158:
  8980                           
  8981                           ;main.c: 381: doPID = 1;
  8982  0001D2  0E01               	movlw	1
  8983  0001D4  0100               	movlb	0	; () banked
  8984  0001D6  0100               	movlb	0	; () banked
  8985  0001D8  6FD9               	movwf	_doPID& (0+255),b	;volatile
  8986  0001DA  D001               	goto	i1l3160
  8987  0001DC                     
  8988                           ; BSR set to: 0
  8989  0001DC  D000               	goto	i1l3160
  8990  0001DE                     i1l3160:
  8991                           
  8992                           ;main.c: 382: }
  8993                           ;main.c: 384: }
  8994                           ;main.c: 391: if (PIR1bits.RCIF == 1)
  8995  0001DE  AA9E               	btfss	3998,5,c	;volatile
  8996  0001E0  D001               	goto	i1u195_21
  8997  0001E2  D001               	goto	i1u195_20
  8998  0001E4                     i1u195_21:
  8999  0001E4  D03D               	goto	i1l3180
  9000  0001E6                     i1u195_20:
  9001  0001E6                     
  9002                           ;main.c: 392: {
  9003                           ;main.c: 393: PIR1bits.RCIF = 0;
  9004  0001E6  9A9E               	bcf	3998,5,c	;volatile
  9005  0001E8                     
  9006                           ;main.c: 394: uint8_t caracterRx;
  9007                           ;main.c: 395: caracterRx = ReadUSART();
  9008  0001E8  ECF1  F016         	call	_ReadUSART	;wreg free
  9009  0001EC  6E20               	movwf	LowIsr@caracterRx,c
  9010  0001EE                     
  9011                           ;main.c: 396: if (caracterRx == 0x0D) {
  9012  0001EE  5020               	movf	LowIsr@caracterRx,w,c
  9013  0001F0  0A0D               	xorlw	13
  9014  0001F2  A4D8               	btfss	status,2,c
  9015  0001F4  D001               	goto	i1u196_21
  9016  0001F6  D001               	goto	i1u196_20
  9017  0001F8                     i1u196_21:
  9018  0001F8  D007               	goto	i1l3170
  9019  0001FA                     i1u196_20:
  9020  0001FA                     
  9021                           ;main.c: 397: banderaParser = 1;
  9022  0001FA  6E07               	movwf	??_LowIsr& (0+255),c
  9023  0001FC  0E01               	movlw	1
  9024  0001FE  0100               	movlb	0	; () banked
  9025  000200  0100               	movlb	0	; () banked
  9026  000202  6FD8               	movwf	_banderaParser& (0+255),b
  9027  000204  5007               	movf	??_LowIsr& (0+255),w,c
  9028                           
  9029                           ;main.c: 399: } else if (globalIndexRx < 10) {
  9030  000206  D02C               	goto	i1l3180
  9031  000208                     i1l3170:
  9032  000208  0E0A               	movlw	10
  9033  00020A  0100               	movlb	0	; () banked
  9034  00020C  0100               	movlb	0	; () banked
  9035  00020E  61DA               	cpfslt	_globalIndexRx& (0+255),b
  9036  000210  D001               	goto	i1u197_21
  9037  000212  D001               	goto	i1u197_20
  9038  000214                     i1u197_21:
  9039  000214  D020               	goto	i1l3178
  9040  000216                     i1u197_20:
  9041  000216                     
  9042                           ; BSR set to: 0
  9043                           ;main.c: 400: MessageBuffer[globalIndexRx] = caracterRx;
  9044  000216  0100               	movlb	0	; () banked
  9045  000218  0100               	movlb	0	; () banked
  9046  00021A  51DA               	movf	_globalIndexRx& (0+255),w,b
  9047  00021C  0D01               	mullw	1
  9048  00021E  0101               	movlb	1	; () banked
  9049  000220  0E3D               	movlw	low _MessageBuffer
  9050  000222  24F3               	addwf	prodl,w,c
  9051  000224  6ED9               	movwf	fsr2l,c
  9052  000226  0101               	movlb	1	; () banked
  9053  000228  0E01               	movlw	high _MessageBuffer
  9054  00022A  20F4               	addwfc	prodh,w,c
  9055  00022C  6EDA               	movwf	fsr2h,c
  9056  00022E  C020  FFDF         	movff	LowIsr@caracterRx,indf2
  9057  000232                     
  9058                           ; BSR set to: 1
  9059                           ;main.c: 401: globalIndexRx++;
  9060  000232  0100               	movlb	0	; () banked
  9061  000234  0100               	movlb	0	; () banked
  9062  000236  2BDA               	incf	_globalIndexRx& (0+255),f,b
  9063  000238                     
  9064                           ; BSR set to: 0
  9065                           ;main.c: 402: MessageBuffer[globalIndexRx] = '\0';
  9066  000238  0100               	movlb	0	; () banked
  9067  00023A  0100               	movlb	0	; () banked
  9068  00023C  51DA               	movf	_globalIndexRx& (0+255),w,b
  9069  00023E  0D01               	mullw	1
  9070  000240  0101               	movlb	1	; () banked
  9071  000242  0E3D               	movlw	low _MessageBuffer
  9072  000244  24F3               	addwf	prodl,w,c
  9073  000246  6ED9               	movwf	fsr2l,c
  9074  000248  0101               	movlb	1	; () banked
  9075  00024A  0E01               	movlw	high _MessageBuffer
  9076  00024C  20F4               	addwfc	prodh,w,c
  9077  00024E  6EDA               	movwf	fsr2h,c
  9078  000250  0E00               	movlw	0
  9079  000252  6EDF               	movwf	indf2,c
  9080                           
  9081                           ;main.c: 403: } else {
  9082  000254  D005               	goto	i1l3180
  9083  000256                     i1l3178:
  9084                           
  9085                           ;main.c: 404: borrarBufferRx();
  9086  000256  EC07  F016         	call	i1_borrarBufferRx	;wreg free
  9087  00025A  D002               	goto	i1l3180
  9088  00025C  D001               	goto	i1l3180
  9089  00025E  D000               	goto	i1l3180
  9090  000260                     i1l3180:
  9091                           
  9092                           ;main.c: 405: }
  9093                           ;main.c: 406: }
  9094                           ;main.c: 408: if (PIR1bits.SPPIF == 1) {
  9095  000260  AE9E               	btfss	3998,7,c	;volatile
  9096  000262  D001               	goto	i1u198_21
  9097  000264  D001               	goto	i1u198_20
  9098  000266                     i1u198_21:
  9099  000266  D001               	goto	i1l295
  9100  000268                     i1u198_20:
  9101  000268                     
  9102                           ;main.c: 409: PIR1bits.SPPIF = 0;
  9103  000268  9E9E               	bcf	3998,7,c	;volatile
  9104  00026A                     i1l295:
  9105                           
  9106                           ;main.c: 410: }
  9107                           ;main.c: 411: if (PIR1bits.TXIF == 1) {
  9108  00026A  A89E               	btfss	3998,4,c	;volatile
  9109  00026C  D001               	goto	i1u199_21
  9110  00026E  D001               	goto	i1u199_20
  9111  000270                     i1u199_21:
  9112  000270  D001               	goto	i1l296
  9113  000272                     i1u199_20:
  9114  000272                     
  9115                           ;main.c: 412: PIR1bits.TXIF = 0;
  9116  000272  989E               	bcf	3998,4,c	;volatile
  9117  000274                     i1l296:
  9118                           
  9119                           ;main.c: 413: }
  9120                           ;main.c: 414: if (PIR1bits.SSPIF == 1) {
  9121  000274  A69E               	btfss	3998,3,c	;volatile
  9122  000276  D001               	goto	i1u200_21
  9123  000278  D001               	goto	i1u200_20
  9124  00027A                     i1u200_21:
  9125  00027A  D001               	goto	i1l297
  9126  00027C                     i1u200_20:
  9127  00027C                     
  9128                           ;main.c: 415: PIR1bits.SSPIF = 0;
  9129  00027C  969E               	bcf	3998,3,c	;volatile
  9130  00027E                     i1l297:
  9131                           
  9132                           ;main.c: 416: }
  9133                           ;main.c: 417: if (PIR1bits.CCP1IF == 1) {
  9134  00027E  A49E               	btfss	3998,2,c	;volatile
  9135  000280  D001               	goto	i1u201_21
  9136  000282  D001               	goto	i1u201_20
  9137  000284                     i1u201_21:
  9138  000284  D001               	goto	i1l298
  9139  000286                     i1u201_20:
  9140  000286                     
  9141                           ;main.c: 418: PIR1bits.CCP1IF = 0;
  9142  000286  949E               	bcf	3998,2,c	;volatile
  9143  000288                     i1l298:
  9144                           
  9145                           ;main.c: 419: }
  9146                           ;main.c: 420: if (PIR1bits.TMR2IF == 1) {
  9147  000288  A29E               	btfss	3998,1,c	;volatile
  9148  00028A  D001               	goto	i1u202_21
  9149  00028C  D001               	goto	i1u202_20
  9150  00028E                     i1u202_21:
  9151  00028E  D002               	goto	i1l300
  9152  000290                     i1u202_20:
  9153  000290                     
  9154                           ;main.c: 421: PIR1bits.TMR2IF = 0;
  9155  000290  929E               	bcf	3998,1,c	;volatile
  9156  000292  D000               	goto	i1l300
  9157  000294                     i1l300:
  9158  000294  C01F  FFF5         	movff	??_LowIsr+24,tablat
  9159  000298  C01E  FFF8         	movff	??_LowIsr+23,tblptru
  9160  00029C  C01D  FFF7         	movff	??_LowIsr+22,tblptrh
  9161  0002A0  C01C  FFF6         	movff	??_LowIsr+21,tblptrl
  9162  0002A4  C01B  FFF4         	movff	??_LowIsr+20,prodh
  9163  0002A8  C01A  FFF3         	movff	??_LowIsr+19,prodl
  9164  0002AC  C019  FFDA         	movff	??_LowIsr+18,fsr2h
  9165  0002B0  C018  FFD9         	movff	??_LowIsr+17,fsr2l
  9166  0002B4  C017  FFE2         	movff	??_LowIsr+16,fsr1h
  9167  0002B8  C016  FFE1         	movff	??_LowIsr+15,fsr1l
  9168  0002BC  C015  FFEA         	movff	??_LowIsr+14,fsr0h
  9169  0002C0  C014  FFE9         	movff	??_LowIsr+13,fsr0l
  9170  0002C4  C013  FFFB         	movff	??_LowIsr+12,pclatu
  9171  0002C8  C012  FFFA         	movff	??_LowIsr+11,pclath
  9172  0002CC  C011  FFE0         	movff	??_LowIsr+10,bsr
  9173  0002D0  C010  FFE8         	movff	??_LowIsr+9,wreg
  9174  0002D4  C00F  FFD8         	movff	??_LowIsr+8,status
  9175  0002D8  0010               	retfie	
  9176  0002DA                     __end_of_LowIsr:
  9177                           	opt stack 0
  9178                           pclatu	equ	0xFFB
  9179                           pclath	equ	0xFFA
  9180                           tblptru	equ	0xFF8
  9181                           tblptrh	equ	0xFF7
  9182                           tblptrl	equ	0xFF6
  9183                           tablat	equ	0xFF5
  9184                           prodh	equ	0xFF4
  9185                           prodl	equ	0xFF3
  9186                           intcon	equ	0xFF2
  9187                           intcon2	equ	0xFF1
  9188                           indf0	equ	0xFEF
  9189                           postinc0	equ	0xFEE
  9190                           fsr0h	equ	0xFEA
  9191                           fsr0l	equ	0xFE9
  9192                           wreg	equ	0xFE8
  9193                           indf1	equ	0xFE7
  9194                           postdec1	equ	0xFE5
  9195                           fsr1h	equ	0xFE2
  9196                           fsr1l	equ	0xFE1
  9197                           bsr	equ	0xFE0
  9198                           indf2	equ	0xFDF
  9199                           postinc2	equ	0xFDE
  9200                           postdec2	equ	0xFDD
  9201                           fsr2h	equ	0xFDA
  9202                           fsr2l	equ	0xFD9
  9203                           status	equ	0xFD8
  9204                           
  9205 ;; *************** function i1_borrarBufferRx *****************
  9206 ;; Defined at:
  9207 ;;		line 225 in file "main.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;		None
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  borrarBuffer    2    1[COMRAM] int 
  9212 ;; Return value:  Size  Location     Type
  9213 ;;		None               void
  9214 ;; Registers used:
  9215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9221 ;;      Params:         0       0       0       0       0       0       0       0       0
  9222 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9223 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9224 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9225 ;;Total ram usage:        3 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; This function calls:
  9228 ;;		Nothing
  9229 ;; This function is called by:
  9230 ;;		_LowIsr
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text39
  9235  002C0E                     __ptext39:
  9236                           	opt stack 0
  9237  002C0E                     i1_borrarBufferRx:
  9238                           	opt stack 25
  9239                           
  9240                           ;main.c: 227: for (int i = 0; i < 10; i++)
  9241                           
  9242                           ;incstack = 0
  9243                           ;incstack = 0
  9244  002C0E  0E00               	movlw	0
  9245  002C10  6E03               	movwf	i1borrarBufferRx@i+1,c
  9246  002C12  0E00               	movlw	0
  9247  002C14  6E02               	movwf	i1borrarBufferRx@i,c
  9248  002C16  5003               	movf	i1borrarBufferRx@i+1,w,c
  9249  002C18  0A80               	xorlw	128
  9250  002C1A  0F80               	addlw	-128
  9251  002C1C  0E0A               	movlw	10
  9252  002C1E  B4D8               	btfsc	status,2,c
  9253  002C20  5C02               	subwf	i1borrarBufferRx@i,w,c
  9254  002C22  B0D8               	btfsc	status,0,c
  9255  002C24  D00D               	goto	i1l3118
  9256                           
  9257                           ;main.c: 228: MessageBuffer[i] = 0x00;
  9258  002C26  0101               	movlb	1	; () banked
  9259  002C28  0E3D               	movlw	low _MessageBuffer
  9260  002C2A  2402               	addwf	i1borrarBufferRx@i,w,c
  9261  002C2C  6ED9               	movwf	fsr2l,c
  9262  002C2E  0101               	movlb	1	; () banked
  9263  002C30  0E01               	movlw	high _MessageBuffer
  9264  002C32  2003               	addwfc	i1borrarBufferRx@i+1,w,c
  9265  002C34  6EDA               	movwf	fsr2h,c
  9266  002C36  0E00               	movlw	0
  9267  002C38  6EDF               	movwf	indf2,c
  9268                           
  9269                           ; BSR set to: 1
  9270  002C3A  4A02               	infsnz	i1borrarBufferRx@i,f,c
  9271  002C3C  2A03               	incf	i1borrarBufferRx@i+1,f,c
  9272  002C3E  D7EB               	goto	L11
  9273  002C40                     i1l3118:
  9274                           
  9275                           ;main.c: 229: globalIndexRx = 0;
  9276  002C40  6E01               	movwf	??i1_borrarBufferRx& (0+255),c
  9277  002C42  0E00               	movlw	0
  9278  002C44  0100               	movlb	0	; () banked
  9279  002C46  0100               	movlb	0	; () banked
  9280  002C48  6FDA               	movwf	_globalIndexRx& (0+255),b
  9281  002C4A  5001               	movf	??i1_borrarBufferRx& (0+255),w,c
  9282                           
  9283                           ; BSR set to: 0
  9284  002C4C  0012               	return	
  9285  002C4E                     __end_ofi1_borrarBufferRx:
  9286                           	opt stack 0
  9287                           pclatu	equ	0xFFB
  9288                           pclath	equ	0xFFA
  9289                           tblptru	equ	0xFF8
  9290                           tblptrh	equ	0xFF7
  9291                           tblptrl	equ	0xFF6
  9292                           tablat	equ	0xFF5
  9293                           prodh	equ	0xFF4
  9294                           prodl	equ	0xFF3
  9295                           intcon	equ	0xFF2
  9296                           intcon2	equ	0xFF1
  9297                           indf0	equ	0xFEF
  9298                           postinc0	equ	0xFEE
  9299                           fsr0h	equ	0xFEA
  9300                           fsr0l	equ	0xFE9
  9301                           wreg	equ	0xFE8
  9302                           indf1	equ	0xFE7
  9303                           postdec1	equ	0xFE5
  9304                           fsr1h	equ	0xFE2
  9305                           fsr1l	equ	0xFE1
  9306                           bsr	equ	0xFE0
  9307                           indf2	equ	0xFDF
  9308                           postinc2	equ	0xFDE
  9309                           postdec2	equ	0xFDD
  9310                           fsr2h	equ	0xFDA
  9311                           fsr2l	equ	0xFD9
  9312                           status	equ	0xFD8
  9313                           
  9314 ;; *************** function i1_reset_integral *****************
  9315 ;; Defined at:
  9316 ;;		line 123 in file "main.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;		None
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;		None               void
  9323 ;; Registers used:
  9324 ;;		wreg, status,2
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9333 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9334 ;;Total ram usage:        0 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		_LowIsr
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text40
  9344  002D64                     __ptext40:
  9345                           	opt stack 0
  9346  002D64                     i1_reset_integral:
  9347                           	opt stack 25
  9348                           
  9349                           ;main.c: 125: iError1 = 0;
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;incstack = 0
  9353                           ;incstack = 0
  9354  002D64  0E00               	movlw	0
  9355  002D66  6E29               	movwf	_iError1,c
  9356  002D68  0E00               	movlw	0
  9357  002D6A  6E2A               	movwf	_iError1+1,c
  9358  002D6C  0E00               	movlw	0
  9359  002D6E  6E2B               	movwf	_iError1+2,c
  9360  002D70  0E00               	movlw	0
  9361  002D72  6E2C               	movwf	_iError1+3,c
  9362                           
  9363                           ;main.c: 126: iError2 = 0;
  9364  002D74  0E00               	movlw	0
  9365  002D76  6E2D               	movwf	_iError2,c
  9366  002D78  0E00               	movlw	0
  9367  002D7A  6E2E               	movwf	_iError2+1,c
  9368  002D7C  0E00               	movlw	0
  9369  002D7E  6E2F               	movwf	_iError2+2,c
  9370  002D80  0E00               	movlw	0
  9371  002D82  6E30               	movwf	_iError2+3,c
  9372                           
  9373                           ;main.c: 127: tik0i= tik;
  9374  002D84  C0D4  F14F         	movff	_tik,_tik0i
  9375  002D88  C0D5  F150         	movff	_tik+1,_tik0i+1
  9376  002D8C  C0D6  F151         	movff	_tik+2,_tik0i+2
  9377  002D90  C0D7  F152         	movff	_tik+3,_tik0i+3
  9378  002D94  0012               	return	
  9379  002D96                     __end_ofi1_reset_integral:
  9380                           	opt stack 0
  9381                           pclatu	equ	0xFFB
  9382                           pclath	equ	0xFFA
  9383                           tblptru	equ	0xFF8
  9384                           tblptrh	equ	0xFF7
  9385                           tblptrl	equ	0xFF6
  9386                           tablat	equ	0xFF5
  9387                           prodh	equ	0xFF4
  9388                           prodl	equ	0xFF3
  9389                           intcon	equ	0xFF2
  9390                           intcon2	equ	0xFF1
  9391                           indf0	equ	0xFEF
  9392                           postinc0	equ	0xFEE
  9393                           fsr0h	equ	0xFEA
  9394                           fsr0l	equ	0xFE9
  9395                           wreg	equ	0xFE8
  9396                           indf1	equ	0xFE7
  9397                           postdec1	equ	0xFE5
  9398                           fsr1h	equ	0xFE2
  9399                           fsr1l	equ	0xFE1
  9400                           bsr	equ	0xFE0
  9401                           indf2	equ	0xFDF
  9402                           postinc2	equ	0xFDE
  9403                           postdec2	equ	0xFDD
  9404                           fsr2h	equ	0xFDA
  9405                           fsr2l	equ	0xFD9
  9406                           status	equ	0xFD8
  9407                           
  9408 ;; *************** function i1_comenzarADC *****************
  9409 ;; Defined at:
  9410 ;;		line 13 in file "MyADC.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;		None
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;		None
  9415 ;; Return value:  Size  Location     Type
  9416 ;;		None               void
  9417 ;; Registers used:
  9418 ;;		wreg, status,2, status,0, cstack
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/0
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9424 ;;      Params:         0       0       0       0       0       0       0       0       0
  9425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9426 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9427 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9428 ;;Total ram usage:        1 bytes
  9429 ;; Hardware stack levels used:    1
  9430 ;; Hardware stack levels required when called:    1
  9431 ;; This function calls:
  9432 ;;		i1_ConvertADC
  9433 ;;		i1_SetChanADC
  9434 ;; This function is called by:
  9435 ;;		_LowIsr
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text41
  9440  002E74                     __ptext41:
  9441                           	opt stack 0
  9442  002E74                     i1_comenzarADC:
  9443                           	opt stack 24
  9444                           
  9445                           ;MyADC.c: 14: SetChanADC (0b10101111);
  9446                           
  9447                           ;incstack = 0
  9448                           ;incstack = 0
  9449  002E74  6E03               	movwf	??i1_comenzarADC& (0+255),c
  9450  002E76  0EAF               	movlw	175
  9451  002E78  6E01               	movwf	?i1_SetChanADC,c
  9452  002E7A  5003               	movf	??i1_comenzarADC& (0+255),w,c
  9453  002E7C  EC27  F017         	call	i1_SetChanADC	;wreg free
  9454                           
  9455                           ;MyADC.c: 15: ConvertADC();
  9456  002E80  EC5F  F017         	call	i1_ConvertADC	;wreg free
  9457  002E84  0012               	return	
  9458  002E86                     __end_ofi1_comenzarADC:
  9459                           	opt stack 0
  9460                           pclatu	equ	0xFFB
  9461                           pclath	equ	0xFFA
  9462                           tblptru	equ	0xFF8
  9463                           tblptrh	equ	0xFF7
  9464                           tblptrl	equ	0xFF6
  9465                           tablat	equ	0xFF5
  9466                           prodh	equ	0xFF4
  9467                           prodl	equ	0xFF3
  9468                           intcon	equ	0xFF2
  9469                           intcon2	equ	0xFF1
  9470                           indf0	equ	0xFEF
  9471                           postinc0	equ	0xFEE
  9472                           fsr0h	equ	0xFEA
  9473                           fsr0l	equ	0xFE9
  9474                           wreg	equ	0xFE8
  9475                           indf1	equ	0xFE7
  9476                           postdec1	equ	0xFE5
  9477                           fsr1h	equ	0xFE2
  9478                           fsr1l	equ	0xFE1
  9479                           bsr	equ	0xFE0
  9480                           indf2	equ	0xFDF
  9481                           postinc2	equ	0xFDE
  9482                           postdec2	equ	0xFDD
  9483                           fsr2h	equ	0xFDA
  9484                           fsr2l	equ	0xFD9
  9485                           status	equ	0xFD8
  9486                           
  9487 ;; *************** function i1_SetChanADC *****************
  9488 ;; Defined at:
  9489 ;;		line 31 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/ADC/adcsetch.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  channel         1    0[COMRAM] unsigned char 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;		None               void
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9503 ;;      Params:         1       0       0       0       0       0       0       0       0
  9504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9505 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9506 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9507 ;;Total ram usage:        2 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; This function calls:
  9510 ;;		Nothing
  9511 ;; This function is called by:
  9512 ;;		i1_comenzarADC
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text42
  9517  002E4E                     __ptext42:
  9518                           	opt stack 0
  9519  002E4E                     i1_SetChanADC:
  9520                           	opt stack 24
  9521                           
  9522                           ;incstack = 0
  9523                           ;incstack = 0
  9524  002E4E  CFC2 F002          	movff	4034,??i1_SetChanADC	;volatile
  9525  002E52  0EC3               	movlw	195
  9526  002E54  1602               	andwf	??i1_SetChanADC,f,c
  9527  002E56  90D8               	bcf	status,0,c
  9528  002E58  3001               	rrcf	i1SetChanADC@channel,w,c
  9529  002E5A  0B3C               	andlw	60
  9530  002E5C  1002               	iorwf	??i1_SetChanADC,w,c
  9531  002E5E  6EC2               	movwf	4034,c	;volatile
  9532  002E60  0012               	return	
  9533  002E62                     __end_ofi1_SetChanADC:
  9534                           	opt stack 0
  9535                           pclatu	equ	0xFFB
  9536                           pclath	equ	0xFFA
  9537                           tblptru	equ	0xFF8
  9538                           tblptrh	equ	0xFF7
  9539                           tblptrl	equ	0xFF6
  9540                           tablat	equ	0xFF5
  9541                           prodh	equ	0xFF4
  9542                           prodl	equ	0xFF3
  9543                           intcon	equ	0xFF2
  9544                           intcon2	equ	0xFF1
  9545                           indf0	equ	0xFEF
  9546                           postinc0	equ	0xFEE
  9547                           fsr0h	equ	0xFEA
  9548                           fsr0l	equ	0xFE9
  9549                           wreg	equ	0xFE8
  9550                           indf1	equ	0xFE7
  9551                           postdec1	equ	0xFE5
  9552                           fsr1h	equ	0xFE2
  9553                           fsr1l	equ	0xFE1
  9554                           bsr	equ	0xFE0
  9555                           indf2	equ	0xFDF
  9556                           postinc2	equ	0xFDE
  9557                           postdec2	equ	0xFDD
  9558                           fsr2h	equ	0xFDA
  9559                           fsr2l	equ	0xFD9
  9560                           status	equ	0xFD8
  9561                           
  9562 ;; *************** function i1_ConvertADC *****************
  9563 ;; Defined at:
  9564 ;;		line 23 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/ADC/adcconv.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;		None
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;		None
  9569 ;; Return value:  Size  Location     Type
  9570 ;;		None               void
  9571 ;; Registers used:
  9572 ;;		None
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9578 ;;      Params:         0       0       0       0       0       0       0       0       0
  9579 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9581 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9582 ;;Total ram usage:        0 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		i1_comenzarADC
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text43
  9592  002EBE                     __ptext43:
  9593                           	opt stack 0
  9594  002EBE                     i1_ConvertADC:
  9595                           	opt stack 24
  9596                           
  9597                           ;incstack = 0
  9598                           ;incstack = 0
  9599  002EBE  82C2               	bsf	4034,1,c	;volatile
  9600  002EC0  0012               	return	
  9601  002EC2                     __end_ofi1_ConvertADC:
  9602                           	opt stack 0
  9603                           pclatu	equ	0xFFB
  9604                           pclath	equ	0xFFA
  9605                           tblptru	equ	0xFF8
  9606                           tblptrh	equ	0xFF7
  9607                           tblptrl	equ	0xFF6
  9608                           tablat	equ	0xFF5
  9609                           prodh	equ	0xFF4
  9610                           prodl	equ	0xFF3
  9611                           intcon	equ	0xFF2
  9612                           intcon2	equ	0xFF1
  9613                           indf0	equ	0xFEF
  9614                           postinc0	equ	0xFEE
  9615                           fsr0h	equ	0xFEA
  9616                           fsr0l	equ	0xFE9
  9617                           wreg	equ	0xFE8
  9618                           indf1	equ	0xFE7
  9619                           postdec1	equ	0xFE5
  9620                           fsr1h	equ	0xFE2
  9621                           fsr1l	equ	0xFE1
  9622                           bsr	equ	0xFE0
  9623                           indf2	equ	0xFDF
  9624                           postinc2	equ	0xFDE
  9625                           postdec2	equ	0xFDD
  9626                           fsr2h	equ	0xFDA
  9627                           fsr2l	equ	0xFD9
  9628                           status	equ	0xFD8
  9629                           
  9630 ;; *************** function _ReadUSART *****************
  9631 ;; Defined at:
  9632 ;;		line 16 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/USART/uread.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;		None
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;  data            1    0[COMRAM] unsigned char 
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  1    wreg      unsigned char 
  9639 ;; Registers used:
  9640 ;;		wreg, status,2, status,0
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9646 ;;      Params:         0       0       0       0       0       0       0       0       0
  9647 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9649 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9650 ;;Total ram usage:        1 bytes
  9651 ;; Hardware stack levels used:    1
  9652 ;; This function calls:
  9653 ;;		Nothing
  9654 ;; This function is called by:
  9655 ;;		_LowIsr
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text44
  9660  002DE2                     __ptext44:
  9661                           	opt stack 0
  9662  002DE2                     _ReadUSART:
  9663                           	opt stack 25
  9664                           
  9665                           ;incstack = 0
  9666                           ;incstack = 0
  9667  002DE2  0EF2               	movlw	242
  9668  002DE4  1627               	andwf	_USART_Status,f,c
  9669  002DE6  ACAB               	btfss	4011,6,c	;volatile
  9670  002DE8  D003               	goto	i1l432
  9671  002DEA  9027               	bcf	_USART_Status,0,c
  9672  002DEC  B0AB               	btfsc	4011,0,c	;volatile
  9673  002DEE  8027               	bsf	_USART_Status,0,c
  9674  002DF0                     i1l432:
  9675  002DF0  B4AB               	btfsc	4011,2,c	;volatile
  9676  002DF2  8427               	bsf	_USART_Status,2,c
  9677  002DF4  B2AB               	btfsc	4011,1,c	;volatile
  9678  002DF6  8627               	bsf	_USART_Status,3,c
  9679  002DF8  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  9680  002DFC  5001               	movf	ReadUSART@data,w,c
  9681  002DFE  0012               	return	
  9682  002E00                     __end_of_ReadUSART:
  9683                           	opt stack 0
  9684                           pclatu	equ	0xFFB
  9685                           pclath	equ	0xFFA
  9686                           tblptru	equ	0xFF8
  9687                           tblptrh	equ	0xFF7
  9688                           tblptrl	equ	0xFF6
  9689                           tablat	equ	0xFF5
  9690                           prodh	equ	0xFF4
  9691                           prodl	equ	0xFF3
  9692                           intcon	equ	0xFF2
  9693                           intcon2	equ	0xFF1
  9694                           indf0	equ	0xFEF
  9695                           postinc0	equ	0xFEE
  9696                           fsr0h	equ	0xFEA
  9697                           fsr0l	equ	0xFE9
  9698                           wreg	equ	0xFE8
  9699                           indf1	equ	0xFE7
  9700                           postdec1	equ	0xFE5
  9701                           fsr1h	equ	0xFE2
  9702                           fsr1l	equ	0xFE1
  9703                           bsr	equ	0xFE0
  9704                           indf2	equ	0xFDF
  9705                           postinc2	equ	0xFDE
  9706                           postdec2	equ	0xFDD
  9707                           fsr2h	equ	0xFDA
  9708                           fsr2l	equ	0xFD9
  9709                           status	equ	0xFD8
  9710                           
  9711 ;; *************** function _getADC *****************
  9712 ;; Defined at:
  9713 ;;		line 18 in file "MyADC.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;		None
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;		None
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  4    2[COMRAM] unsigned long 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2, cstack
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9727 ;;      Params:         4       0       0       0       0       0       0       0       0
  9728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9730 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9731 ;;Total ram usage:        4 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; Hardware stack levels required when called:    1
  9734 ;; This function calls:
  9735 ;;		_ReadADC
  9736 ;; This function is called by:
  9737 ;;		_LowIsr
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text45
  9742  002E36                     __ptext45:
  9743                           	opt stack 0
  9744  002E36                     _getADC:
  9745                           	opt stack 24
  9746                           
  9747                           ;MyADC.c: 19: return (uint32_t)ReadADC();
  9748                           
  9749                           ;incstack = 0
  9750                           ;incstack = 0
  9751  002E36  EC52  F017         	call	_ReadADC	;wreg free
  9752  002E3A  C001  F003         	movff	?_ReadADC,?_getADC
  9753  002E3E  C002  F004         	movff	?_ReadADC+1,?_getADC+1
  9754  002E42  0E00               	movlw	0
  9755  002E44  BE04               	btfsc	?_getADC+1,7,c
  9756  002E46  0EFF               	movlw	-1
  9757  002E48  6E05               	movwf	?_getADC+2,c
  9758  002E4A  6E06               	movwf	?_getADC+3,c
  9759  002E4C  0012               	return	
  9760  002E4E                     __end_of_getADC:
  9761                           	opt stack 0
  9762                           pclatu	equ	0xFFB
  9763                           pclath	equ	0xFFA
  9764                           tblptru	equ	0xFF8
  9765                           tblptrh	equ	0xFF7
  9766                           tblptrl	equ	0xFF6
  9767                           tablat	equ	0xFF5
  9768                           prodh	equ	0xFF4
  9769                           prodl	equ	0xFF3
  9770                           intcon	equ	0xFF2
  9771                           intcon2	equ	0xFF1
  9772                           indf0	equ	0xFEF
  9773                           postinc0	equ	0xFEE
  9774                           fsr0h	equ	0xFEA
  9775                           fsr0l	equ	0xFE9
  9776                           wreg	equ	0xFE8
  9777                           indf1	equ	0xFE7
  9778                           postdec1	equ	0xFE5
  9779                           fsr1h	equ	0xFE2
  9780                           fsr1l	equ	0xFE1
  9781                           bsr	equ	0xFE0
  9782                           indf2	equ	0xFDF
  9783                           postinc2	equ	0xFDE
  9784                           postdec2	equ	0xFDD
  9785                           fsr2h	equ	0xFDA
  9786                           fsr2l	equ	0xFD9
  9787                           status	equ	0xFD8
  9788                           
  9789 ;; *************** function _ReadADC *****************
  9790 ;; Defined at:
  9791 ;;		line 25 in file "/opt/microchip/xc8/v1.21/sources/pic18/plib/ADC/adcread.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;		None
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  2    0[COMRAM] int 
  9798 ;; Registers used:
  9799 ;;		wreg, status,2
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9805 ;;      Params:         2       0       0       0       0       0       0       0       0
  9806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9808 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9809 ;;Total ram usage:        2 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; This function calls:
  9812 ;;		Nothing
  9813 ;; This function is called by:
  9814 ;;		_getADC
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text46
  9819  002EA4                     __ptext46:
  9820                           	opt stack 0
  9821  002EA4                     _ReadADC:
  9822                           	opt stack 24
  9823                           
  9824                           ;incstack = 0
  9825                           ;incstack = 0
  9826  002EA4  50C4               	movf	4036,w,c	;volatile
  9827  002EA6  6E02               	movwf	?_ReadADC+1,c
  9828  002EA8  50C3               	movf	4035,w,c	;volatile
  9829  002EAA  6E01               	movwf	?_ReadADC,c
  9830  002EAC  0012               	return	
  9831  002EAE                     __end_of_ReadADC:
  9832                           	opt stack 0
  9833                           pclatu	equ	0xFFB
  9834                           pclath	equ	0xFFA
  9835                           tblptru	equ	0xFF8
  9836                           tblptrh	equ	0xFF7
  9837                           tblptrl	equ	0xFF6
  9838                           tablat	equ	0xFF5
  9839                           prodh	equ	0xFF4
  9840                           prodl	equ	0xFF3
  9841                           intcon	equ	0xFF2
  9842                           intcon2	equ	0xFF1
  9843                           indf0	equ	0xFEF
  9844                           postinc0	equ	0xFEE
  9845                           fsr0h	equ	0xFEA
  9846                           fsr0l	equ	0xFE9
  9847                           wreg	equ	0xFE8
  9848                           indf1	equ	0xFE7
  9849                           postdec1	equ	0xFE5
  9850                           fsr1h	equ	0xFE2
  9851                           fsr1l	equ	0xFE1
  9852                           bsr	equ	0xFE0
  9853                           indf2	equ	0xFDF
  9854                           postinc2	equ	0xFDE
  9855                           postdec2	equ	0xFDD
  9856                           fsr2h	equ	0xFDA
  9857                           fsr2l	equ	0xFD9
  9858                           status	equ	0xFD8
  9859                           pclatu	equ	0xFFB
  9860                           pclath	equ	0xFFA
  9861                           tblptru	equ	0xFF8
  9862                           tblptrh	equ	0xFF7
  9863                           tblptrl	equ	0xFF6
  9864                           tablat	equ	0xFF5
  9865                           prodh	equ	0xFF4
  9866                           prodl	equ	0xFF3
  9867                           intcon	equ	0xFF2
  9868                           intcon2	equ	0xFF1
  9869                           indf0	equ	0xFEF
  9870                           postinc0	equ	0xFEE
  9871                           fsr0h	equ	0xFEA
  9872                           fsr0l	equ	0xFE9
  9873                           wreg	equ	0xFE8
  9874                           indf1	equ	0xFE7
  9875                           postdec1	equ	0xFE5
  9876                           fsr1h	equ	0xFE2
  9877                           fsr1l	equ	0xFE1
  9878                           bsr	equ	0xFE0
  9879                           indf2	equ	0xFDF
  9880                           postinc2	equ	0xFDE
  9881                           postdec2	equ	0xFDD
  9882                           fsr2h	equ	0xFDA
  9883                           fsr2l	equ	0xFD9
  9884                           status	equ	0xFD8
  9885                           
  9886                           	psect	rparam
  9887  0000                     pclatu	equ	0xFFB
  9888                           pclath	equ	0xFFA
  9889                           tblptru	equ	0xFF8
  9890                           tblptrh	equ	0xFF7
  9891                           tblptrl	equ	0xFF6
  9892                           tablat	equ	0xFF5
  9893                           prodh	equ	0xFF4
  9894                           prodl	equ	0xFF3
  9895                           intcon	equ	0xFF2
  9896                           intcon2	equ	0xFF1
  9897                           indf0	equ	0xFEF
  9898                           postinc0	equ	0xFEE
  9899                           fsr0h	equ	0xFEA
  9900                           fsr0l	equ	0xFE9
  9901                           wreg	equ	0xFE8
  9902                           indf1	equ	0xFE7
  9903                           postdec1	equ	0xFE5
  9904                           fsr1h	equ	0xFE2
  9905                           fsr1l	equ	0xFE1
  9906                           bsr	equ	0xFE0
  9907                           indf2	equ	0xFDF
  9908                           postinc2	equ	0xFDE
  9909                           postdec2	equ	0xFDD
  9910                           fsr2h	equ	0xFDA
  9911                           fsr2l	equ	0xFD9
  9912                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    0
    Data        30
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      64
    BANK0           160     80     147
    BANK1           256     61      87
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?_ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?_ReadADC	int  size(2) Largest target is 0

    ?_atoi	int  size(2) Largest target is 0

    ?_atol	long  size(2) Largest target is 0

    ?_itoa	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    ?_ltoa	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    ?_utoa	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    ?_controlador	long  size(2) Largest target is 0

    ?___aldiv	long  size(2) Largest target is 0

    ?_calcPID	long  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___lmul	unsigned long  size(2) Largest target is 0

    ?_labs	long  size(2) Largest target is 0

    ?_getADC	unsigned long  size(2) Largest target is 0

    ultoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 5
		 -> parserRx@argumento(BANK0[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> parserRx@argumento(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> enviarEstadoConsola@buffer(BANK0[10]), 

    sendStr@dataPtr	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_36(CODE[3]), STR_35(CODE[2]), STR_34(CODE[6]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[6]), STR_29(CODE[2]), 
		 -> STR_28(CODE[6]), STR_27(CODE[2]), STR_26(CODE[6]), STR_25(CODE[2]), 
		 -> STR_24(CODE[7]), STR_23(CODE[2]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[7]), STR_19(CODE[2]), STR_18(CODE[7]), STR_17(CODE[2]), 
		 -> STR_16(CODE[6]), STR_15(CODE[2]), STR_14(CODE[6]), STR_13(CODE[2]), 
		 -> STR_12(CODE[6]), STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[2]), 
		 -> STR_8(CODE[5]), STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[2]), 
		 -> STR_4(CODE[6]), STR_3(CODE[2]), enviarEstadoConsola@buffer(BANK0[10]), STR_2(CODE[5]), 
		 -> STR_1(CODE[2]), 

    controlador@dutyPWM	PTR unsigned long  size(2) Largest target is 4
		 -> dutyPWM(BANK0[4]), 

    controlador@dirGiro	PTR unsigned char  size(2) Largest target is 1
		 -> main@dirGiro(BANK0[1]), 

    calcPID@iErrorPtr	PTR long  size(2) Largest target is 4
		 -> iError2(COMRAM[4]), iError1(COMRAM[4]), 

    calcPID@lastErrorPtr	PTR long  size(2) Largest target is 4
		 -> controlador@lastError2(COMRAM[4]), controlador@lastError1(COMRAM[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowIsr in COMRAM

    _LowIsr->_getADC
    i1_comenzarADC->i1_SetChanADC
    _getADC->_ReadADC

Critical Paths under _main in BANK0

    _main->_controlador
    _accionDeControl->_setActuador
    _parserRx->_atol
    _setActuador->_labs
    _setActuador->_setDUTY
    _setDUTY->_SetDCPWM1
    _atoi->___wmul
    _atol->___lmul
    _enviarEstadoConsola->_ltoa
    _itoa->_utoa
    _utoa->___lwdiv
    _ltoa->_ultoa
    _ultoa->___lldiv
    _ConfigUSART->_OpenUSART
    _ConfigPWM->_SetDCPWM1
    _controlador->_calcPID
    _calcPID->___lldiv
    ___lldiv->___lmul
    _comenzarADC->_SetChanADC
    _ConfigADC->_OpenADC

Critical Paths under _LowIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_enviarEstadoConsola

Critical Paths under _LowIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowIsr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11042
                                             78 BANK0      2     2      0
                          _ConfigADC
                        _comenzarADC
                        _controlador
                          _ConfigPWM
                        _ConfigUSART
                _enviarEstadoConsola
                           _parserRx
                     _borrarBufferRx
                         _OpenTimer1
                    _accionDeControl
 ---------------------------------------------------------------------------------
 (1) _accionDeControl                                      2     1      1     257
                                             13 BANK0      2     1      1
                        _setActuador
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      93
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _borrarBufferRx                                       3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _parserRx                                            17    17      0    2589
                                             26 BANK0     17    17      0
                               _labs
                     _reset_integral
                               _atol
                               _atoi
                        _setActuador
 ---------------------------------------------------------------------------------
 (2) _setActuador                                          5     0      5     226
                                              8 BANK0      5     0      5
                               _labs (ARG)
                            _setDUTY
 ---------------------------------------------------------------------------------
 (3) _setDUTY                                              2     0      2     130
                                              6 BANK0      2     0      2
                          _SetDCPWM1
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     665
                                              6 BANK0      8     6      2
                            _isdigit
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     232
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _atol                                                14    10      4     705
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     2      1      99
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _reset_integral                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviarEstadoConsola                                 72    11     61    4890
                                             49 BANK0     11    11      0
                                              0 BANK1     61     0     61
                            _sendStr
                               _utoa
                               _ltoa
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1146
                                             17 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6     913
                                              8 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     232
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     241
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ltoa                                                10     2      8    1143
                                             39 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (3) _ultoa                                               13     5      8     910
                                             26 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     232
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _sendStr                                              2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          1     1      0     310
                                              3 BANK0      1     1      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     0      3     310
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ConfigPWM                                            1     1      0     192
                                              6 BANK0      1     1      0
                          _SetDCPWM1
                         _OpenTimer2
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (2) _OpenPWM1                                             1     0      1      31
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     0      1      62
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _SetDCPWM1                                            6     4      2      99
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _controlador                                         28     4     24    2284
                                             74 BANK0      4     4      0
                                              0 BANK1     24     0     24
                            _calcPID
                               _labs
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     445
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) _labs                                                 8     4      4      93
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _calcPID                                             48    24     24    1071
                                             26 BANK0     48    24     24
                               _labs
                             ___lmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     241
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     136
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _comenzarADC                                          1     1      0      31
                                              2 BANK0      1     1      0
                         _SetChanADC
                         _ConvertADC
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     1      1      31
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _ConfigADC                                            3     3      0     217
                                              5 BANK0      3     3      0
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     217
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _LowIsr                                              26    26      0     364
                                              6 COMRAM    26    26      0
                             _getADC
                          _ReadUSART
                      i1_comenzarADC
                   i1_reset_integral
                   i1_borrarBufferRx
 ---------------------------------------------------------------------------------
 (6) i1_borrarBufferRx                                     3     3      0     223
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) i1_reset_integral                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_comenzarADC                                        1     1      0      73
                                              2 COMRAM     1     1      0
                       i1_ConvertADC
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (7) i1_SetChanADC                                         2     1      1      73
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _getADC                                               4     0      4       0
                                              2 COMRAM     4     0      4
                            _ReadADC
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigADC
     _OpenADC
   _comenzarADC
     _SetChanADC
     _ConvertADC
   _controlador
     _calcPID
       _labs
       ___lmul
       ___lldiv
         ___lmul (ARG)
     _labs
     ___aldiv
     ___lmul
   _ConfigPWM
     _SetDCPWM1
     _OpenTimer2
     _OpenPWM1
   _ConfigUSART
     _OpenUSART
   _enviarEstadoConsola
     _sendStr
     _utoa
       ___lwdiv
       ___lwmod
     _ltoa
       _ultoa
         ___lldiv
           ___lmul (ARG)
         ___llmod
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _parserRx
     _labs
     _reset_integral
     _atol
       ___lmul
       _isdigit
     _atoi
       _isdigit
       ___wmul
     _setActuador
       _labs (ARG)
       _setDUTY (ARG)
         _SetDCPWM1
   _borrarBufferRx
   _OpenTimer1
   _accionDeControl
     _setActuador
       _labs (ARG)
       _setDUTY (ARG)
         _SetDCPWM1

 _LowIsr (ROOT)
   _getADC
     _ReadADC
   _ReadUSART
   i1_comenzarADC
     i1_ConvertADC
     i1_SetChanADC
   i1_reset_integral
   i1_borrarBufferRx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3D      57       7       34.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      93       5       91.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      40       1       67.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       A       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A      20        0.0%
DATA                 0      0     134       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Sep 28 00:20:20 2018

                          ?_comenzarADC 0001                         borrarBufferRx@i 0061  
                      LowIsr@caracterRx 0020                                      l33 16A6  
                                    l41 1BD4                                      l83 2A66  
                                    l93 1034                                      _Kd 00B0  
                                    _Ki 00B8                                      _Kp 00E1  
                                    _dt 0147                 __end_of_accionDeControl 21C8  
                                    bsr 000FE0                     ___wmul@multiplicand 0062  
                           __CFG_BORV$3 000000                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                   controlador@lastError1 0031  
                 controlador@lastError2 0035                                     l241 12FA  
                                   l322 2994                                     l420 28F8  
                                   l412 28B4                                     l236 121C  
                                   l421 28FA                                     l237 122E  
                                   l414 28C8                                     l246 13F4  
                                   l423 2916                                     l415 28CA  
                                   l271 26B8                                     l600 22D8  
                                   l272 26BC                                     l601 22E0  
                                   l273 26C2                                     l249 1508  
                                   l418 28E8                                     l274 26E2  
                                   l419 28EA                                     l371 2D14  
                                   l284 21C6                                     l373 2D2C  
                                   l277 2138                                     l614 1F3E  
                                   l606 1DEA                                     l374 2D2E  
                                   l615 1F4E                                     l388 2DDC  
                                   l389 2DDE                                     l925 23DA  
                                   l935 258A                                     l890 2490  
                                   l895 2B64                                     l896 2B74  
                                   l993 206E                            __CFG_CPB$OFF 000000  
                                   _PR2 000FCB                            __CFG_CPD$OFF 000000  
                                   _Kd2 00B4                                     _Ki2 00BC  
                                   _Kp2 00E5                            __CFG_BOR$OFF 000000  
                                   _tik 00D4                                     fsr2 000FD9  
                  ?_enviarEstadoConsola 0100                                     prod 000FF3  
                                   wreg 000FE8                            __CFG_FOSC$HS 000000  
                         _globalIndexRx 00DA                             main@dirGiro 00AF  
                          __CFG_LVP$OFF 000000                  __end_of_borrarBufferRx 2B1E  
                          __CFG_WDT$OFF 000000                                    l1008 263C  
                                  l1018 288E                                    l4012 287A  
                                  l4004 282C                                    l4006 283E  
                                  l4008 2846                            ?_controlador 0100  
                                  l3252 1616                                    l3502 23F4  
                                  l3512 243E                                    l3600 1286  
                                  l3362 2A98                                    l3602 12AA  
                                  l3620 1358                                    l3604 12D2  
                                  l3278 1BE8                                    l3550 2BA8  
                                  l3622 1380                                    l3712 2296  
                                  l3704 2226                                    l3624 13A8  
                                  l3538 29DC                                    l3722 26A4  
                                  l3626 13D0                                    l3570 10B2  
                                  l3562 105A                                    l3802 1A02  
                                  l3708 2236                                    l3580 112C  
                                  l3572 10D0                                    l3740 2B0C  
                                  l3910 2C82                                    l3726 26C8  
                                  l3638 1452                                    l3590 11F4  
                                  l3582 1154                                    l3646 149C  
                                  l3574 1100                                    l3920 231E  
                                  l3496 1010                                    l3680 1EEA  
                                  l3584 117C                                    l3816 2D16  
                                  l3832 2148                                    l3922 2338  
                                  l3674 1E66                                    l3690 21CA  
                                  l3586 11A4                                    l3578 1122  
                                  l3842 219E                                    l3932 23BE  
                                  l3924 2340                                    l3940 24E8  
                                  l3668 1E58                                    l3692 21D2  
                                  l3588 11CC                                    l3844 21A4  
                                  l3870 1D0C                                    l3862 1CB6  
                                  l3942 2502                                    l3790 185E  
                                  l3880 1D92                                    l3872 1D14  
                                  l3856 1C86                                    l3944 250A  
                                  l3954 1F60                                    l3868 1CF2  
                                  l3884 1DAE                                    l3948 256E  
                                  l3964 1FD4                                    l3894 26FE  
                                  l3798 1900                                    l3888 1DD8  
                                  l3984 25C8                                    l3898 2736  
                                  l3986 25DA                                    l3996 2628  
                                  l3988 25E2                                    STR_1 086B  
                                  STR_2 0861                                    STR_3 0869  
                                  STR_4 084C                                    STR_5 0869  
                                  STR_6 0857                                    STR_7 0869  
                                  STR_8 0852                                    STR_9 0869  
                                  u2210 2A8E                                    u2220 2ABC  
                                  u2065 1BC4                                    u2217 2A88  
                                  u2227 2AB6                                    u2085 2BD4  
                                  u2245 08A6                                    _TMR2 000FCC  
                                  _labs 2B1E                                    _atoi 21C8  
                                  _atol 1DEA                                    _main 17FA  
                                  _ctrl 0021                                    _tik0 014B  
                                  _itoa 2B76                                    _ltoa 2998  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                                    _utoa 23EC  
       enviarEstadoConsola@potenciaStep 012D                                    pclat 000FFA  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 02DA                           __CFG_IESO$OFF 000000  
                   __end_of_ConfigUSART 2DC0                         parserRx@dirGiro 007D  
                         __CFG_MCLRE$ON 000000                         __end_of_ReadADC 2EAE  
                       parserRx@comando 007C                         __end_of_OpenADC 2998  
             __size_ofi1_borrarBufferRx 0040                           __CFG_PLLDIV$2 000000  
                        __CFG_CCP2MX$ON 000000                         __end_of___aldiv 1DEA  
                                 ?_labs 0060                                   ?_atoi 0066  
                                 ?_atol 006C                                   ?_main 0001  
                                 ?_itoa 0071                                   STR_10 085C  
                                 ?_ltoa 0087                                   STR_11 0869  
                                 STR_12 0834                                   STR_20 0807  
                                 STR_21 0869                                   STR_13 0869  
                                 STR_30 082E                                   STR_14 0822  
                                 STR_22 0800                                   STR_31 0869  
                                 STR_23 0869                                   STR_15 0869  
                                 STR_32 0828                                   STR_16 081C  
                                 STR_24 0815                                   STR_33 0869  
                                 STR_25 0869                                   STR_17 0869  
                                 STR_34 0846                                   STR_26 083A  
                                 STR_18 080E                                   STR_27 0869  
                                 STR_19 0869                                   STR_35 086D  
                                 STR_36 0866                                   STR_28 0840  
                                 STR_29 0869                         __end_of___lldiv 23EC  
                                 ?_utoa 0068                                   _T1CON 000FCD  
                       __end_of___llmod 259C                                   _T2CON 000FCA  
                       __end_of_calcPID 17FA                         __end_of___lwdiv 2646  
                                 i1l300 0294                                   i1l432 2DF0  
                       __end_of___lwmod 2898                                   i1l290 0260  
                                 i1l291 0208                                   i1l292 025E  
                                 i1l293 0256                                   i1l294 025C  
                                 i1l295 026A                                   i1l287 01DE  
                                 i1l296 0274                                   i1l288 01DC  
                                 i1l297 027E                                   i1l289 01D2  
                                 i1l298 0288                                   i1l299 0294  
                                 _RCREG 000FAE                                   _RCSTA 000FAB  
                 ??_enviarEstadoConsola 0091                                   _TMR1H 000FCF  
                                 _TMR1L 000FCE                                   _SPBRG 000FAF  
                         __CFG_USBDIV$1 000000                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                           __CFG_PWRT$OFF 000000  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                     ___lmul@multiplicand 0064  
                         __CFG_WRT3$OFF 000000                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                                 _doPID 00D9                           __CFG_WRTD$OFF 000000  
                        __CFG_EBTRB$OFF 000000                                   _error 00C8  
                                 _tik0i 014F                         ?_borrarBufferRx 0001  
                       __end_of_isdigit 2C8C                         __end_of_setDUTY 2EA4  
                                 labs@l 0060                                   atoi@a 006C  
                                 atol@a 0075                                   atol@c 0079  
                                 atoi@s 0066                                   atol@s 006C  
                 enviarEstadoConsola@Kd 0118                   enviarEstadoConsola@Ki 0114  
                 enviarEstadoConsola@Kp 0110                                   _ultoa 1F50  
                            _ConvertADC 2EBA                         __end_of_sendStr 2AC4  
                                 tablat 000FF5                                   utoa@c 0070  
                                 utoa@v 006E                                   status 000FD8  
                        __CFG_ICPRT$OFF 000000                          __CFG_PBADEN$ON 000000  
                       __initialization 2780                            ?_setActuador 0068  
                          __end_of_labs 2B76                            __end_of_atoi 22E2  
                          __end_of_atol 1F50                            __end_of_main 1A26  
                          __end_of_itoa 2BC6                            __end_of_ltoa 2A02  
                          __end_of_utoa 24C6                        ?_accionDeControl 006D  
                      __end_of_OpenPWM1 2E96                                  ??_labs 0064  
                                ??_atoi 0068                                  ??_atol 0070  
                                ??_main 00AE                                  ??_itoa 0077  
                                ??_ltoa 008F                                  ??_utoa 006E  
                         __activetblptr 000002                              _SetChanADC 2E00  
                    __size_of_ConfigADC 0036                      __size_of_ConfigPWM 003C  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                                _ADCON2 000FC0                        parserRx@potencia 0081  
                      ___llmod@dividend 0060                                  _ADRESH 000FC4  
                                _ADRESL 000FC3                                  _CCPR1L 000FBE  
                __size_ofi1_comenzarADC 0012                                  ?_ultoa 007A  
                                i1l3140 0088                                  i1l3132 005C  
                                i1l3118 2C40                                  i1l3150 00F6  
                                i1l3142 0090                                  i1l3134 0064  
                                i1l3152 0152                                  i1l3144 0092  
                                i1l3136 006C                                  i1l3160 01DE  
                                i1l3170 0208                                  i1l3162 01E6  
                                i1l3154 0162                                  i1l3146 00A6  
                                i1l3138 006E                                  i1l3172 0216  
                                i1l3164 01E8                                  i1l3180 0260  
                                i1l3156 01CC                                  i1l3148 00F2  
                                i1l3190 0290                                  i1l3182 0268  
                                i1l3174 0232                                  i1l3166 01EE  
                                i1l3158 01D2                                  i1l3184 0272  
                                i1l3176 0238                                  i1l3168 01FA  
                                i1l3186 027C                                  i1l3178 0256  
                                i1l3188 0286                             _ConfigUSART 2D96  
                            _OpenTimer1 2CFE                              _OpenTimer2 2DC0  
                    __size_of_ReadUSART 001E                                  _TMR1IE 007CE8  
                                _SPBRGH 000FB0                      __size_of_SetDCPWM1 0048  
                             ??_ReadADC 0003                               ??_OpenADC 0063  
enviarEstadoConsola@dutyPWMlimitTimeout 0139                          __CFG_XINST$OFF 000000  
                                _LowIsr 0018                      __size_of_OpenUSART 0080  
                                ___lmul 26E4                               ??___aldiv 0068  
                                ___wmul 2A02                                  _getADC 2E36  
                        __CFG_STVREN$ON 000000                               ??___lldiv 0074  
                             ??___llmod 0068                               ??_calcPID 0092  
                             ??___lwdiv 0064                               ??___lwmod 0064  
                      OpenTimer1@config 0060                    __size_of_comenzarADC 001A  
                      OpenTimer2@config 0060                                  clear_0 2786  
                                clear_1 2792                                  clear_2 279E  
                enviarEstadoConsola@Kd2 0124                  enviarEstadoConsola@Ki2 0120  
                enviarEstadoConsola@Kp2 011C                        __end_of_parserRx 150A  
                enviarEstadoConsola@tik 0100                                  itoa@cp 0077  
                          __pdataCOMRAM 0039                               ??_isdigit 0061  
                             ??_setDUTY 0068                                  ltoa@cp 008F  
                          __mediumconst 0000                               ??_sendStr 0062  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                          calcPID@epsilon 009A  
                           setDUTY@duty 0066                                  ultoa@c 0086  
                                ultoa@v 0082                             ?_ConvertADC 0001  
                         _MessageBuffer 013D                controlador@accionControl 00AA  
                     ?i1_reset_integral 0001                 __size_of_reset_integral 0032  
                            __accesstop 0060                 __end_of__initialization 2804  
                  __size_of_controlador 0218                      ??i1_reset_integral 0001  
                    setActuador@dirGiro 006C                       __end_of_ConfigADC 2CFE  
                     __end_of_ConfigPWM 2CC8                          __pcstackCOMRAM 0001  
                    setActuador@dutyPWM 0068                            __pidataBANK0 2E62  
                          __pidataBANK1 2EB6                           i1_comenzarADC 2E74  
                      i1_borrarBufferRx 2C0E                           __end_of_ultoa 20A0  
                     parserRx@argumento 0085                       __end_of_ReadUSART 2E00  
                     __end_of_SetDCPWM1 2C0E                     i1SetChanADC@channel 0001  
                           ?_SetChanADC 0060                           ReadUSART@data 0001  
                     __end_of_OpenUSART 2918                            calcPID@error 007A  
                          calcPID@omega 00A6                                 ??_ultoa 0082  
                            __pbssBANK0 00B0                              __pbssBANK1 013D  
                           ?_OpenTimer1 0060                             ?_OpenTimer2 0060  
            enviarEstadoConsola@dirStep 0129                     _dutyPWMlimitCounter 0153  
                             ?_OpenPWM1 0060              enviarEstadoConsola@dutyPWM 0108  
                               ?_LowIsr 0001                     _dutyPWMlimitTimeout 0039  
                        ?i1_comenzarADC 0001                                 ?___lmul 0060  
                               ?___wmul 0060                                 ?_getADC 0003  
                               _CCP1CON 000FBD                    __size_of_setActuador 009E  
                        ___lmul@product 0068                     __size_of_ConvertADC 0004  
                      ??_borrarBufferRx 0060                           _banderaParser 00D8  
             enviarEstadoConsola@buffer 0092                       _retornoParametros 00DB  
                       __CFG_VREGEN$OFF 000000                                 _ReadADC 2EA4  
                            ??_OpenPWM1 0061                               ?_parserRx 0001  
                               _OpenADC 2918                                 __Hparam 0000  
                          _dentroDeStep 0028                     __size_of_SetChanADC 001C  
                               __Lparam 0000                         __size_of_LowIsr 02C2  
                               ___aldiv 1C3E                         __size_of___lmul 009C  
                               _iError1 0029                                 _iError2 002D  
                               ___lldiv 22E2                         __size_of___wmul 0062  
                       __size_of_getADC 0018                                 ___llmod 24C6  
                               _calcPID 150A                                 ___lwdiv 259C  
                               ___lwmod 280E                           ?i1_ConvertADC 0001  
           __end_of_enviarEstadoConsola 1036                            __psmallconst 0800  
                            _dutyPWMmin 00C4                                 __pcinit 2780  
                               __ramtop 0800                                 _dirStep 00C0  
                   __size_of_OpenTimer1 0034                     __size_of_OpenTimer2 0022  
                               __ptext0 17FA                                 __ptext1 20A0  
                               __ptext2 2CFE                                 __ptext3 2AC4  
                               __ptext4 1036                                 __ptext5 2646  
                               __ptext6 2E96                                 __ptext7 21C8  
                               __ptext8 2A02                                 __ptext9 1DEA  
                               _lastTIK 00CC                               _T1CONbits 000FCD  
                   calcPID@lastErrorPtr 008E                               _T2CONbits 000FCA  
                               _dutyPWM 00DD                                 _isdigit 2C4E  
                               _setDUTY 2E96                        ___aldiv@dividend 0060  
                               _sendStr 2A64                                 _verbose 00DC  
                        OpenADC@config2 0061                    end_of_initialization 2804  
               enviarEstadoConsola@ctrl 010C                            ?_ConfigUSART 0001  
                        _reset_integral 2D32                                 itoa@buf 0071  
                               itoa@val 0073                           __Lmediumconst 0000  
                               ltoa@buf 0087                                 ltoa@val 0089  
                         ?i1_SetChanADC 0001                              ??_parserRx 007A  
                       ___lldiv@divisor 0070                         ??i1_comenzarADC 0003  
                       ___lldiv@counter 0079                               _RCSTAbits 000FAB  
                      ___aldiv@quotient 006B                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc2 000FDE                          ??i1_ConvertADC 0001  
                               utoa@buf 0068                                 utoa@val 006A  
                         controlador@Kd 0110                           controlador@Ki 010C  
                         controlador@Kp 0108                           controlador@dt 0104  
                             _PORTDbits 000F83                      controlador@dirGiro 0116  
                             _TRISCbits 000F94                __size_of_accionDeControl 0128  
                    controlador@dutyPWM 0114                  __end_of_reset_integral 2D64  
                          ??_ConvertADC 0060                __end_ofi1_borrarBufferRx 2C4E  
                        ??i1_SetChanADC 0002                               _TXSTAbits 000FAC  
                         ??_comenzarADC 0062                          __end_of_LowIsr 02DA  
                             _ConfigADC 2CC8               __size_ofi1_reset_integral 0032  
                        __end_of___lmul 2780                               _ConfigPWM 2C8C  
                        __end_of___wmul 2A64                          __end_of_getADC 2E4E  
                           _BAUDCONbits 000FB8                           __pidataCOMRAM 2EAE  
                    __end_of_ConvertADC 2EBE                            ??_SetChanADC 0061  
                   start_initialization 2780                               _ReadUSART 2DE2  
                             _SetDCPWM1 2BC6                         SetDCPWM1@DCycle 0064  
                       ?_reset_integral 0001                           ??_controlador 00AA  
                          ??_OpenTimer1 0061                            ??_OpenTimer2 0061  
                             _OpenUSART 2898                         ___llmod@divisor 0064  
                       ___llmod@counter 0069                       i1borrarBufferRx@i 0002  
                              ??_LowIsr 0007                      __end_of_SetChanADC 2E1C  
                     __size_of_OpenPWM1 0010                                ??___lmul 0068  
                         calcPID@dError 00A2                                ??___wmul 0064  
                              ??_getADC 0007                              ?_ConfigADC 0001  
                           __pdataBANK0 00E1                             __pdataBANK1 0153  
                            ?_ConfigPWM 0001                        __CFG_LPT1OSC$OFF 000000  
                   __end_of_comenzarADC 2E36                      __end_of_OpenTimer1 2D32  
                    __end_of_OpenTimer2 2DE2                           calcPID@output 009E  
                           __pbssCOMRAM 0021                              ?_ReadUSART 0001  
                         __pcstackBANK0 0060                           __pcstackBANK1 0100  
                            ?_SetDCPWM1 0060                     __end_of__stringdata 086F  
                          _isdigit$1965 0062                    __end_ofi1_ConvertADC 2EC2  
                            ?_OpenUSART 0060                            _dutyPWMlimit 00E9  
                     ??_accionDeControl 006E                    __size_of_ConfigUSART 002A  
                              ?_ReadADC 0001                     __end_of_controlador 1C3E  
                     OpenADC@portconfig 0062                                ?_OpenADC 0060  
                             calcPID@Kd 008A                               calcPID@Ki 0086  
                             calcPID@Kp 0082                               calcPID@dt 007E  
                      ___lwdiv@dividend 0060                           ??_setActuador 006D  
                     __size_of_parserRx 04D4                  accionDeControl@dirGiro 006D  
                              ?___aldiv 0060                                ?___lldiv 006C  
                              ?___llmod 0060                                ?_calcPID 007A  
                              ?___lwdiv 0060                                ?___lwmod 0060  
                           __pintcodelo 0018                             __smallconst 0800  
                  __end_ofi1_SetChanADC 2E62                               _controlOn 00F2  
                              ?_isdigit 0060                                ?_setDUTY 0066  
                              ?_sendStr 0060                        ___lwdiv@quotient 0066  
                        __size_of_ultoa 0150                         ___aldiv@divisor 0064  
                       ___aldiv@counter 0069                          ___wmul@product 0064  
                         OpenADC@config 0060                                _IPR1bits 000F9F  
                              _PIE1bits 000F9D                                i1u200_20 027C  
                              i1u200_21 027A                                i1u201_20 0286  
                              i1u201_21 0284                                i1u202_20 0290  
                              i1u202_21 028E                                i1u191_20 0064  
                              i1u191_21 0062                                i1u192_20 006C  
                              i1u192_21 006A                                i1u193_20 0090  
                              i1u193_21 008E                                i1u194_20 01CC  
                              i1u194_21 01CA                                i1u195_20 01E6  
                              i1u195_21 01E4                                i1u196_20 01FA  
                              i1u196_21 01F8                                i1u197_20 0216  
                              i1u197_21 0214                                i1u198_20 0268  
                              i1u198_21 0266                                i1u199_20 0272  
                              i1u199_21 0270                                _PIR1bits 000F9E  
                              _RCONbits 000FD0                        __CFG_WDTPS$32768 000000  
                           _comenzarADC 2E1C                             ??_ConfigADC 0065  
                      i1_reset_integral 2D64                             ??_ConfigPWM 0066  
       enviarEstadoConsola@dutyPWMlimit 0135                     __end_of_setActuador 26E4  
                            _ADCON0bits 000FC2                             __stringdata 0800  
                     ___wmul@multiplier 0060            __size_of_enviarEstadoConsola 07C6  
                           ??_ReadUSART 0001                             ??_SetDCPWM1 0062  
                     ___lmul@multiplier 0060                             _INTCON2bits 000FF1  
                             copy_data0 27B8                               copy_data1 27D8  
                             copy_data2 27F8                             _controlador 1A26  
                     ?i1_borrarBufferRx 0001                             ??_OpenUSART 0063  
                    SetDCPWM1@dutycycle 0060                 __size_of_borrarBufferRx 005A  
                       OpenUSART@config 0060                      ??i1_borrarBufferRx 0001  
         enviarEstadoConsola@dutyPWMmin 0131                                _OpenPWM1 2E86  
                      __size_of_ReadADC 000A                                __Hrparam 0000  
                      __size_of_OpenADC 0080                                __Lrparam 0000  
                 __end_ofi1_comenzarADC 2E86                        __size_of___aldiv 01AC  
                      __size_of___lldiv 010A                        __size_of___llmod 00D6  
                      __size_of_calcPID 02F0                        __size_of___lwdiv 00AA  
                      __size_of___lwmod 008A                        ??_reset_integral 0060  
                        OpenPWM1@period 0060                               parserRx@j 008A  
                 __size_ofi1_ConvertADC 0004                        __size_of_isdigit 003E  
                      __size_of_setDUTY 000E                         ___lwdiv@divisor 0062  
                       ___lwdiv@counter 0065                        __size_of_sendStr 0060  
                              __ptext10 2C4E                                __ptext11 2D32  
                              __ptext20 2A64                                __ptext12 0870  
                              __ptext21 2D96                                __ptext13 2B76  
                              __ptext30 150A                                __ptext22 2898  
                              __ptext14 23EC                                __ptext31 22E2  
                              __ptext23 2C8C                                __ptext15 280E  
                              __ptext40 2D64                                __ptext32 26E4  
                              __ptext24 2E86                                __ptext16 259C  
                              __ptext41 2E74                                __ptext33 2E1C  
                              __ptext25 2DC0                                __ptext17 2998  
                              __ptext42 2E4E                                __ptext34 2EBA  
                              __ptext26 2BC6                                __ptext18 1F50  
                              __ptext43 2EBE                                __ptext35 2E00  
                              __ptext27 1A26                                __ptext19 24C6  
                              __ptext44 2DE2                                __ptext36 2CC8  
                              __ptext28 1C3E                                __ptext45 2E36  
                              __ptext37 2918                                __ptext29 2B1E  
                              __ptext46 2EA4                                __ptext39 2C0E  
                         __size_of_labs 0058                           __size_of_atoi 011A  
                         __size_of_atol 0166                           __size_of_main 022C  
                         __size_of_itoa 0050                           __size_of_ltoa 006A  
                         __size_of_utoa 00DA                                _parserRx 1036  
                      calcPID@iErrorPtr 0090                                _setPoint 003D  
                           _setActuador 2646                                _posicion 00ED  
                              atoi@sign 006B                          sendStr@dataPtr 0060  
                      controlador@error 0100                                atol@sign 0074  
                 __size_ofi1_SetChanADC 0014                            i1_ConvertADC 2EBE  
          enviarEstadoConsola@controlOn 0128                   __CFG_CPUDIV$OSC1_PLL2 000000  
              enviarEstadoConsola@error 0104                              _INTCONbits 000FF2  
                       _accionDeControl 20A0                          OpenUSART@spbrg 0061  
                              itoa@base 0075                                isdigit@c 0060  
                             ultoa@base 0080                                intlevel1 0000  
                              ltoa@base 008D                        ___lwmod@dividend 0060  
                      ___lldiv@dividend 006C                       SetChanADC@channel 0060  
                          i1_SetChanADC 2E4E                _contadorCiclosControlOff 0025  
                              utoa@base 006C                                ultoa@buf 007A  
                              ultoa@val 007C                            _potenciaStep 00D0  
                      ___lldiv@quotient 0075                         ___lwmod@divisor 0062  
                       ___lwmod@counter 0065                            ___aldiv@sign 006A  
                         ??_ConfigUSART 0063                __end_ofi1_reset_integral 2D96  
                        _borrarBufferRx 2AC4                            _USART_Status 0027  
                   _enviarEstadoConsola 0870                     _controlAntesDelStep 00F1  
